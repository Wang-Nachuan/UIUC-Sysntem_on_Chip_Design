<profile>

<section name = "Vivado HLS Report for 'vector_multiplier'" level="0">
<item name = "Date">Sun Oct 18 11:01:16 2020
</item>
<item name = "Version">2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)</item>
<item name = "Project">accelerator_hls</item>
<item name = "Solution">vector_multiplier</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020-clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00, 8.750, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">79, 79, 79, 79, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- Loop 1">66, 66, 4, 1, 1, 64, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, 3, 0, 60, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">6, -, 1718, 2036, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 152, -</column>
<column name="Register">0, -, 276, 32, -</column>
<specialColumn name="Available">280, 220, 106400, 53200, 0</specialColumn>
<specialColumn name="Utilization (%)">2, 1, 1, 4, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="vector_multiplier_CTL_s_axi_U">vector_multiplier_CTL_s_axi, 0, 0, 182, 296, 0</column>
<column name="vector_multiplier_DATA_A_m_axi_U">vector_multiplier_DATA_A_m_axi, 2, 0, 512, 580, 0</column>
<column name="vector_multiplier_DATA_B_m_axi_U">vector_multiplier_DATA_B_m_axi, 2, 0, 512, 580, 0</column>
<column name="vector_multiplier_DATA_C_m_axi_U">vector_multiplier_DATA_C_m_axi, 2, 0, 512, 580, 0</column>
</table>
</item>
<item name = "DSP48E"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="mul_ln9_fu_237_p2">*, 3, 0, 20, 32, 32</column>
<column name="i_fu_231_p2">+, 0, 0, 15, 7, 1</column>
<column name="ap_block_pp0_stage0_01001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state12_io">and, 0, 0, 2, 1, 1</column>
<column name="icmp_ln7_fu_225_p2">icmp, 0, 0, 11, 7, 8</column>
<column name="ap_block_pp0_stage0_11001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state10_pp0_stage0_iter1">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state2_io">or, 0, 0, 2, 1, 1</column>
<column name="ap_enable_pp0">xor, 0, 0, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">xor, 0, 0, 2, 2, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="DATA_A_blk_n_AR">9, 2, 1, 2</column>
<column name="DATA_A_blk_n_R">9, 2, 1, 2</column>
<column name="DATA_B_blk_n_AR">9, 2, 1, 2</column>
<column name="DATA_B_blk_n_R">9, 2, 1, 2</column>
<column name="DATA_C_blk_n_AW">9, 2, 1, 2</column>
<column name="DATA_C_blk_n_B">9, 2, 1, 2</column>
<column name="DATA_C_blk_n_W">9, 2, 1, 2</column>
<column name="ap_NS_fsm">62, 15, 1, 15</column>
<column name="ap_enable_reg_pp0_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter3">9, 2, 1, 2</column>
<column name="i_0_reg_154">9, 2, 7, 14</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="DATA_A_addr_read_reg_283">32, 0, 32, 0</column>
<column name="DATA_B_addr_read_reg_288">32, 0, 32, 0</column>
<column name="a1_reg_251">30, 0, 30, 0</column>
<column name="ap_CS_fsm">14, 0, 14, 0</column>
<column name="ap_enable_reg_pp0_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter3">1, 0, 1, 0</column>
<column name="b3_reg_246">30, 0, 30, 0</column>
<column name="c5_reg_241">30, 0, 30, 0</column>
<column name="i_0_reg_154">7, 0, 7, 0</column>
<column name="icmp_ln7_reg_274">1, 0, 1, 0</column>
<column name="mul_ln9_reg_293">32, 0, 32, 0</column>
<column name="icmp_ln7_reg_274">64, 32, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="s_axi_CTL_AWVALID">in, 1, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_AWREADY">out, 1, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_AWADDR">in, 6, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_WVALID">in, 1, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_WREADY">out, 1, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_WDATA">in, 32, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_WSTRB">in, 4, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_ARVALID">in, 1, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_ARREADY">out, 1, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_ARADDR">in, 6, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_RVALID">out, 1, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_RREADY">in, 1, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_RDATA">out, 32, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_RRESP">out, 2, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_BVALID">out, 1, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_BREADY">in, 1, s_axi, CTL, scalar</column>
<column name="s_axi_CTL_BRESP">out, 2, s_axi, CTL, scalar</column>
<column name="ap_clk">in, 1, ap_ctrl_hs, vector_multiplier, return value</column>
<column name="ap_rst_n">in, 1, ap_ctrl_hs, vector_multiplier, return value</column>
<column name="interrupt">out, 1, ap_ctrl_hs, vector_multiplier, return value</column>
<column name="m_axi_DATA_A_AWVALID">out, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_AWREADY">in, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_AWADDR">out, 32, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_AWID">out, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_AWLEN">out, 8, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_AWSIZE">out, 3, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_AWBURST">out, 2, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_AWLOCK">out, 2, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_AWCACHE">out, 4, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_AWPROT">out, 3, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_AWQOS">out, 4, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_AWREGION">out, 4, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_AWUSER">out, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_WVALID">out, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_WREADY">in, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_WDATA">out, 32, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_WSTRB">out, 4, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_WLAST">out, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_WID">out, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_WUSER">out, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARVALID">out, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARREADY">in, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARADDR">out, 32, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARID">out, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARLEN">out, 8, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARSIZE">out, 3, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARBURST">out, 2, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARLOCK">out, 2, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARCACHE">out, 4, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARPROT">out, 3, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARQOS">out, 4, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARREGION">out, 4, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_ARUSER">out, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_RVALID">in, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_RREADY">out, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_RDATA">in, 32, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_RLAST">in, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_RID">in, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_RUSER">in, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_RRESP">in, 2, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_BVALID">in, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_BREADY">out, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_BRESP">in, 2, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_BID">in, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_A_BUSER">in, 1, m_axi, DATA_A, pointer</column>
<column name="m_axi_DATA_B_AWVALID">out, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_AWREADY">in, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_AWADDR">out, 32, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_AWID">out, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_AWLEN">out, 8, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_AWSIZE">out, 3, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_AWBURST">out, 2, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_AWLOCK">out, 2, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_AWCACHE">out, 4, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_AWPROT">out, 3, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_AWQOS">out, 4, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_AWREGION">out, 4, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_AWUSER">out, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_WVALID">out, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_WREADY">in, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_WDATA">out, 32, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_WSTRB">out, 4, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_WLAST">out, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_WID">out, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_WUSER">out, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARVALID">out, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARREADY">in, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARADDR">out, 32, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARID">out, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARLEN">out, 8, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARSIZE">out, 3, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARBURST">out, 2, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARLOCK">out, 2, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARCACHE">out, 4, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARPROT">out, 3, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARQOS">out, 4, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARREGION">out, 4, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_ARUSER">out, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_RVALID">in, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_RREADY">out, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_RDATA">in, 32, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_RLAST">in, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_RID">in, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_RUSER">in, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_RRESP">in, 2, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_BVALID">in, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_BREADY">out, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_BRESP">in, 2, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_BID">in, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_B_BUSER">in, 1, m_axi, DATA_B, pointer</column>
<column name="m_axi_DATA_C_AWVALID">out, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_AWREADY">in, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_AWADDR">out, 32, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_AWID">out, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_AWLEN">out, 8, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_AWSIZE">out, 3, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_AWBURST">out, 2, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_AWLOCK">out, 2, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_AWCACHE">out, 4, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_AWPROT">out, 3, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_AWQOS">out, 4, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_AWREGION">out, 4, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_AWUSER">out, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_WVALID">out, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_WREADY">in, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_WDATA">out, 32, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_WSTRB">out, 4, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_WLAST">out, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_WID">out, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_WUSER">out, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARVALID">out, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARREADY">in, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARADDR">out, 32, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARID">out, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARLEN">out, 8, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARSIZE">out, 3, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARBURST">out, 2, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARLOCK">out, 2, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARCACHE">out, 4, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARPROT">out, 3, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARQOS">out, 4, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARREGION">out, 4, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_ARUSER">out, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_RVALID">in, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_RREADY">out, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_RDATA">in, 32, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_RLAST">in, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_RID">in, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_RUSER">in, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_RRESP">in, 2, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_BVALID">in, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_BREADY">out, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_BRESP">in, 2, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_BID">in, 1, m_axi, DATA_C, pointer</column>
<column name="m_axi_DATA_C_BUSER">in, 1, m_axi, DATA_C, pointer</column>
</table>
</item>
</section>
</profile>
