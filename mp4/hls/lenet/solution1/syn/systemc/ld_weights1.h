// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ld_weights1_HH_
#define _ld_weights1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct ld_weights1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > weights1_address0;
    sc_out< sc_logic > weights1_ce0;
    sc_in< sc_lv<32> > weights1_q0;
    sc_out< sc_lv<8> > weights1_buf_0_address0;
    sc_out< sc_logic > weights1_buf_0_ce0;
    sc_out< sc_logic > weights1_buf_0_we0;
    sc_out< sc_lv<32> > weights1_buf_0_d0;


    // Module declarations
    ld_weights1(sc_module_name name);
    SC_HAS_PROCESS(ld_weights1);

    ~ld_weights1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_fu_92_p2;
    sc_signal< sc_lv<3> > i_reg_192;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > add_ln182_fu_114_p2;
    sc_signal< sc_lv<6> > add_ln182_reg_197;
    sc_signal< sc_lv<1> > icmp_ln179_fu_86_p2;
    sc_signal< sc_lv<3> > j_fu_126_p2;
    sc_signal< sc_lv<3> > j_reg_205;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > add_ln182_2_fu_157_p2;
    sc_signal< sc_lv<9> > add_ln182_2_reg_210;
    sc_signal< sc_lv<1> > icmp_ln180_fu_120_p2;
    sc_signal< sc_lv<3> > k_fu_169_p2;
    sc_signal< sc_lv<3> > k_reg_218;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > zext_ln182_6_fu_184_p1;
    sc_signal< sc_lv<64> > zext_ln182_6_reg_223;
    sc_signal< sc_lv<1> > icmp_ln181_fu_163_p2;
    sc_signal< sc_lv<3> > i_0_reg_53;
    sc_signal< sc_lv<3> > j_0_reg_64;
    sc_signal< sc_lv<3> > k_0_reg_75;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > tmp_fu_102_p3;
    sc_signal< sc_lv<6> > zext_ln182_fu_98_p1;
    sc_signal< sc_lv<6> > zext_ln182_1_fu_110_p1;
    sc_signal< sc_lv<6> > zext_ln182_2_fu_132_p1;
    sc_signal< sc_lv<6> > add_ln182_1_fu_136_p2;
    sc_signal< sc_lv<8> > tmp_3_fu_145_p3;
    sc_signal< sc_lv<9> > zext_ln182_4_fu_153_p1;
    sc_signal< sc_lv<9> > zext_ln182_3_fu_141_p1;
    sc_signal< sc_lv<9> > zext_ln182_5_fu_175_p1;
    sc_signal< sc_lv<9> > add_ln182_3_fu_179_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln182_1_fu_136_p2();
    void thread_add_ln182_2_fu_157_p2();
    void thread_add_ln182_3_fu_179_p2();
    void thread_add_ln182_fu_114_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_92_p2();
    void thread_icmp_ln179_fu_86_p2();
    void thread_icmp_ln180_fu_120_p2();
    void thread_icmp_ln181_fu_163_p2();
    void thread_j_fu_126_p2();
    void thread_k_fu_169_p2();
    void thread_tmp_3_fu_145_p3();
    void thread_tmp_fu_102_p3();
    void thread_weights1_address0();
    void thread_weights1_buf_0_address0();
    void thread_weights1_buf_0_ce0();
    void thread_weights1_buf_0_d0();
    void thread_weights1_buf_0_we0();
    void thread_weights1_ce0();
    void thread_zext_ln182_1_fu_110_p1();
    void thread_zext_ln182_2_fu_132_p1();
    void thread_zext_ln182_3_fu_141_p1();
    void thread_zext_ln182_4_fu_153_p1();
    void thread_zext_ln182_5_fu_175_p1();
    void thread_zext_ln182_6_fu_184_p1();
    void thread_zext_ln182_fu_98_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
