// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ld_weights5_HH_
#define _ld_weights5_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct ld_weights5 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<16> > weights5_address0;
    sc_out< sc_logic > weights5_ce0;
    sc_in< sc_lv<32> > weights5_q0;
    sc_out< sc_lv<16> > weights5_buf_address0;
    sc_out< sc_logic > weights5_buf_ce0;
    sc_out< sc_logic > weights5_buf_we0;
    sc_out< sc_lv<32> > weights5_buf_d0;


    // Module declarations
    ld_weights5(sc_module_name name);
    SC_HAS_PROCESS(ld_weights5);

    ~ld_weights5();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > i_fu_119_p2;
    sc_signal< sc_lv<7> > i_reg_252;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > zext_ln202_fu_133_p1;
    sc_signal< sc_lv<12> > zext_ln202_reg_257;
    sc_signal< sc_lv<1> > icmp_ln201_fu_113_p2;
    sc_signal< sc_lv<5> > j_fu_143_p2;
    sc_signal< sc_lv<5> > j_reg_265;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > add_ln205_1_fu_174_p2;
    sc_signal< sc_lv<64> > add_ln205_1_reg_270;
    sc_signal< sc_lv<1> > icmp_ln202_fu_137_p2;
    sc_signal< sc_lv<3> > k_fu_186_p2;
    sc_signal< sc_lv<3> > k_reg_278;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<17> > add_ln205_3_fu_217_p2;
    sc_signal< sc_lv<17> > add_ln205_3_reg_283;
    sc_signal< sc_lv<1> > icmp_ln203_fu_180_p2;
    sc_signal< sc_lv<3> > l_fu_229_p2;
    sc_signal< sc_lv<3> > l_reg_291;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > zext_ln205_5_fu_244_p1;
    sc_signal< sc_lv<64> > zext_ln205_5_reg_296;
    sc_signal< sc_lv<1> > icmp_ln204_fu_223_p2;
    sc_signal< sc_lv<7> > i_0_reg_69;
    sc_signal< sc_lv<5> > j_0_reg_80;
    sc_signal< sc_lv<3> > k_0_reg_91;
    sc_signal< sc_lv<3> > l_0_reg_102;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<11> > tmp_fu_125_p3;
    sc_signal< sc_lv<12> > zext_ln205_fu_149_p1;
    sc_signal< sc_lv<12> > add_ln205_fu_153_p2;
    sc_signal< sc_lv<14> > tmp_1_fu_162_p3;
    sc_signal< sc_lv<64> > zext_ln205_1_fu_158_p1;
    sc_signal< sc_lv<64> > zext_ln205_3_fu_170_p1;
    sc_signal< sc_lv<64> > zext_ln205_2_fu_192_p1;
    sc_signal< sc_lv<64> > add_ln205_2_fu_196_p2;
    sc_signal< sc_lv<15> > trunc_ln205_1_fu_205_p1;
    sc_signal< sc_lv<17> > trunc_ln205_fu_201_p1;
    sc_signal< sc_lv<17> > p_shl1_cast_fu_209_p3;
    sc_signal< sc_lv<17> > zext_ln205_4_fu_235_p1;
    sc_signal< sc_lv<17> > add_ln205_4_fu_239_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<7> ap_const_lv7_78;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln205_1_fu_174_p2();
    void thread_add_ln205_2_fu_196_p2();
    void thread_add_ln205_3_fu_217_p2();
    void thread_add_ln205_4_fu_239_p2();
    void thread_add_ln205_fu_153_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_119_p2();
    void thread_icmp_ln201_fu_113_p2();
    void thread_icmp_ln202_fu_137_p2();
    void thread_icmp_ln203_fu_180_p2();
    void thread_icmp_ln204_fu_223_p2();
    void thread_j_fu_143_p2();
    void thread_k_fu_186_p2();
    void thread_l_fu_229_p2();
    void thread_p_shl1_cast_fu_209_p3();
    void thread_tmp_1_fu_162_p3();
    void thread_tmp_fu_125_p3();
    void thread_trunc_ln205_1_fu_205_p1();
    void thread_trunc_ln205_fu_201_p1();
    void thread_weights5_address0();
    void thread_weights5_buf_address0();
    void thread_weights5_buf_ce0();
    void thread_weights5_buf_d0();
    void thread_weights5_buf_we0();
    void thread_weights5_ce0();
    void thread_zext_ln202_fu_133_p1();
    void thread_zext_ln205_1_fu_158_p1();
    void thread_zext_ln205_2_fu_192_p1();
    void thread_zext_ln205_3_fu_170_p1();
    void thread_zext_ln205_4_fu_235_p1();
    void thread_zext_ln205_5_fu_244_p1();
    void thread_zext_ln205_fu_149_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
