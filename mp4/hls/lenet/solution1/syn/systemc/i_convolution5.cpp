// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "i_convolution5.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic i_convolution5::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic i_convolution5::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> i_convolution5::ap_ST_fsm_state1 = "1";
const sc_lv<23> i_convolution5::ap_ST_fsm_state2 = "10";
const sc_lv<23> i_convolution5::ap_ST_fsm_state3 = "100";
const sc_lv<23> i_convolution5::ap_ST_fsm_state4 = "1000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state5 = "10000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state6 = "100000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> i_convolution5::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> i_convolution5::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> i_convolution5::ap_const_lv32_1 = "1";
const sc_lv<1> i_convolution5::ap_const_lv1_0 = "0";
const sc_lv<32> i_convolution5::ap_const_lv32_2 = "10";
const sc_lv<1> i_convolution5::ap_const_lv1_1 = "1";
const sc_lv<32> i_convolution5::ap_const_lv32_3 = "11";
const sc_lv<32> i_convolution5::ap_const_lv32_4 = "100";
const sc_lv<32> i_convolution5::ap_const_lv32_5 = "101";
const sc_lv<32> i_convolution5::ap_const_lv32_6 = "110";
const sc_lv<32> i_convolution5::ap_const_lv32_A = "1010";
const sc_lv<32> i_convolution5::ap_const_lv32_F = "1111";
const sc_lv<32> i_convolution5::ap_const_lv32_10 = "10000";
const sc_lv<32> i_convolution5::ap_const_lv32_15 = "10101";
const sc_lv<7> i_convolution5::ap_const_lv7_0 = "0000000";
const sc_lv<32> i_convolution5::ap_const_lv32_16 = "10110";
const sc_lv<3> i_convolution5::ap_const_lv3_0 = "000";
const sc_lv<5> i_convolution5::ap_const_lv5_0 = "00000";
const sc_lv<32> i_convolution5::ap_const_lv32_B = "1011";
const sc_lv<32> i_convolution5::ap_const_lv32_11 = "10001";
const sc_lv<32> i_convolution5::ap_const_lv32_7 = "111";
const sc_lv<7> i_convolution5::ap_const_lv7_78 = "1111000";
const sc_lv<7> i_convolution5::ap_const_lv7_1 = "1";
const sc_lv<4> i_convolution5::ap_const_lv4_0 = "0000";
const sc_lv<3> i_convolution5::ap_const_lv3_5 = "101";
const sc_lv<3> i_convolution5::ap_const_lv3_1 = "1";
const sc_lv<5> i_convolution5::ap_const_lv5_10 = "10000";
const sc_lv<5> i_convolution5::ap_const_lv5_1 = "1";
const sc_lv<2> i_convolution5::ap_const_lv2_0 = "00";
const bool i_convolution5::ap_const_boolean_1 = true;

i_convolution5::i_convolution5(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lenet_top_fadd_32bkb_U36 = new lenet_top_fadd_32bkb<1,5,32,32,32>("lenet_top_fadd_32bkb_U36");
    lenet_top_fadd_32bkb_U36->clk(ap_clk);
    lenet_top_fadd_32bkb_U36->reset(ap_rst);
    lenet_top_fadd_32bkb_U36->din0(grp_fu_184_p0);
    lenet_top_fadd_32bkb_U36->din1(grp_fu_184_p1);
    lenet_top_fadd_32bkb_U36->ce(ap_var_for_const0);
    lenet_top_fadd_32bkb_U36->dout(grp_fu_184_p2);
    lenet_top_fmul_32cud_U37 = new lenet_top_fmul_32cud<1,4,32,32,32>("lenet_top_fmul_32cud_U37");
    lenet_top_fmul_32cud_U37->clk(ap_clk);
    lenet_top_fmul_32cud_U37->reset(ap_rst);
    lenet_top_fmul_32cud_U37->din0(weights_load_reg_487);
    lenet_top_fmul_32cud_U37->din1(input_load_reg_492);
    lenet_top_fmul_32cud_U37->ce(ap_var_for_const0);
    lenet_top_fmul_32cud_U37->dout(grp_fu_190_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln131_1_fu_300_p2);
    sensitive << ( zext_ln128_reg_426 );
    sensitive << ( add_ln131_fu_294_p2 );

    SC_METHOD(thread_add_ln131_2_fu_317_p2);
    sensitive << ( p_shl2_cast_fu_309_p3 );
    sensitive << ( zext_ln131_5_fu_305_p1 );

    SC_METHOD(thread_add_ln131_3_fu_323_p2);
    sensitive << ( zext_ln130_1_reg_449 );
    sensitive << ( add_ln131_2_fu_317_p2 );

    SC_METHOD(thread_add_ln131_4_fu_328_p2);
    sensitive << ( zext_ln126_reg_408 );
    sensitive << ( zext_ln131_2_fu_274_p1 );

    SC_METHOD(thread_add_ln131_5_fu_349_p2);
    sensitive << ( zext_ln131_8_fu_345_p1 );
    sensitive << ( zext_ln131_7_fu_333_p1 );

    SC_METHOD(thread_add_ln131_6_fu_355_p2);
    sensitive << ( zext_ln131_1_reg_421 );
    sensitive << ( add_ln131_5_fu_349_p2 );

    SC_METHOD(thread_add_ln131_7_fu_379_p2);
    sensitive << ( trunc_ln131_reg_467 );
    sensitive << ( p_shl_cast_fu_372_p3 );

    SC_METHOD(thread_add_ln131_8_fu_384_p2);
    sensitive << ( zext_ln130_reg_444 );
    sensitive << ( add_ln131_7_fu_379_p2 );

    SC_METHOD(thread_add_ln131_fu_294_p2);
    sensitive << ( zext_ln131_4_fu_290_p1 );
    sensitive << ( zext_ln131_3_fu_278_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln123_fu_194_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln123_fu_194_p2 );

    SC_METHOD(thread_bias_address0);
    sensitive << ( zext_ln131_reg_402 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ci_fu_268_p2);
    sensitive << ( ci_0_reg_173 );

    SC_METHOD(thread_co_fu_200_p2);
    sensitive << ( co_0_reg_104 );

    SC_METHOD(thread_grp_fu_184_p0);
    sensitive << ( sum_0_reg_126 );
    sensitive << ( sum_2_reg_161 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_184_p1);
    sensitive << ( tmp_3_reg_497 );
    sensitive << ( bias_load_reg_507 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_icmp_ln123_fu_194_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_0_reg_104 );

    SC_METHOD(thread_icmp_ln126_fu_222_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_0_reg_115 );

    SC_METHOD(thread_icmp_ln128_fu_242_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_0_reg_150 );

    SC_METHOD(thread_icmp_ln130_fu_262_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ci_0_reg_173 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln131_6_fu_368_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_m_fu_228_p2);
    sensitive << ( i_0_reg_115 );

    SC_METHOD(thread_n_fu_248_p2);
    sensitive << ( j_0_reg_150 );

    SC_METHOD(thread_output_0_0_address0);
    sensitive << ( zext_ln131_reg_402 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_0_0_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_0_0_d0);
    sensitive << ( tmp_reg_512 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_0_0_we0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_p_shl2_cast_fu_309_p3);
    sensitive << ( add_ln131_1_fu_300_p2 );

    SC_METHOD(thread_p_shl_cast_fu_372_p3);
    sensitive << ( trunc_ln131_1_reg_472 );

    SC_METHOD(thread_tmp_10_fu_282_p3);
    sensitive << ( ci_0_reg_173 );

    SC_METHOD(thread_tmp_12_fu_337_p3);
    sensitive << ( add_ln131_4_fu_328_p2 );

    SC_METHOD(thread_tmp_s_fu_210_p3);
    sensitive << ( co_0_reg_104 );

    SC_METHOD(thread_trunc_ln131_1_fu_364_p1);
    sensitive << ( add_ln131_6_fu_355_p2 );

    SC_METHOD(thread_trunc_ln131_fu_360_p1);
    sensitive << ( add_ln131_6_fu_355_p2 );

    SC_METHOD(thread_weights_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln131_9_fu_389_p1 );

    SC_METHOD(thread_weights_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_zext_ln126_fu_218_p1);
    sensitive << ( tmp_s_fu_210_p3 );

    SC_METHOD(thread_zext_ln128_fu_238_p1);
    sensitive << ( i_0_reg_115 );

    SC_METHOD(thread_zext_ln130_1_fu_258_p1);
    sensitive << ( j_0_reg_150 );

    SC_METHOD(thread_zext_ln130_fu_254_p1);
    sensitive << ( j_0_reg_150 );

    SC_METHOD(thread_zext_ln131_1_fu_234_p1);
    sensitive << ( i_0_reg_115 );

    SC_METHOD(thread_zext_ln131_2_fu_274_p1);
    sensitive << ( ci_0_reg_173 );

    SC_METHOD(thread_zext_ln131_3_fu_278_p1);
    sensitive << ( ci_0_reg_173 );

    SC_METHOD(thread_zext_ln131_4_fu_290_p1);
    sensitive << ( tmp_10_fu_282_p3 );

    SC_METHOD(thread_zext_ln131_5_fu_305_p1);
    sensitive << ( add_ln131_1_fu_300_p2 );

    SC_METHOD(thread_zext_ln131_6_fu_368_p1);
    sensitive << ( add_ln131_3_reg_462 );

    SC_METHOD(thread_zext_ln131_7_fu_333_p1);
    sensitive << ( add_ln131_4_fu_328_p2 );

    SC_METHOD(thread_zext_ln131_8_fu_345_p1);
    sensitive << ( tmp_12_fu_337_p3 );

    SC_METHOD(thread_zext_ln131_9_fu_389_p1);
    sensitive << ( add_ln131_8_fu_384_p2 );

    SC_METHOD(thread_zext_ln131_fu_206_p1);
    sensitive << ( co_0_reg_104 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln123_fu_194_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln126_fu_222_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln128_fu_242_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln130_fu_262_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "i_convolution5_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, weights_address0, "(port)weights_address0");
    sc_trace(mVcdFile, weights_ce0, "(port)weights_ce0");
    sc_trace(mVcdFile, weights_q0, "(port)weights_q0");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_q0, "(port)bias_q0");
    sc_trace(mVcdFile, output_0_0_address0, "(port)output_0_0_address0");
    sc_trace(mVcdFile, output_0_0_ce0, "(port)output_0_0_ce0");
    sc_trace(mVcdFile, output_0_0_we0, "(port)output_0_0_we0");
    sc_trace(mVcdFile, output_0_0_d0, "(port)output_0_0_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, co_fu_200_p2, "co_fu_200_p2");
    sc_trace(mVcdFile, co_reg_397, "co_reg_397");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln131_fu_206_p1, "zext_ln131_fu_206_p1");
    sc_trace(mVcdFile, zext_ln131_reg_402, "zext_ln131_reg_402");
    sc_trace(mVcdFile, icmp_ln123_fu_194_p2, "icmp_ln123_fu_194_p2");
    sc_trace(mVcdFile, zext_ln126_fu_218_p1, "zext_ln126_fu_218_p1");
    sc_trace(mVcdFile, zext_ln126_reg_408, "zext_ln126_reg_408");
    sc_trace(mVcdFile, m_fu_228_p2, "m_fu_228_p2");
    sc_trace(mVcdFile, m_reg_416, "m_reg_416");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln131_1_fu_234_p1, "zext_ln131_1_fu_234_p1");
    sc_trace(mVcdFile, zext_ln131_1_reg_421, "zext_ln131_1_reg_421");
    sc_trace(mVcdFile, icmp_ln126_fu_222_p2, "icmp_ln126_fu_222_p2");
    sc_trace(mVcdFile, zext_ln128_fu_238_p1, "zext_ln128_fu_238_p1");
    sc_trace(mVcdFile, zext_ln128_reg_426, "zext_ln128_reg_426");
    sc_trace(mVcdFile, n_fu_248_p2, "n_fu_248_p2");
    sc_trace(mVcdFile, n_reg_439, "n_reg_439");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln130_fu_254_p1, "zext_ln130_fu_254_p1");
    sc_trace(mVcdFile, zext_ln130_reg_444, "zext_ln130_reg_444");
    sc_trace(mVcdFile, icmp_ln128_fu_242_p2, "icmp_ln128_fu_242_p2");
    sc_trace(mVcdFile, zext_ln130_1_fu_258_p1, "zext_ln130_1_fu_258_p1");
    sc_trace(mVcdFile, zext_ln130_1_reg_449, "zext_ln130_1_reg_449");
    sc_trace(mVcdFile, ci_fu_268_p2, "ci_fu_268_p2");
    sc_trace(mVcdFile, ci_reg_457, "ci_reg_457");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln131_3_fu_323_p2, "add_ln131_3_fu_323_p2");
    sc_trace(mVcdFile, add_ln131_3_reg_462, "add_ln131_3_reg_462");
    sc_trace(mVcdFile, icmp_ln130_fu_262_p2, "icmp_ln130_fu_262_p2");
    sc_trace(mVcdFile, trunc_ln131_fu_360_p1, "trunc_ln131_fu_360_p1");
    sc_trace(mVcdFile, trunc_ln131_reg_467, "trunc_ln131_reg_467");
    sc_trace(mVcdFile, trunc_ln131_1_fu_364_p1, "trunc_ln131_1_fu_364_p1");
    sc_trace(mVcdFile, trunc_ln131_1_reg_472, "trunc_ln131_1_reg_472");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, weights_load_reg_487, "weights_load_reg_487");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, input_load_reg_492, "input_load_reg_492");
    sc_trace(mVcdFile, grp_fu_190_p2, "grp_fu_190_p2");
    sc_trace(mVcdFile, tmp_3_reg_497, "tmp_3_reg_497");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_184_p2, "grp_fu_184_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, bias_load_reg_507, "bias_load_reg_507");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_reg_512, "tmp_reg_512");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, co_0_reg_104, "co_0_reg_104");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, i_0_reg_115, "i_0_reg_115");
    sc_trace(mVcdFile, sum_0_reg_126, "sum_0_reg_126");
    sc_trace(mVcdFile, sum_1_reg_138, "sum_1_reg_138");
    sc_trace(mVcdFile, j_0_reg_150, "j_0_reg_150");
    sc_trace(mVcdFile, sum_2_reg_161, "sum_2_reg_161");
    sc_trace(mVcdFile, ci_0_reg_173, "ci_0_reg_173");
    sc_trace(mVcdFile, zext_ln131_6_fu_368_p1, "zext_ln131_6_fu_368_p1");
    sc_trace(mVcdFile, zext_ln131_9_fu_389_p1, "zext_ln131_9_fu_389_p1");
    sc_trace(mVcdFile, grp_fu_184_p0, "grp_fu_184_p0");
    sc_trace(mVcdFile, grp_fu_184_p1, "grp_fu_184_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_s_fu_210_p3, "tmp_s_fu_210_p3");
    sc_trace(mVcdFile, tmp_10_fu_282_p3, "tmp_10_fu_282_p3");
    sc_trace(mVcdFile, zext_ln131_4_fu_290_p1, "zext_ln131_4_fu_290_p1");
    sc_trace(mVcdFile, zext_ln131_3_fu_278_p1, "zext_ln131_3_fu_278_p1");
    sc_trace(mVcdFile, add_ln131_fu_294_p2, "add_ln131_fu_294_p2");
    sc_trace(mVcdFile, add_ln131_1_fu_300_p2, "add_ln131_1_fu_300_p2");
    sc_trace(mVcdFile, p_shl2_cast_fu_309_p3, "p_shl2_cast_fu_309_p3");
    sc_trace(mVcdFile, zext_ln131_5_fu_305_p1, "zext_ln131_5_fu_305_p1");
    sc_trace(mVcdFile, add_ln131_2_fu_317_p2, "add_ln131_2_fu_317_p2");
    sc_trace(mVcdFile, zext_ln131_2_fu_274_p1, "zext_ln131_2_fu_274_p1");
    sc_trace(mVcdFile, add_ln131_4_fu_328_p2, "add_ln131_4_fu_328_p2");
    sc_trace(mVcdFile, tmp_12_fu_337_p3, "tmp_12_fu_337_p3");
    sc_trace(mVcdFile, zext_ln131_8_fu_345_p1, "zext_ln131_8_fu_345_p1");
    sc_trace(mVcdFile, zext_ln131_7_fu_333_p1, "zext_ln131_7_fu_333_p1");
    sc_trace(mVcdFile, add_ln131_5_fu_349_p2, "add_ln131_5_fu_349_p2");
    sc_trace(mVcdFile, add_ln131_6_fu_355_p2, "add_ln131_6_fu_355_p2");
    sc_trace(mVcdFile, p_shl_cast_fu_372_p3, "p_shl_cast_fu_372_p3");
    sc_trace(mVcdFile, add_ln131_7_fu_379_p2, "add_ln131_7_fu_379_p2");
    sc_trace(mVcdFile, add_ln131_8_fu_384_p2, "add_ln131_8_fu_384_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

i_convolution5::~i_convolution5() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lenet_top_fadd_32bkb_U36;
    delete lenet_top_fmul_32cud_U37;
}

void i_convolution5::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void i_convolution5::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln128_fu_242_p2.read()))) {
        ci_0_reg_173 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ci_0_reg_173 = ci_reg_457.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        co_0_reg_104 = co_reg_397.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_0_reg_104 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln128_fu_242_p2.read()))) {
        i_0_reg_115 = m_reg_416.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln123_fu_194_p2.read(), ap_const_lv1_0))) {
        i_0_reg_115 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln130_fu_262_p2.read()))) {
        j_0_reg_150 = n_reg_439.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln126_fu_222_p2.read()))) {
        j_0_reg_150 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln128_fu_242_p2.read()))) {
        sum_0_reg_126 = sum_1_reg_138.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln123_fu_194_p2.read(), ap_const_lv1_0))) {
        sum_0_reg_126 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln130_fu_262_p2.read()))) {
        sum_1_reg_138 = sum_2_reg_161.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln126_fu_222_p2.read()))) {
        sum_1_reg_138 = sum_0_reg_126.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln128_fu_242_p2.read()))) {
        sum_2_reg_161 = sum_1_reg_138.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        sum_2_reg_161 = grp_fu_184_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln130_fu_262_p2.read()))) {
        add_ln131_3_reg_462 = add_ln131_3_fu_323_p2.read();
        trunc_ln131_1_reg_472 = trunc_ln131_1_fu_364_p1.read();
        trunc_ln131_reg_467 = trunc_ln131_fu_360_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        bias_load_reg_507 = bias_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ci_reg_457 = ci_fu_268_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_reg_397 = co_fu_200_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        input_load_reg_492 = input_r_q0.read();
        weights_load_reg_487 = weights_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        m_reg_416 = m_fu_228_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        n_reg_439 = n_fu_248_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_3_reg_497 = grp_fu_190_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_reg_512 = grp_fu_184_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln123_fu_194_p2.read(), ap_const_lv1_0))) {
        zext_ln126_reg_408 = zext_ln126_fu_218_p1.read();
        zext_ln131_reg_402 = zext_ln131_fu_206_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln126_fu_222_p2.read()))) {
        zext_ln128_reg_426 = zext_ln128_fu_238_p1.read();
        zext_ln131_1_reg_421 = zext_ln131_1_fu_234_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln128_fu_242_p2.read()))) {
        zext_ln130_1_reg_449 = zext_ln130_1_fu_258_p1.read();
        zext_ln130_reg_444 = zext_ln130_fu_254_p1.read();
    }
}

void i_convolution5::thread_add_ln131_1_fu_300_p2() {
    add_ln131_1_fu_300_p2 = (!zext_ln128_reg_426.read().is_01() || !add_ln131_fu_294_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln128_reg_426.read()) + sc_biguint<8>(add_ln131_fu_294_p2.read()));
}

void i_convolution5::thread_add_ln131_2_fu_317_p2() {
    add_ln131_2_fu_317_p2 = (!p_shl2_cast_fu_309_p3.read().is_01() || !zext_ln131_5_fu_305_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl2_cast_fu_309_p3.read()) + sc_biguint<10>(zext_ln131_5_fu_305_p1.read()));
}

void i_convolution5::thread_add_ln131_3_fu_323_p2() {
    add_ln131_3_fu_323_p2 = (!zext_ln130_1_reg_449.read().is_01() || !add_ln131_2_fu_317_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln130_1_reg_449.read()) + sc_biguint<10>(add_ln131_2_fu_317_p2.read()));
}

void i_convolution5::thread_add_ln131_4_fu_328_p2() {
    add_ln131_4_fu_328_p2 = (!zext_ln131_2_fu_274_p1.read().is_01() || !zext_ln126_reg_408.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln131_2_fu_274_p1.read()) + sc_biguint<12>(zext_ln126_reg_408.read()));
}

void i_convolution5::thread_add_ln131_5_fu_349_p2() {
    add_ln131_5_fu_349_p2 = (!zext_ln131_8_fu_345_p1.read().is_01() || !zext_ln131_7_fu_333_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln131_8_fu_345_p1.read()) + sc_biguint<64>(zext_ln131_7_fu_333_p1.read()));
}

void i_convolution5::thread_add_ln131_6_fu_355_p2() {
    add_ln131_6_fu_355_p2 = (!zext_ln131_1_reg_421.read().is_01() || !add_ln131_5_fu_349_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln131_1_reg_421.read()) + sc_biguint<64>(add_ln131_5_fu_349_p2.read()));
}

void i_convolution5::thread_add_ln131_7_fu_379_p2() {
    add_ln131_7_fu_379_p2 = (!p_shl_cast_fu_372_p3.read().is_01() || !trunc_ln131_reg_467.read().is_01())? sc_lv<17>(): (sc_biguint<17>(p_shl_cast_fu_372_p3.read()) + sc_biguint<17>(trunc_ln131_reg_467.read()));
}

void i_convolution5::thread_add_ln131_8_fu_384_p2() {
    add_ln131_8_fu_384_p2 = (!zext_ln130_reg_444.read().is_01() || !add_ln131_7_fu_379_p2.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln130_reg_444.read()) + sc_biguint<17>(add_ln131_7_fu_379_p2.read()));
}

void i_convolution5::thread_add_ln131_fu_294_p2() {
    add_ln131_fu_294_p2 = (!zext_ln131_4_fu_290_p1.read().is_01() || !zext_ln131_3_fu_278_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln131_4_fu_290_p1.read()) + sc_biguint<8>(zext_ln131_3_fu_278_p1.read()));
}

void i_convolution5::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void i_convolution5::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void i_convolution5::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void i_convolution5::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void i_convolution5::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void i_convolution5::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void i_convolution5::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void i_convolution5::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void i_convolution5::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void i_convolution5::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void i_convolution5::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void i_convolution5::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void i_convolution5::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void i_convolution5::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void i_convolution5::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void i_convolution5::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln123_fu_194_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void i_convolution5::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void i_convolution5::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln123_fu_194_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void i_convolution5::thread_bias_address0() {
    bias_address0 =  (sc_lv<7>) (zext_ln131_reg_402.read());
}

void i_convolution5::thread_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void i_convolution5::thread_ci_fu_268_p2() {
    ci_fu_268_p2 = (!ci_0_reg_173.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ci_0_reg_173.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void i_convolution5::thread_co_fu_200_p2() {
    co_fu_200_p2 = (!co_0_reg_104.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(co_0_reg_104.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void i_convolution5::thread_grp_fu_184_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_184_p0 = sum_0_reg_126.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_184_p0 = sum_2_reg_161.read();
    } else {
        grp_fu_184_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void i_convolution5::thread_grp_fu_184_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_184_p1 = bias_load_reg_507.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_184_p1 = tmp_3_reg_497.read();
    } else {
        grp_fu_184_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void i_convolution5::thread_icmp_ln123_fu_194_p2() {
    icmp_ln123_fu_194_p2 = (!co_0_reg_104.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(co_0_reg_104.read() == ap_const_lv7_78);
}

void i_convolution5::thread_icmp_ln126_fu_222_p2() {
    icmp_ln126_fu_222_p2 = (!i_0_reg_115.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_115.read() == ap_const_lv3_5);
}

void i_convolution5::thread_icmp_ln128_fu_242_p2() {
    icmp_ln128_fu_242_p2 = (!j_0_reg_150.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_150.read() == ap_const_lv3_5);
}

void i_convolution5::thread_icmp_ln130_fu_262_p2() {
    icmp_ln130_fu_262_p2 = (!ci_0_reg_173.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ci_0_reg_173.read() == ap_const_lv5_10);
}

void i_convolution5::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<9>) (zext_ln131_6_fu_368_p1.read());
}

void i_convolution5::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void i_convolution5::thread_m_fu_228_p2() {
    m_fu_228_p2 = (!i_0_reg_115.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_115.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void i_convolution5::thread_n_fu_248_p2() {
    n_fu_248_p2 = (!j_0_reg_150.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_150.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void i_convolution5::thread_output_0_0_address0() {
    output_0_0_address0 =  (sc_lv<7>) (zext_ln131_reg_402.read());
}

void i_convolution5::thread_output_0_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_0_0_ce0 = ap_const_logic_1;
    } else {
        output_0_0_ce0 = ap_const_logic_0;
    }
}

void i_convolution5::thread_output_0_0_d0() {
    output_0_0_d0 = tmp_reg_512.read();
}

void i_convolution5::thread_output_0_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_0_0_we0 = ap_const_logic_1;
    } else {
        output_0_0_we0 = ap_const_logic_0;
    }
}

void i_convolution5::thread_p_shl2_cast_fu_309_p3() {
    p_shl2_cast_fu_309_p3 = esl_concat<8,2>(add_ln131_1_fu_300_p2.read(), ap_const_lv2_0);
}

void i_convolution5::thread_p_shl_cast_fu_372_p3() {
    p_shl_cast_fu_372_p3 = esl_concat<15,2>(trunc_ln131_1_reg_472.read(), ap_const_lv2_0);
}

void i_convolution5::thread_tmp_10_fu_282_p3() {
    tmp_10_fu_282_p3 = esl_concat<5,2>(ci_0_reg_173.read(), ap_const_lv2_0);
}

void i_convolution5::thread_tmp_12_fu_337_p3() {
    tmp_12_fu_337_p3 = esl_concat<12,2>(add_ln131_4_fu_328_p2.read(), ap_const_lv2_0);
}

void i_convolution5::thread_tmp_s_fu_210_p3() {
    tmp_s_fu_210_p3 = esl_concat<7,4>(co_0_reg_104.read(), ap_const_lv4_0);
}

void i_convolution5::thread_trunc_ln131_1_fu_364_p1() {
    trunc_ln131_1_fu_364_p1 = add_ln131_6_fu_355_p2.read().range(15-1, 0);
}

void i_convolution5::thread_trunc_ln131_fu_360_p1() {
    trunc_ln131_fu_360_p1 = add_ln131_6_fu_355_p2.read().range(17-1, 0);
}

void i_convolution5::thread_weights_address0() {
    weights_address0 =  (sc_lv<16>) (zext_ln131_9_fu_389_p1.read());
}

void i_convolution5::thread_weights_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        weights_ce0 = ap_const_logic_1;
    } else {
        weights_ce0 = ap_const_logic_0;
    }
}

void i_convolution5::thread_zext_ln126_fu_218_p1() {
    zext_ln126_fu_218_p1 = esl_zext<12,11>(tmp_s_fu_210_p3.read());
}

void i_convolution5::thread_zext_ln128_fu_238_p1() {
    zext_ln128_fu_238_p1 = esl_zext<8,3>(i_0_reg_115.read());
}

void i_convolution5::thread_zext_ln130_1_fu_258_p1() {
    zext_ln130_1_fu_258_p1 = esl_zext<10,3>(j_0_reg_150.read());
}

void i_convolution5::thread_zext_ln130_fu_254_p1() {
    zext_ln130_fu_254_p1 = esl_zext<17,3>(j_0_reg_150.read());
}

void i_convolution5::thread_zext_ln131_1_fu_234_p1() {
    zext_ln131_1_fu_234_p1 = esl_zext<64,3>(i_0_reg_115.read());
}

void i_convolution5::thread_zext_ln131_2_fu_274_p1() {
    zext_ln131_2_fu_274_p1 = esl_zext<12,5>(ci_0_reg_173.read());
}

void i_convolution5::thread_zext_ln131_3_fu_278_p1() {
    zext_ln131_3_fu_278_p1 = esl_zext<8,5>(ci_0_reg_173.read());
}

void i_convolution5::thread_zext_ln131_4_fu_290_p1() {
    zext_ln131_4_fu_290_p1 = esl_zext<8,7>(tmp_10_fu_282_p3.read());
}

void i_convolution5::thread_zext_ln131_5_fu_305_p1() {
    zext_ln131_5_fu_305_p1 = esl_zext<10,8>(add_ln131_1_fu_300_p2.read());
}

void i_convolution5::thread_zext_ln131_6_fu_368_p1() {
    zext_ln131_6_fu_368_p1 = esl_zext<64,10>(add_ln131_3_reg_462.read());
}

void i_convolution5::thread_zext_ln131_7_fu_333_p1() {
    zext_ln131_7_fu_333_p1 = esl_zext<64,12>(add_ln131_4_fu_328_p2.read());
}

void i_convolution5::thread_zext_ln131_8_fu_345_p1() {
    zext_ln131_8_fu_345_p1 = esl_zext<64,14>(tmp_12_fu_337_p3.read());
}

void i_convolution5::thread_zext_ln131_9_fu_389_p1() {
    zext_ln131_9_fu_389_p1 = esl_zext<64,17>(add_ln131_8_fu_384_p2.read());
}

void i_convolution5::thread_zext_ln131_fu_206_p1() {
    zext_ln131_fu_206_p1 = esl_zext<64,7>(co_0_reg_104.read());
}

void i_convolution5::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln123_fu_194_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln126_fu_222_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln128_fu_242_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln130_fu_262_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

