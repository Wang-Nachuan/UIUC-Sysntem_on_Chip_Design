// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "i_convolution5.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic i_convolution5::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic i_convolution5::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> i_convolution5::ap_ST_fsm_state1 = "1";
const sc_lv<17> i_convolution5::ap_ST_fsm_state2 = "10";
const sc_lv<17> i_convolution5::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<17> i_convolution5::ap_ST_fsm_pp0_stage1 = "1000";
const sc_lv<17> i_convolution5::ap_ST_fsm_pp0_stage2 = "10000";
const sc_lv<17> i_convolution5::ap_ST_fsm_pp0_stage3 = "100000";
const sc_lv<17> i_convolution5::ap_ST_fsm_pp0_stage4 = "1000000";
const sc_lv<17> i_convolution5::ap_ST_fsm_state16 = "10000000";
const sc_lv<17> i_convolution5::ap_ST_fsm_state17 = "100000000";
const sc_lv<17> i_convolution5::ap_ST_fsm_state18 = "1000000000";
const sc_lv<17> i_convolution5::ap_ST_fsm_state19 = "10000000000";
const sc_lv<17> i_convolution5::ap_ST_fsm_state20 = "100000000000";
const sc_lv<17> i_convolution5::ap_ST_fsm_state21 = "1000000000000";
const sc_lv<17> i_convolution5::ap_ST_fsm_state22 = "10000000000000";
const sc_lv<17> i_convolution5::ap_ST_fsm_state23 = "100000000000000";
const sc_lv<17> i_convolution5::ap_ST_fsm_state24 = "1000000000000000";
const sc_lv<17> i_convolution5::ap_ST_fsm_state25 = "10000000000000000";
const bool i_convolution5::ap_const_boolean_1 = true;
const sc_lv<32> i_convolution5::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> i_convolution5::ap_const_lv32_1 = "1";
const sc_lv<1> i_convolution5::ap_const_lv1_0 = "0";
const sc_lv<32> i_convolution5::ap_const_lv32_2 = "10";
const bool i_convolution5::ap_const_boolean_0 = false;
const sc_lv<32> i_convolution5::ap_const_lv32_3 = "11";
const sc_lv<32> i_convolution5::ap_const_lv32_4 = "100";
const sc_lv<32> i_convolution5::ap_const_lv32_5 = "101";
const sc_lv<32> i_convolution5::ap_const_lv32_6 = "110";
const sc_lv<32> i_convolution5::ap_const_lv32_7 = "111";
const sc_lv<32> i_convolution5::ap_const_lv32_8 = "1000";
const sc_lv<32> i_convolution5::ap_const_lv32_D = "1101";
const sc_lv<32> i_convolution5::ap_const_lv32_F = "1111";
const sc_lv<1> i_convolution5::ap_const_lv1_1 = "1";
const sc_lv<7> i_convolution5::ap_const_lv7_0 = "0000000";
const sc_lv<32> i_convolution5::ap_const_lv32_10 = "10000";
const sc_lv<9> i_convolution5::ap_const_lv9_0 = "000000000";
const sc_lv<3> i_convolution5::ap_const_lv3_0 = "000";
const sc_lv<8> i_convolution5::ap_const_lv8_0 = "00000000";
const sc_lv<5> i_convolution5::ap_const_lv5_0 = "00000";
const sc_lv<32> i_convolution5::ap_const_lv32_9 = "1001";
const sc_lv<32> i_convolution5::ap_const_lv32_E = "1110";
const sc_lv<7> i_convolution5::ap_const_lv7_78 = "1111000";
const sc_lv<7> i_convolution5::ap_const_lv7_1 = "1";
const sc_lv<4> i_convolution5::ap_const_lv4_0 = "0000";
const sc_lv<9> i_convolution5::ap_const_lv9_190 = "110010000";
const sc_lv<9> i_convolution5::ap_const_lv9_1 = "1";
const sc_lv<3> i_convolution5::ap_const_lv3_1 = "1";
const sc_lv<8> i_convolution5::ap_const_lv8_50 = "1010000";
const sc_lv<5> i_convolution5::ap_const_lv5_10 = "10000";
const sc_lv<2> i_convolution5::ap_const_lv2_0 = "00";
const sc_lv<5> i_convolution5::ap_const_lv5_1 = "1";
const sc_lv<8> i_convolution5::ap_const_lv8_1 = "1";
const sc_lv<32> i_convolution5::ap_const_lv32_17 = "10111";
const sc_lv<32> i_convolution5::ap_const_lv32_1E = "11110";
const sc_lv<8> i_convolution5::ap_const_lv8_FF = "11111111";
const sc_lv<23> i_convolution5::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> i_convolution5::ap_const_lv5_4 = "100";

i_convolution5::i_convolution5(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lenet_top_fadd_32bkb_U59 = new lenet_top_fadd_32bkb<1,5,32,32,32>("lenet_top_fadd_32bkb_U59");
    lenet_top_fadd_32bkb_U59->clk(ap_clk);
    lenet_top_fadd_32bkb_U59->reset(ap_rst);
    lenet_top_fadd_32bkb_U59->din0(grp_fu_218_p0);
    lenet_top_fadd_32bkb_U59->din1(grp_fu_218_p1);
    lenet_top_fadd_32bkb_U59->ce(ap_var_for_const0);
    lenet_top_fadd_32bkb_U59->dout(grp_fu_218_p2);
    lenet_top_fmul_32cud_U60 = new lenet_top_fmul_32cud<1,4,32,32,32>("lenet_top_fmul_32cud_U60");
    lenet_top_fmul_32cud_U60->clk(ap_clk);
    lenet_top_fmul_32cud_U60->reset(ap_rst);
    lenet_top_fmul_32cud_U60->din0(weights_load_reg_636);
    lenet_top_fmul_32cud_U60->din1(input_load_reg_631);
    lenet_top_fmul_32cud_U60->ce(ap_var_for_const0);
    lenet_top_fmul_32cud_U60->dout(grp_fu_223_p2);
    lenet_top_fcmp_32dEe_U61 = new lenet_top_fcmp_32dEe<1,2,32,32,1>("lenet_top_fcmp_32dEe_U61");
    lenet_top_fcmp_32dEe_U61->clk(ap_clk);
    lenet_top_fcmp_32dEe_U61->reset(ap_rst);
    lenet_top_fcmp_32dEe_U61->din0(sum_reg_666);
    lenet_top_fcmp_32dEe_U61->din1(ap_var_for_const1);
    lenet_top_fcmp_32dEe_U61->ce(ap_var_for_const0);
    lenet_top_fcmp_32dEe_U61->opcode(ap_var_for_const2);
    lenet_top_fcmp_32dEe_U61->dout(grp_fu_227_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln100_fu_266_p2);
    sensitive << ( ap_phi_mux_indvar_flatten15_phi_fu_155_p4 );

    SC_METHOD(thread_add_ln101_1_fu_393_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_177_p4 );

    SC_METHOD(thread_add_ln104_1_fu_376_p2);
    sensitive << ( zext_ln104_2_fu_300_p1 );
    sensitive << ( add_ln104_fu_370_p2 );

    SC_METHOD(thread_add_ln104_2_fu_418_p2);
    sensitive << ( p_shl5_cast_fu_411_p3 );
    sensitive << ( zext_ln104_8_fu_408_p1 );

    SC_METHOD(thread_add_ln104_3_fu_424_p2);
    sensitive << ( zext_ln104_4_fu_405_p1 );
    sensitive << ( add_ln104_2_fu_418_p2 );

    SC_METHOD(thread_add_ln104_4_fu_382_p2);
    sensitive << ( zext_ln100_reg_562 );
    sensitive << ( zext_ln104_5_fu_350_p1 );

    SC_METHOD(thread_add_ln104_5_fu_449_p2);
    sensitive << ( zext_ln104_11_fu_445_p1 );
    sensitive << ( zext_ln104_10_fu_435_p1 );

    SC_METHOD(thread_add_ln104_6_fu_455_p2);
    sensitive << ( zext_ln104_1_fu_399_p1 );
    sensitive << ( add_ln104_5_fu_449_p2 );

    SC_METHOD(thread_add_ln104_7_fu_477_p2);
    sensitive << ( p_shl_cast_fu_469_p3 );
    sensitive << ( trunc_ln104_fu_461_p1 );

    SC_METHOD(thread_add_ln104_8_fu_483_p2);
    sensitive << ( zext_ln104_3_fu_402_p1 );
    sensitive << ( add_ln104_7_fu_477_p2 );

    SC_METHOD(thread_add_ln104_fu_370_p2);
    sensitive << ( zext_ln104_7_fu_366_p1 );
    sensitive << ( zext_ln104_6_fu_354_p1 );

    SC_METHOD(thread_and_ln104_fu_316_p2);
    sensitive << ( icmp_ln102_fu_310_p2 );
    sensitive << ( xor_ln104_fu_304_p2 );

    SC_METHOD(thread_and_ln108_fu_534_p2);
    sensitive << ( or_ln108_fu_528_p2 );
    sensitive << ( grp_fu_227_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state11_pp0_stage3_iter1);

    SC_METHOD(thread_ap_block_state12_pp0_stage4_iter1);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state14_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state15_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage1_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln100_fu_260_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln97_fu_232_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_ci_0_phi_fu_211_p4);
    sensitive << ( ci_0_reg_207 );
    sensitive << ( icmp_ln100_reg_567 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ci_reg_606 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_166_p4);
    sensitive << ( i_0_reg_162 );
    sensitive << ( icmp_ln100_reg_567 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln104_1_reg_581 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten15_phi_fu_155_p4);
    sensitive << ( indvar_flatten15_reg_151 );
    sensitive << ( icmp_ln100_reg_567 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln100_reg_571 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_177_p4);
    sensitive << ( indvar_flatten_reg_173 );
    sensitive << ( icmp_ln100_reg_567 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln101_reg_641 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_j_0_phi_fu_188_p4);
    sensitive << ( j_0_reg_184 );
    sensitive << ( icmp_ln100_reg_567 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln104_3_reg_587 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_sum_2_phi_fu_199_p4);
    sensitive << ( sum_2_reg_195 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln97_fu_232_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_bias_address0);
    sensitive << ( zext_ln104_reg_556 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_bitcast_ln108_fu_499_p1);
    sensitive << ( sum_reg_666 );

    SC_METHOD(thread_ci_fu_387_p2);
    sensitive << ( select_ln104_2_fu_334_p3 );

    SC_METHOD(thread_co_fu_238_p2);
    sensitive << ( co_0_reg_140 );

    SC_METHOD(thread_grp_fu_218_p0);
    sensitive << ( sum_2_reg_195 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_phi_mux_sum_2_phi_fu_199_p4 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_218_p1);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_6_reg_646 );
    sensitive << ( bias_load_reg_661 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_i_fu_272_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_166_p4 );

    SC_METHOD(thread_icmp_ln100_fu_260_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten15_phi_fu_155_p4 );

    SC_METHOD(thread_icmp_ln101_fu_278_p2);
    sensitive << ( icmp_ln100_fu_260_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_177_p4 );

    SC_METHOD(thread_icmp_ln102_fu_310_p2);
    sensitive << ( icmp_ln100_fu_260_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_ci_0_phi_fu_211_p4 );

    SC_METHOD(thread_icmp_ln108_1_fu_522_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( trunc_ln108_fu_512_p1 );

    SC_METHOD(thread_icmp_ln108_fu_516_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_fu_502_p4 );

    SC_METHOD(thread_icmp_ln97_fu_232_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_0_reg_140 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( zext_ln104_9_fu_430_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_j_fu_322_p2);
    sensitive << ( select_ln104_fu_284_p3 );

    SC_METHOD(thread_or_ln104_fu_328_p2);
    sensitive << ( icmp_ln101_fu_278_p2 );
    sensitive << ( and_ln104_fu_316_p2 );

    SC_METHOD(thread_or_ln108_fu_528_p2);
    sensitive << ( icmp_ln108_1_fu_522_p2 );
    sensitive << ( icmp_ln108_fu_516_p2 );

    SC_METHOD(thread_output_0_0_address0);
    sensitive << ( zext_ln104_reg_556 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_output_0_0_ce0);
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_output_0_0_d0);
    sensitive << ( sum_1_reg_673 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_output_0_0_we0);
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_p_shl5_cast_fu_411_p3);
    sensitive << ( add_ln104_1_reg_594 );

    SC_METHOD(thread_p_shl_cast_fu_469_p3);
    sensitive << ( trunc_ln104_1_fu_465_p1 );

    SC_METHOD(thread_select_ln101_fu_493_p3);
    sensitive << ( icmp_ln101_reg_576 );
    sensitive << ( add_ln101_1_reg_611 );

    SC_METHOD(thread_select_ln104_1_fu_292_p3);
    sensitive << ( icmp_ln101_fu_278_p2 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_166_p4 );
    sensitive << ( i_fu_272_p2 );

    SC_METHOD(thread_select_ln104_2_fu_334_p3);
    sensitive << ( ap_phi_mux_ci_0_phi_fu_211_p4 );
    sensitive << ( or_ln104_fu_328_p2 );

    SC_METHOD(thread_select_ln104_3_fu_342_p3);
    sensitive << ( select_ln104_fu_284_p3 );
    sensitive << ( and_ln104_fu_316_p2 );
    sensitive << ( j_fu_322_p2 );

    SC_METHOD(thread_select_ln104_fu_284_p3);
    sensitive << ( icmp_ln101_fu_278_p2 );
    sensitive << ( ap_phi_mux_j_0_phi_fu_188_p4 );

    SC_METHOD(thread_sum_1_fu_540_p3);
    sensitive << ( sum_reg_666 );
    sensitive << ( and_ln108_fu_534_p2 );

    SC_METHOD(thread_tmp_10_fu_358_p3);
    sensitive << ( select_ln104_2_fu_334_p3 );

    SC_METHOD(thread_tmp_12_fu_438_p3);
    sensitive << ( add_ln104_4_reg_600 );

    SC_METHOD(thread_tmp_9_fu_248_p3);
    sensitive << ( co_0_reg_140 );

    SC_METHOD(thread_tmp_fu_502_p4);
    sensitive << ( bitcast_ln108_fu_499_p1 );

    SC_METHOD(thread_trunc_ln104_1_fu_465_p1);
    sensitive << ( add_ln104_6_fu_455_p2 );

    SC_METHOD(thread_trunc_ln104_fu_461_p1);
    sensitive << ( add_ln104_6_fu_455_p2 );

    SC_METHOD(thread_trunc_ln108_fu_512_p1);
    sensitive << ( bitcast_ln108_fu_499_p1 );

    SC_METHOD(thread_weights_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( zext_ln104_12_fu_489_p1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_weights_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_xor_ln104_fu_304_p2);
    sensitive << ( icmp_ln101_fu_278_p2 );

    SC_METHOD(thread_zext_ln100_fu_256_p1);
    sensitive << ( tmp_9_fu_248_p3 );

    SC_METHOD(thread_zext_ln104_10_fu_435_p1);
    sensitive << ( add_ln104_4_reg_600 );

    SC_METHOD(thread_zext_ln104_11_fu_445_p1);
    sensitive << ( tmp_12_fu_438_p3 );

    SC_METHOD(thread_zext_ln104_12_fu_489_p1);
    sensitive << ( add_ln104_8_reg_621 );

    SC_METHOD(thread_zext_ln104_1_fu_399_p1);
    sensitive << ( select_ln104_1_reg_581 );

    SC_METHOD(thread_zext_ln104_2_fu_300_p1);
    sensitive << ( select_ln104_1_fu_292_p3 );

    SC_METHOD(thread_zext_ln104_3_fu_402_p1);
    sensitive << ( select_ln104_3_reg_587 );

    SC_METHOD(thread_zext_ln104_4_fu_405_p1);
    sensitive << ( select_ln104_3_reg_587 );

    SC_METHOD(thread_zext_ln104_5_fu_350_p1);
    sensitive << ( select_ln104_2_fu_334_p3 );

    SC_METHOD(thread_zext_ln104_6_fu_354_p1);
    sensitive << ( select_ln104_2_fu_334_p3 );

    SC_METHOD(thread_zext_ln104_7_fu_366_p1);
    sensitive << ( tmp_10_fu_358_p3 );

    SC_METHOD(thread_zext_ln104_8_fu_408_p1);
    sensitive << ( add_ln104_1_reg_594 );

    SC_METHOD(thread_zext_ln104_9_fu_430_p1);
    sensitive << ( add_ln104_3_fu_424_p2 );

    SC_METHOD(thread_zext_ln104_fu_244_p1);
    sensitive << ( co_0_reg_140 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln97_fu_232_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln100_fu_260_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "00000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "i_convolution5_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, weights_address0, "(port)weights_address0");
    sc_trace(mVcdFile, weights_ce0, "(port)weights_ce0");
    sc_trace(mVcdFile, weights_q0, "(port)weights_q0");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_q0, "(port)bias_q0");
    sc_trace(mVcdFile, output_0_0_address0, "(port)output_0_0_address0");
    sc_trace(mVcdFile, output_0_0_ce0, "(port)output_0_0_ce0");
    sc_trace(mVcdFile, output_0_0_we0, "(port)output_0_0_we0");
    sc_trace(mVcdFile, output_0_0_d0, "(port)output_0_0_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten15_reg_151, "indvar_flatten15_reg_151");
    sc_trace(mVcdFile, i_0_reg_162, "i_0_reg_162");
    sc_trace(mVcdFile, indvar_flatten_reg_173, "indvar_flatten_reg_173");
    sc_trace(mVcdFile, j_0_reg_184, "j_0_reg_184");
    sc_trace(mVcdFile, sum_2_reg_195, "sum_2_reg_195");
    sc_trace(mVcdFile, ci_0_reg_207, "ci_0_reg_207");
    sc_trace(mVcdFile, icmp_ln97_fu_232_p2, "icmp_ln97_fu_232_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, co_fu_238_p2, "co_fu_238_p2");
    sc_trace(mVcdFile, co_reg_551, "co_reg_551");
    sc_trace(mVcdFile, zext_ln104_fu_244_p1, "zext_ln104_fu_244_p1");
    sc_trace(mVcdFile, zext_ln104_reg_556, "zext_ln104_reg_556");
    sc_trace(mVcdFile, zext_ln100_fu_256_p1, "zext_ln100_fu_256_p1");
    sc_trace(mVcdFile, zext_ln100_reg_562, "zext_ln100_reg_562");
    sc_trace(mVcdFile, icmp_ln100_fu_260_p2, "icmp_ln100_fu_260_p2");
    sc_trace(mVcdFile, icmp_ln100_reg_567, "icmp_ln100_reg_567");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter1, "ap_block_state8_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter2, "ap_block_state13_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln100_reg_567_pp0_iter1_reg, "icmp_ln100_reg_567_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln100_reg_567_pp0_iter2_reg, "icmp_ln100_reg_567_pp0_iter2_reg");
    sc_trace(mVcdFile, add_ln100_fu_266_p2, "add_ln100_fu_266_p2");
    sc_trace(mVcdFile, add_ln100_reg_571, "add_ln100_reg_571");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, icmp_ln101_fu_278_p2, "icmp_ln101_fu_278_p2");
    sc_trace(mVcdFile, icmp_ln101_reg_576, "icmp_ln101_reg_576");
    sc_trace(mVcdFile, select_ln104_1_fu_292_p3, "select_ln104_1_fu_292_p3");
    sc_trace(mVcdFile, select_ln104_1_reg_581, "select_ln104_1_reg_581");
    sc_trace(mVcdFile, select_ln104_3_fu_342_p3, "select_ln104_3_fu_342_p3");
    sc_trace(mVcdFile, select_ln104_3_reg_587, "select_ln104_3_reg_587");
    sc_trace(mVcdFile, add_ln104_1_fu_376_p2, "add_ln104_1_fu_376_p2");
    sc_trace(mVcdFile, add_ln104_1_reg_594, "add_ln104_1_reg_594");
    sc_trace(mVcdFile, add_ln104_4_fu_382_p2, "add_ln104_4_fu_382_p2");
    sc_trace(mVcdFile, add_ln104_4_reg_600, "add_ln104_4_reg_600");
    sc_trace(mVcdFile, ci_fu_387_p2, "ci_fu_387_p2");
    sc_trace(mVcdFile, ci_reg_606, "ci_reg_606");
    sc_trace(mVcdFile, add_ln101_1_fu_393_p2, "add_ln101_1_fu_393_p2");
    sc_trace(mVcdFile, add_ln101_1_reg_611, "add_ln101_1_reg_611");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage1_iter0, "ap_block_state4_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage1_iter1, "ap_block_state9_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage1_iter2, "ap_block_state14_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, add_ln104_8_fu_483_p2, "add_ln104_8_fu_483_p2");
    sc_trace(mVcdFile, add_ln104_8_reg_621, "add_ln104_8_reg_621");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage2_iter0, "ap_block_state5_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage2_iter1, "ap_block_state10_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage2_iter2, "ap_block_state15_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, input_load_reg_631, "input_load_reg_631");
    sc_trace(mVcdFile, weights_load_reg_636, "weights_load_reg_636");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage3_iter0, "ap_block_state6_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage3_iter1, "ap_block_state11_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, select_ln101_fu_493_p3, "select_ln101_fu_493_p3");
    sc_trace(mVcdFile, select_ln101_reg_641, "select_ln101_reg_641");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage4_iter0, "ap_block_state7_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage4_iter1, "ap_block_state12_pp0_stage4_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, grp_fu_223_p2, "grp_fu_223_p2");
    sc_trace(mVcdFile, tmp_6_reg_646, "tmp_6_reg_646");
    sc_trace(mVcdFile, grp_fu_218_p2, "grp_fu_218_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, bias_load_reg_661, "bias_load_reg_661");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, sum_reg_666, "sum_reg_666");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, sum_1_fu_540_p3, "sum_1_fu_540_p3");
    sc_trace(mVcdFile, sum_1_reg_673, "sum_1_reg_673");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, co_0_reg_140, "co_0_reg_140");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten15_phi_fu_155_p4, "ap_phi_mux_indvar_flatten15_phi_fu_155_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_166_p4, "ap_phi_mux_i_0_phi_fu_166_p4");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_177_p4, "ap_phi_mux_indvar_flatten_phi_fu_177_p4");
    sc_trace(mVcdFile, ap_phi_mux_j_0_phi_fu_188_p4, "ap_phi_mux_j_0_phi_fu_188_p4");
    sc_trace(mVcdFile, ap_phi_mux_sum_2_phi_fu_199_p4, "ap_phi_mux_sum_2_phi_fu_199_p4");
    sc_trace(mVcdFile, ap_phi_mux_ci_0_phi_fu_211_p4, "ap_phi_mux_ci_0_phi_fu_211_p4");
    sc_trace(mVcdFile, zext_ln104_9_fu_430_p1, "zext_ln104_9_fu_430_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, zext_ln104_12_fu_489_p1, "zext_ln104_12_fu_489_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, grp_fu_218_p0, "grp_fu_218_p0");
    sc_trace(mVcdFile, grp_fu_218_p1, "grp_fu_218_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, tmp_9_fu_248_p3, "tmp_9_fu_248_p3");
    sc_trace(mVcdFile, i_fu_272_p2, "i_fu_272_p2");
    sc_trace(mVcdFile, icmp_ln102_fu_310_p2, "icmp_ln102_fu_310_p2");
    sc_trace(mVcdFile, xor_ln104_fu_304_p2, "xor_ln104_fu_304_p2");
    sc_trace(mVcdFile, select_ln104_fu_284_p3, "select_ln104_fu_284_p3");
    sc_trace(mVcdFile, and_ln104_fu_316_p2, "and_ln104_fu_316_p2");
    sc_trace(mVcdFile, or_ln104_fu_328_p2, "or_ln104_fu_328_p2");
    sc_trace(mVcdFile, j_fu_322_p2, "j_fu_322_p2");
    sc_trace(mVcdFile, select_ln104_2_fu_334_p3, "select_ln104_2_fu_334_p3");
    sc_trace(mVcdFile, tmp_10_fu_358_p3, "tmp_10_fu_358_p3");
    sc_trace(mVcdFile, zext_ln104_7_fu_366_p1, "zext_ln104_7_fu_366_p1");
    sc_trace(mVcdFile, zext_ln104_6_fu_354_p1, "zext_ln104_6_fu_354_p1");
    sc_trace(mVcdFile, zext_ln104_2_fu_300_p1, "zext_ln104_2_fu_300_p1");
    sc_trace(mVcdFile, add_ln104_fu_370_p2, "add_ln104_fu_370_p2");
    sc_trace(mVcdFile, zext_ln104_5_fu_350_p1, "zext_ln104_5_fu_350_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_411_p3, "p_shl5_cast_fu_411_p3");
    sc_trace(mVcdFile, zext_ln104_8_fu_408_p1, "zext_ln104_8_fu_408_p1");
    sc_trace(mVcdFile, zext_ln104_4_fu_405_p1, "zext_ln104_4_fu_405_p1");
    sc_trace(mVcdFile, add_ln104_2_fu_418_p2, "add_ln104_2_fu_418_p2");
    sc_trace(mVcdFile, add_ln104_3_fu_424_p2, "add_ln104_3_fu_424_p2");
    sc_trace(mVcdFile, tmp_12_fu_438_p3, "tmp_12_fu_438_p3");
    sc_trace(mVcdFile, zext_ln104_11_fu_445_p1, "zext_ln104_11_fu_445_p1");
    sc_trace(mVcdFile, zext_ln104_10_fu_435_p1, "zext_ln104_10_fu_435_p1");
    sc_trace(mVcdFile, zext_ln104_1_fu_399_p1, "zext_ln104_1_fu_399_p1");
    sc_trace(mVcdFile, add_ln104_5_fu_449_p2, "add_ln104_5_fu_449_p2");
    sc_trace(mVcdFile, add_ln104_6_fu_455_p2, "add_ln104_6_fu_455_p2");
    sc_trace(mVcdFile, trunc_ln104_1_fu_465_p1, "trunc_ln104_1_fu_465_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_469_p3, "p_shl_cast_fu_469_p3");
    sc_trace(mVcdFile, trunc_ln104_fu_461_p1, "trunc_ln104_fu_461_p1");
    sc_trace(mVcdFile, zext_ln104_3_fu_402_p1, "zext_ln104_3_fu_402_p1");
    sc_trace(mVcdFile, add_ln104_7_fu_477_p2, "add_ln104_7_fu_477_p2");
    sc_trace(mVcdFile, bitcast_ln108_fu_499_p1, "bitcast_ln108_fu_499_p1");
    sc_trace(mVcdFile, tmp_fu_502_p4, "tmp_fu_502_p4");
    sc_trace(mVcdFile, trunc_ln108_fu_512_p1, "trunc_ln108_fu_512_p1");
    sc_trace(mVcdFile, icmp_ln108_1_fu_522_p2, "icmp_ln108_1_fu_522_p2");
    sc_trace(mVcdFile, icmp_ln108_fu_516_p2, "icmp_ln108_fu_516_p2");
    sc_trace(mVcdFile, or_ln108_fu_528_p2, "or_ln108_fu_528_p2");
    sc_trace(mVcdFile, grp_fu_227_p2, "grp_fu_227_p2");
    sc_trace(mVcdFile, and_ln108_fu_534_p2, "and_ln108_fu_534_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

i_convolution5::~i_convolution5() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lenet_top_fadd_32bkb_U59;
    delete lenet_top_fmul_32cud_U60;
    delete lenet_top_fcmp_32dEe_U61;
}

void i_convolution5::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void i_convolution5::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void i_convolution5::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_4;
}

void i_convolution5::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln97_fu_232_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln97_fu_232_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ci_0_reg_207 = ci_reg_606.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln97_fu_232_p2.read(), ap_const_lv1_0))) {
        ci_0_reg_207 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        co_0_reg_140 = co_reg_551.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_0_reg_140 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_162 = select_ln104_1_reg_581.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln97_fu_232_p2.read(), ap_const_lv1_0))) {
        i_0_reg_162 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten15_reg_151 = add_ln100_reg_571.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln97_fu_232_p2.read(), ap_const_lv1_0))) {
        indvar_flatten15_reg_151 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_173 = select_ln101_reg_641.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln97_fu_232_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_173 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_0_reg_184 = select_ln104_3_reg_587.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln97_fu_232_p2.read(), ap_const_lv1_0))) {
        j_0_reg_184 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567_pp0_iter2_reg.read()))) {
        sum_2_reg_195 = grp_fu_218_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln97_fu_232_p2.read(), ap_const_lv1_0))) {
        sum_2_reg_195 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        add_ln100_reg_571 = add_ln100_fu_266_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_fu_260_p2.read()))) {
        add_ln101_1_reg_611 = add_ln101_1_fu_393_p2.read();
        add_ln104_1_reg_594 = add_ln104_1_fu_376_p2.read();
        add_ln104_4_reg_600 = add_ln104_4_fu_382_p2.read();
        icmp_ln101_reg_576 = icmp_ln101_fu_278_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()))) {
        add_ln104_8_reg_621 = add_ln104_8_fu_483_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        bias_load_reg_661 = bias_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_fu_260_p2.read()))) {
        ci_reg_606 = ci_fu_387_p2.read();
        select_ln104_1_reg_581 = select_ln104_1_fu_292_p3.read();
        select_ln104_3_reg_587 = select_ln104_3_fu_342_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_reg_551 = co_fu_238_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln100_reg_567 = icmp_ln100_fu_260_p2.read();
        icmp_ln100_reg_567_pp0_iter1_reg = icmp_ln100_reg_567.read();
        icmp_ln100_reg_567_pp0_iter2_reg = icmp_ln100_reg_567_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        input_load_reg_631 = input_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        select_ln101_reg_641 = select_ln101_fu_493_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        sum_1_reg_673 = sum_1_fu_540_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        sum_reg_666 = grp_fu_218_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567_pp0_iter1_reg.read()))) {
        tmp_6_reg_646 = grp_fu_223_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        weights_load_reg_636 = weights_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln97_fu_232_p2.read(), ap_const_lv1_0))) {
        zext_ln100_reg_562 = zext_ln100_fu_256_p1.read();
        zext_ln104_reg_556 = zext_ln104_fu_244_p1.read();
    }
}

void i_convolution5::thread_add_ln100_fu_266_p2() {
    add_ln100_fu_266_p2 = (!ap_phi_mux_indvar_flatten15_phi_fu_155_p4.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(ap_phi_mux_indvar_flatten15_phi_fu_155_p4.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void i_convolution5::thread_add_ln101_1_fu_393_p2() {
    add_ln101_1_fu_393_p2 = (!ap_const_lv8_1.is_01() || !ap_phi_mux_indvar_flatten_phi_fu_177_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(ap_phi_mux_indvar_flatten_phi_fu_177_p4.read()));
}

void i_convolution5::thread_add_ln104_1_fu_376_p2() {
    add_ln104_1_fu_376_p2 = (!zext_ln104_2_fu_300_p1.read().is_01() || !add_ln104_fu_370_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln104_2_fu_300_p1.read()) + sc_biguint<8>(add_ln104_fu_370_p2.read()));
}

void i_convolution5::thread_add_ln104_2_fu_418_p2() {
    add_ln104_2_fu_418_p2 = (!p_shl5_cast_fu_411_p3.read().is_01() || !zext_ln104_8_fu_408_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl5_cast_fu_411_p3.read()) + sc_biguint<10>(zext_ln104_8_fu_408_p1.read()));
}

void i_convolution5::thread_add_ln104_3_fu_424_p2() {
    add_ln104_3_fu_424_p2 = (!zext_ln104_4_fu_405_p1.read().is_01() || !add_ln104_2_fu_418_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln104_4_fu_405_p1.read()) + sc_biguint<10>(add_ln104_2_fu_418_p2.read()));
}

void i_convolution5::thread_add_ln104_4_fu_382_p2() {
    add_ln104_4_fu_382_p2 = (!zext_ln104_5_fu_350_p1.read().is_01() || !zext_ln100_reg_562.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln104_5_fu_350_p1.read()) + sc_biguint<12>(zext_ln100_reg_562.read()));
}

void i_convolution5::thread_add_ln104_5_fu_449_p2() {
    add_ln104_5_fu_449_p2 = (!zext_ln104_11_fu_445_p1.read().is_01() || !zext_ln104_10_fu_435_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln104_11_fu_445_p1.read()) + sc_biguint<64>(zext_ln104_10_fu_435_p1.read()));
}

void i_convolution5::thread_add_ln104_6_fu_455_p2() {
    add_ln104_6_fu_455_p2 = (!zext_ln104_1_fu_399_p1.read().is_01() || !add_ln104_5_fu_449_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln104_1_fu_399_p1.read()) + sc_biguint<64>(add_ln104_5_fu_449_p2.read()));
}

void i_convolution5::thread_add_ln104_7_fu_477_p2() {
    add_ln104_7_fu_477_p2 = (!p_shl_cast_fu_469_p3.read().is_01() || !trunc_ln104_fu_461_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(p_shl_cast_fu_469_p3.read()) + sc_biguint<17>(trunc_ln104_fu_461_p1.read()));
}

void i_convolution5::thread_add_ln104_8_fu_483_p2() {
    add_ln104_8_fu_483_p2 = (!zext_ln104_3_fu_402_p1.read().is_01() || !add_ln104_7_fu_477_p2.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln104_3_fu_402_p1.read()) + sc_biguint<17>(add_ln104_7_fu_477_p2.read()));
}

void i_convolution5::thread_add_ln104_fu_370_p2() {
    add_ln104_fu_370_p2 = (!zext_ln104_7_fu_366_p1.read().is_01() || !zext_ln104_6_fu_354_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln104_7_fu_366_p1.read()) + sc_biguint<8>(zext_ln104_6_fu_354_p1.read()));
}

void i_convolution5::thread_and_ln104_fu_316_p2() {
    and_ln104_fu_316_p2 = (icmp_ln102_fu_310_p2.read() & xor_ln104_fu_304_p2.read());
}

void i_convolution5::thread_and_ln108_fu_534_p2() {
    and_ln108_fu_534_p2 = (or_ln108_fu_528_p2.read() & grp_fu_227_p2.read());
}

void i_convolution5::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void i_convolution5::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[3];
}

void i_convolution5::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[4];
}

void i_convolution5::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[5];
}

void i_convolution5::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[6];
}

void i_convolution5::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void i_convolution5::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[7];
}

void i_convolution5::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[8];
}

void i_convolution5::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[9];
}

void i_convolution5::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void i_convolution5::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[13];
}

void i_convolution5::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[14];
}

void i_convolution5::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[15];
}

void i_convolution5::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[16];
}

void i_convolution5::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state10_pp0_stage2_iter1() {
    ap_block_state10_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state11_pp0_stage3_iter1() {
    ap_block_state11_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state12_pp0_stage4_iter1() {
    ap_block_state12_pp0_stage4_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state13_pp0_stage0_iter2() {
    ap_block_state13_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state14_pp0_stage1_iter2() {
    ap_block_state14_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state15_pp0_stage2_iter2() {
    ap_block_state15_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state4_pp0_stage1_iter0() {
    ap_block_state4_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state5_pp0_stage2_iter0() {
    ap_block_state5_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state6_pp0_stage3_iter0() {
    ap_block_state6_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state7_pp0_stage4_iter0() {
    ap_block_state7_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state8_pp0_stage0_iter1() {
    ap_block_state8_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_block_state9_pp0_stage1_iter1() {
    ap_block_state9_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void i_convolution5::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln100_fu_260_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void i_convolution5::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln97_fu_232_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void i_convolution5::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void i_convolution5::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void i_convolution5::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void i_convolution5::thread_ap_phi_mux_ci_0_phi_fu_211_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_ci_0_phi_fu_211_p4 = ci_reg_606.read();
    } else {
        ap_phi_mux_ci_0_phi_fu_211_p4 = ci_0_reg_207.read();
    }
}

void i_convolution5::thread_ap_phi_mux_i_0_phi_fu_166_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_166_p4 = select_ln104_1_reg_581.read();
    } else {
        ap_phi_mux_i_0_phi_fu_166_p4 = i_0_reg_162.read();
    }
}

void i_convolution5::thread_ap_phi_mux_indvar_flatten15_phi_fu_155_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten15_phi_fu_155_p4 = add_ln100_reg_571.read();
    } else {
        ap_phi_mux_indvar_flatten15_phi_fu_155_p4 = indvar_flatten15_reg_151.read();
    }
}

void i_convolution5::thread_ap_phi_mux_indvar_flatten_phi_fu_177_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_177_p4 = select_ln101_reg_641.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_177_p4 = indvar_flatten_reg_173.read();
    }
}

void i_convolution5::thread_ap_phi_mux_j_0_phi_fu_188_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_reg_567.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_0_phi_fu_188_p4 = select_ln104_3_reg_587.read();
    } else {
        ap_phi_mux_j_0_phi_fu_188_p4 = j_0_reg_184.read();
    }
}

void i_convolution5::thread_ap_phi_mux_sum_2_phi_fu_199_p4() {
    ap_phi_mux_sum_2_phi_fu_199_p4 = sum_2_reg_195.read();
}

void i_convolution5::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln97_fu_232_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void i_convolution5::thread_bias_address0() {
    bias_address0 =  (sc_lv<7>) (zext_ln104_reg_556.read());
}

void i_convolution5::thread_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void i_convolution5::thread_bitcast_ln108_fu_499_p1() {
    bitcast_ln108_fu_499_p1 = sum_reg_666.read();
}

void i_convolution5::thread_ci_fu_387_p2() {
    ci_fu_387_p2 = (!ap_const_lv5_1.is_01() || !select_ln104_2_fu_334_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(select_ln104_2_fu_334_p3.read()));
}

void i_convolution5::thread_co_fu_238_p2() {
    co_fu_238_p2 = (!co_0_reg_140.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(co_0_reg_140.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void i_convolution5::thread_grp_fu_218_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_218_p0 = sum_2_reg_195.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_218_p0 = ap_phi_mux_sum_2_phi_fu_199_p4.read();
    } else {
        grp_fu_218_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void i_convolution5::thread_grp_fu_218_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_218_p1 = bias_load_reg_661.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_218_p1 = tmp_6_reg_646.read();
    } else {
        grp_fu_218_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void i_convolution5::thread_i_fu_272_p2() {
    i_fu_272_p2 = (!ap_const_lv3_1.is_01() || !ap_phi_mux_i_0_phi_fu_166_p4.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(ap_phi_mux_i_0_phi_fu_166_p4.read()));
}

void i_convolution5::thread_icmp_ln100_fu_260_p2() {
    icmp_ln100_fu_260_p2 = (!ap_phi_mux_indvar_flatten15_phi_fu_155_p4.read().is_01() || !ap_const_lv9_190.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten15_phi_fu_155_p4.read() == ap_const_lv9_190);
}

void i_convolution5::thread_icmp_ln101_fu_278_p2() {
    icmp_ln101_fu_278_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_177_p4.read().is_01() || !ap_const_lv8_50.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_177_p4.read() == ap_const_lv8_50);
}

void i_convolution5::thread_icmp_ln102_fu_310_p2() {
    icmp_ln102_fu_310_p2 = (!ap_phi_mux_ci_0_phi_fu_211_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_ci_0_phi_fu_211_p4.read() == ap_const_lv5_10);
}

void i_convolution5::thread_icmp_ln108_1_fu_522_p2() {
    icmp_ln108_1_fu_522_p2 = (!trunc_ln108_fu_512_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln108_fu_512_p1.read() == ap_const_lv23_0);
}

void i_convolution5::thread_icmp_ln108_fu_516_p2() {
    icmp_ln108_fu_516_p2 = (!tmp_fu_502_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_502_p4.read() != ap_const_lv8_FF);
}

void i_convolution5::thread_icmp_ln97_fu_232_p2() {
    icmp_ln97_fu_232_p2 = (!co_0_reg_140.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(co_0_reg_140.read() == ap_const_lv7_78);
}

void i_convolution5::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<9>) (zext_ln104_9_fu_430_p1.read());
}

void i_convolution5::thread_input_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void i_convolution5::thread_j_fu_322_p2() {
    j_fu_322_p2 = (!ap_const_lv3_1.is_01() || !select_ln104_fu_284_p3.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(select_ln104_fu_284_p3.read()));
}

void i_convolution5::thread_or_ln104_fu_328_p2() {
    or_ln104_fu_328_p2 = (and_ln104_fu_316_p2.read() | icmp_ln101_fu_278_p2.read());
}

void i_convolution5::thread_or_ln108_fu_528_p2() {
    or_ln108_fu_528_p2 = (icmp_ln108_1_fu_522_p2.read() | icmp_ln108_fu_516_p2.read());
}

void i_convolution5::thread_output_0_0_address0() {
    output_0_0_address0 =  (sc_lv<7>) (zext_ln104_reg_556.read());
}

void i_convolution5::thread_output_0_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        output_0_0_ce0 = ap_const_logic_1;
    } else {
        output_0_0_ce0 = ap_const_logic_0;
    }
}

void i_convolution5::thread_output_0_0_d0() {
    output_0_0_d0 = sum_1_reg_673.read();
}

void i_convolution5::thread_output_0_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        output_0_0_we0 = ap_const_logic_1;
    } else {
        output_0_0_we0 = ap_const_logic_0;
    }
}

void i_convolution5::thread_p_shl5_cast_fu_411_p3() {
    p_shl5_cast_fu_411_p3 = esl_concat<8,2>(add_ln104_1_reg_594.read(), ap_const_lv2_0);
}

void i_convolution5::thread_p_shl_cast_fu_469_p3() {
    p_shl_cast_fu_469_p3 = esl_concat<15,2>(trunc_ln104_1_fu_465_p1.read(), ap_const_lv2_0);
}

void i_convolution5::thread_select_ln101_fu_493_p3() {
    select_ln101_fu_493_p3 = (!icmp_ln101_reg_576.read()[0].is_01())? sc_lv<8>(): ((icmp_ln101_reg_576.read()[0].to_bool())? ap_const_lv8_1: add_ln101_1_reg_611.read());
}

void i_convolution5::thread_select_ln104_1_fu_292_p3() {
    select_ln104_1_fu_292_p3 = (!icmp_ln101_fu_278_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln101_fu_278_p2.read()[0].to_bool())? i_fu_272_p2.read(): ap_phi_mux_i_0_phi_fu_166_p4.read());
}

void i_convolution5::thread_select_ln104_2_fu_334_p3() {
    select_ln104_2_fu_334_p3 = (!or_ln104_fu_328_p2.read()[0].is_01())? sc_lv<5>(): ((or_ln104_fu_328_p2.read()[0].to_bool())? ap_const_lv5_0: ap_phi_mux_ci_0_phi_fu_211_p4.read());
}

void i_convolution5::thread_select_ln104_3_fu_342_p3() {
    select_ln104_3_fu_342_p3 = (!and_ln104_fu_316_p2.read()[0].is_01())? sc_lv<3>(): ((and_ln104_fu_316_p2.read()[0].to_bool())? j_fu_322_p2.read(): select_ln104_fu_284_p3.read());
}

void i_convolution5::thread_select_ln104_fu_284_p3() {
    select_ln104_fu_284_p3 = (!icmp_ln101_fu_278_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln101_fu_278_p2.read()[0].to_bool())? ap_const_lv3_0: ap_phi_mux_j_0_phi_fu_188_p4.read());
}

void i_convolution5::thread_sum_1_fu_540_p3() {
    sum_1_fu_540_p3 = (!and_ln108_fu_534_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln108_fu_534_p2.read()[0].to_bool())? ap_const_lv32_0: sum_reg_666.read());
}

void i_convolution5::thread_tmp_10_fu_358_p3() {
    tmp_10_fu_358_p3 = esl_concat<5,2>(select_ln104_2_fu_334_p3.read(), ap_const_lv2_0);
}

void i_convolution5::thread_tmp_12_fu_438_p3() {
    tmp_12_fu_438_p3 = esl_concat<12,2>(add_ln104_4_reg_600.read(), ap_const_lv2_0);
}

void i_convolution5::thread_tmp_9_fu_248_p3() {
    tmp_9_fu_248_p3 = esl_concat<7,4>(co_0_reg_140.read(), ap_const_lv4_0);
}

void i_convolution5::thread_tmp_fu_502_p4() {
    tmp_fu_502_p4 = bitcast_ln108_fu_499_p1.read().range(30, 23);
}

void i_convolution5::thread_trunc_ln104_1_fu_465_p1() {
    trunc_ln104_1_fu_465_p1 = add_ln104_6_fu_455_p2.read().range(15-1, 0);
}

void i_convolution5::thread_trunc_ln104_fu_461_p1() {
    trunc_ln104_fu_461_p1 = add_ln104_6_fu_455_p2.read().range(17-1, 0);
}

void i_convolution5::thread_trunc_ln108_fu_512_p1() {
    trunc_ln108_fu_512_p1 = bitcast_ln108_fu_499_p1.read().range(23-1, 0);
}

void i_convolution5::thread_weights_address0() {
    weights_address0 =  (sc_lv<16>) (zext_ln104_12_fu_489_p1.read());
}

void i_convolution5::thread_weights_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        weights_ce0 = ap_const_logic_1;
    } else {
        weights_ce0 = ap_const_logic_0;
    }
}

void i_convolution5::thread_xor_ln104_fu_304_p2() {
    xor_ln104_fu_304_p2 = (icmp_ln101_fu_278_p2.read() ^ ap_const_lv1_1);
}

void i_convolution5::thread_zext_ln100_fu_256_p1() {
    zext_ln100_fu_256_p1 = esl_zext<12,11>(tmp_9_fu_248_p3.read());
}

void i_convolution5::thread_zext_ln104_10_fu_435_p1() {
    zext_ln104_10_fu_435_p1 = esl_zext<64,12>(add_ln104_4_reg_600.read());
}

void i_convolution5::thread_zext_ln104_11_fu_445_p1() {
    zext_ln104_11_fu_445_p1 = esl_zext<64,14>(tmp_12_fu_438_p3.read());
}

void i_convolution5::thread_zext_ln104_12_fu_489_p1() {
    zext_ln104_12_fu_489_p1 = esl_zext<64,17>(add_ln104_8_reg_621.read());
}

void i_convolution5::thread_zext_ln104_1_fu_399_p1() {
    zext_ln104_1_fu_399_p1 = esl_zext<64,3>(select_ln104_1_reg_581.read());
}

void i_convolution5::thread_zext_ln104_2_fu_300_p1() {
    zext_ln104_2_fu_300_p1 = esl_zext<8,3>(select_ln104_1_fu_292_p3.read());
}

void i_convolution5::thread_zext_ln104_3_fu_402_p1() {
    zext_ln104_3_fu_402_p1 = esl_zext<17,3>(select_ln104_3_reg_587.read());
}

void i_convolution5::thread_zext_ln104_4_fu_405_p1() {
    zext_ln104_4_fu_405_p1 = esl_zext<10,3>(select_ln104_3_reg_587.read());
}

void i_convolution5::thread_zext_ln104_5_fu_350_p1() {
    zext_ln104_5_fu_350_p1 = esl_zext<12,5>(select_ln104_2_fu_334_p3.read());
}

void i_convolution5::thread_zext_ln104_6_fu_354_p1() {
    zext_ln104_6_fu_354_p1 = esl_zext<8,5>(select_ln104_2_fu_334_p3.read());
}

void i_convolution5::thread_zext_ln104_7_fu_366_p1() {
    zext_ln104_7_fu_366_p1 = esl_zext<8,7>(tmp_10_fu_358_p3.read());
}

void i_convolution5::thread_zext_ln104_8_fu_408_p1() {
    zext_ln104_8_fu_408_p1 = esl_zext<10,8>(add_ln104_1_reg_594.read());
}

void i_convolution5::thread_zext_ln104_9_fu_430_p1() {
    zext_ln104_9_fu_430_p1 = esl_zext<64,10>(add_ln104_3_fu_424_p2.read());
}

void i_convolution5::thread_zext_ln104_fu_244_p1() {
    zext_ln104_fu_244_p1 = esl_zext<64,7>(co_0_reg_140.read());
}

void i_convolution5::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln97_fu_232_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln100_fu_260_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln100_fu_260_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

}

