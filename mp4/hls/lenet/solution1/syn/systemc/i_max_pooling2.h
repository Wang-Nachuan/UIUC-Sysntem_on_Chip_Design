// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _i_max_pooling2_HH_
#define _i_max_pooling2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenet_top_fcmp_32dEe.h"

namespace ap_rtl {

struct i_max_pooling2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<11> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    i_max_pooling2(sc_module_name name);
    SC_HAS_PROCESS(i_max_pooling2);

    ~i_max_pooling2();

    sc_trace_file* mVcdFile;

    lenet_top_fcmp_32dEe<1,2,32,32,1>* lenet_top_fcmp_32dEe_U38;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > indvar_flatten_reg_181;
    sc_signal< sc_lv<2> > i_0_reg_192;
    sc_signal< sc_lv<32> > max_value_1_reg_203;
    sc_signal< sc_lv<2> > j_0_reg_215;
    sc_signal< sc_lv<11> > add_ln33_fu_239_p2;
    sc_signal< sc_lv<11> > add_ln33_reg_747;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln34_fu_245_p2;
    sc_signal< sc_lv<1> > icmp_ln34_reg_752;
    sc_signal< sc_lv<1> > icmp_ln33_fu_233_p2;
    sc_signal< sc_lv<3> > select_ln42_1_fu_264_p3;
    sc_signal< sc_lv<3> > select_ln42_1_reg_762;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<10> > sext_ln42_fu_301_p1;
    sc_signal< sc_lv<10> > sext_ln42_reg_767;
    sc_signal< sc_lv<4> > select_ln34_fu_382_p3;
    sc_signal< sc_lv<4> > select_ln34_reg_772;
    sc_signal< sc_lv<5> > select_ln34_1_fu_398_p3;
    sc_signal< sc_lv<5> > select_ln34_1_reg_778;
    sc_signal< sc_lv<4> > select_ln34_2_fu_406_p3;
    sc_signal< sc_lv<4> > select_ln34_2_reg_783;
    sc_signal< sc_lv<12> > sub_ln45_1_fu_448_p2;
    sc_signal< sc_lv<12> > sub_ln45_1_reg_788;
    sc_signal< sc_lv<5> > shl_ln42_1_fu_454_p3;
    sc_signal< sc_lv<5> > shl_ln42_1_reg_793;
    sc_signal< sc_lv<1> > icmp_ln39_fu_462_p2;
    sc_signal< sc_lv<1> > icmp_ln39_reg_798;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln39_reg_798_pp0_iter1_reg;
    sc_signal< sc_lv<3> > add_ln39_1_fu_468_p2;
    sc_signal< sc_lv<3> > add_ln39_1_reg_802;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > select_ln39_fu_486_p3;
    sc_signal< sc_lv<2> > select_ln39_reg_807;
    sc_signal< sc_lv<2> > select_ln39_1_fu_494_p3;
    sc_signal< sc_lv<2> > select_ln39_1_reg_812;
    sc_signal< sc_lv<10> > add_ln42_fu_515_p2;
    sc_signal< sc_lv<10> > add_ln42_reg_817;
    sc_signal< sc_lv<9> > trunc_ln42_fu_520_p1;
    sc_signal< sc_lv<9> > trunc_ln42_reg_822;
    sc_signal< sc_lv<5> > add_ln42_1_fu_528_p2;
    sc_signal< sc_lv<5> > add_ln42_1_reg_827;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<2> > j_fu_571_p2;
    sc_signal< sc_lv<2> > j_reg_837;
    sc_signal< sc_lv<32> > input_load_reg_842;
    sc_signal< sc_lv<1> > icmp_ln42_fu_594_p2;
    sc_signal< sc_lv<1> > icmp_ln42_reg_849;
    sc_signal< sc_lv<1> > icmp_ln42_1_fu_600_p2;
    sc_signal< sc_lv<1> > icmp_ln42_1_reg_854;
    sc_signal< sc_lv<32> > max_value_fu_657_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<12> > add_ln45_1_fu_667_p2;
    sc_signal< sc_lv<12> > add_ln45_1_reg_864;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<4> > w_fu_672_p2;
    sc_signal< sc_lv<4> > w_reg_869;
    sc_signal< sc_lv<8> > select_ln34_3_fu_683_p3;
    sc_signal< sc_lv<8> > select_ln34_3_reg_874;
    sc_signal< sc_lv<1> > grp_fu_226_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_879;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<11> > indvar_flatten24_reg_122;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<3> > c_0_reg_133;
    sc_signal< sc_lv<8> > indvar_flatten6_reg_145;
    sc_signal< sc_lv<4> > h_0_reg_157;
    sc_signal< sc_lv<4> > w_0_reg_169;
    sc_signal< sc_lv<3> > ap_phi_mux_indvar_flatten_phi_fu_185_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > ap_phi_mux_i_0_phi_fu_196_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_max_value_1_phi_fu_207_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_j_0_phi_fu_219_p4;
    sc_signal< sc_lv<64> > zext_ln42_4_fu_566_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln45_3_fu_731_p1;
    sc_signal< sc_lv<32> > grp_fu_226_p0;
    sc_signal< sc_lv<32> > grp_fu_226_p1;
    sc_signal< sc_lv<3> > c_fu_251_p2;
    sc_signal< sc_lv<8> > tmp_s_fu_271_p3;
    sc_signal< sc_lv<5> > tmp_1_fu_283_p3;
    sc_signal< sc_lv<9> > zext_ln42_fu_279_p1;
    sc_signal< sc_lv<9> > zext_ln42_1_fu_291_p1;
    sc_signal< sc_lv<9> > sub_ln42_fu_295_p2;
    sc_signal< sc_lv<7> > tmp_2_fu_305_p3;
    sc_signal< sc_lv<4> > tmp_4_fu_317_p3;
    sc_signal< sc_lv<8> > zext_ln45_fu_313_p1;
    sc_signal< sc_lv<8> > zext_ln45_1_fu_325_p1;
    sc_signal< sc_lv<8> > sub_ln45_fu_329_p2;
    sc_signal< sc_lv<5> > shl_ln_fu_339_p3;
    sc_signal< sc_lv<1> > icmp_ln35_fu_359_p2;
    sc_signal< sc_lv<1> > xor_ln42_fu_354_p2;
    sc_signal< sc_lv<4> > select_ln42_fu_257_p3;
    sc_signal< sc_lv<1> > and_ln42_2_fu_365_p2;
    sc_signal< sc_lv<1> > or_ln34_fu_377_p2;
    sc_signal< sc_lv<4> > h_fu_371_p2;
    sc_signal< sc_lv<5> > shl_ln42_mid1_fu_390_p3;
    sc_signal< sc_lv<5> > select_ln42_2_fu_347_p3;
    sc_signal< sc_lv<9> > sext_ln45_fu_335_p1;
    sc_signal< sc_lv<9> > zext_ln34_fu_414_p1;
    sc_signal< sc_lv<9> > add_ln45_fu_418_p2;
    sc_signal< sc_lv<8> > trunc_ln45_fu_424_p1;
    sc_signal< sc_lv<10> > tmp_10_fu_436_p3;
    sc_signal< sc_lv<12> > p_shl_cast_fu_428_p3;
    sc_signal< sc_lv<12> > sext_ln45_1_fu_444_p1;
    sc_signal< sc_lv<1> > icmp_ln40_fu_480_p2;
    sc_signal< sc_lv<2> > i_fu_474_p2;
    sc_signal< sc_lv<5> > zext_ln39_fu_502_p1;
    sc_signal< sc_lv<5> > add_ln39_fu_506_p2;
    sc_signal< sc_lv<10> > zext_ln42_2_fu_511_p1;
    sc_signal< sc_lv<5> > zext_ln40_fu_524_p1;
    sc_signal< sc_lv<12> > tmp_11_fu_540_p3;
    sc_signal< sc_lv<14> > p_shl3_cast_fu_533_p3;
    sc_signal< sc_lv<14> > sext_ln42_1_fu_547_p1;
    sc_signal< sc_lv<14> > sub_ln42_1_fu_551_p2;
    sc_signal< sc_lv<14> > zext_ln42_3_fu_557_p1;
    sc_signal< sc_lv<14> > add_ln42_2_fu_560_p2;
    sc_signal< sc_lv<32> > bitcast_ln42_fu_576_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_580_p4;
    sc_signal< sc_lv<23> > trunc_ln42_1_fu_590_p1;
    sc_signal< sc_lv<32> > bitcast_ln42_1_fu_606_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_609_p4;
    sc_signal< sc_lv<23> > trunc_ln42_2_fu_619_p1;
    sc_signal< sc_lv<1> > icmp_ln42_3_fu_633_p2;
    sc_signal< sc_lv<1> > icmp_ln42_2_fu_627_p2;
    sc_signal< sc_lv<1> > or_ln42_fu_623_p2;
    sc_signal< sc_lv<1> > or_ln42_1_fu_639_p2;
    sc_signal< sc_lv<1> > and_ln42_fu_645_p2;
    sc_signal< sc_lv<1> > and_ln42_1_fu_651_p2;
    sc_signal< sc_lv<12> > zext_ln45_2_fu_664_p1;
    sc_signal< sc_lv<8> > add_ln34_1_fu_677_p2;
    sc_signal< sc_lv<32> > bitcast_ln44_fu_690_p1;
    sc_signal< sc_lv<8> > tmp_fu_694_p4;
    sc_signal< sc_lv<23> > trunc_ln44_fu_704_p1;
    sc_signal< sc_lv<1> > icmp_ln44_1_fu_714_p2;
    sc_signal< sc_lv<1> > icmp_ln44_fu_708_p2;
    sc_signal< sc_lv<1> > or_ln44_fu_720_p2;
    sc_signal< sc_lv<1> > and_ln44_fu_726_p2;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_pp0_stage1;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<8> ap_ST_fsm_state9;
    static const sc_lv<8> ap_ST_fsm_state10;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_D368D4A5;
    static const sc_lv<11> ap_const_lv11_498;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<8> ap_const_lv8_C4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln33_fu_239_p2();
    void thread_add_ln34_1_fu_677_p2();
    void thread_add_ln39_1_fu_468_p2();
    void thread_add_ln39_fu_506_p2();
    void thread_add_ln42_1_fu_528_p2();
    void thread_add_ln42_2_fu_560_p2();
    void thread_add_ln42_fu_515_p2();
    void thread_add_ln45_1_fu_667_p2();
    void thread_add_ln45_fu_418_p2();
    void thread_and_ln42_1_fu_651_p2();
    void thread_and_ln42_2_fu_365_p2();
    void thread_and_ln42_fu_645_p2();
    void thread_and_ln44_fu_726_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage1_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_block_state7_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_0_phi_fu_196_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_185_p4();
    void thread_ap_phi_mux_j_0_phi_fu_219_p4();
    void thread_ap_phi_mux_max_value_1_phi_fu_207_p4();
    void thread_ap_ready();
    void thread_bitcast_ln42_1_fu_606_p1();
    void thread_bitcast_ln42_fu_576_p1();
    void thread_bitcast_ln44_fu_690_p1();
    void thread_c_fu_251_p2();
    void thread_grp_fu_226_p0();
    void thread_grp_fu_226_p1();
    void thread_h_fu_371_p2();
    void thread_i_fu_474_p2();
    void thread_icmp_ln33_fu_233_p2();
    void thread_icmp_ln34_fu_245_p2();
    void thread_icmp_ln35_fu_359_p2();
    void thread_icmp_ln39_fu_462_p2();
    void thread_icmp_ln40_fu_480_p2();
    void thread_icmp_ln42_1_fu_600_p2();
    void thread_icmp_ln42_2_fu_627_p2();
    void thread_icmp_ln42_3_fu_633_p2();
    void thread_icmp_ln42_fu_594_p2();
    void thread_icmp_ln44_1_fu_714_p2();
    void thread_icmp_ln44_fu_708_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_fu_571_p2();
    void thread_max_value_fu_657_p3();
    void thread_or_ln34_fu_377_p2();
    void thread_or_ln42_1_fu_639_p2();
    void thread_or_ln42_fu_623_p2();
    void thread_or_ln44_fu_720_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl3_cast_fu_533_p3();
    void thread_p_shl_cast_fu_428_p3();
    void thread_select_ln34_1_fu_398_p3();
    void thread_select_ln34_2_fu_406_p3();
    void thread_select_ln34_3_fu_683_p3();
    void thread_select_ln34_fu_382_p3();
    void thread_select_ln39_1_fu_494_p3();
    void thread_select_ln39_fu_486_p3();
    void thread_select_ln42_1_fu_264_p3();
    void thread_select_ln42_2_fu_347_p3();
    void thread_select_ln42_fu_257_p3();
    void thread_sext_ln42_1_fu_547_p1();
    void thread_sext_ln42_fu_301_p1();
    void thread_sext_ln45_1_fu_444_p1();
    void thread_sext_ln45_fu_335_p1();
    void thread_shl_ln42_1_fu_454_p3();
    void thread_shl_ln42_mid1_fu_390_p3();
    void thread_shl_ln_fu_339_p3();
    void thread_sub_ln42_1_fu_551_p2();
    void thread_sub_ln42_fu_295_p2();
    void thread_sub_ln45_1_fu_448_p2();
    void thread_sub_ln45_fu_329_p2();
    void thread_tmp_10_fu_436_p3();
    void thread_tmp_11_fu_540_p3();
    void thread_tmp_1_fu_283_p3();
    void thread_tmp_2_fu_305_p3();
    void thread_tmp_4_fu_317_p3();
    void thread_tmp_7_fu_580_p4();
    void thread_tmp_8_fu_609_p4();
    void thread_tmp_fu_694_p4();
    void thread_tmp_s_fu_271_p3();
    void thread_trunc_ln42_1_fu_590_p1();
    void thread_trunc_ln42_2_fu_619_p1();
    void thread_trunc_ln42_fu_520_p1();
    void thread_trunc_ln44_fu_704_p1();
    void thread_trunc_ln45_fu_424_p1();
    void thread_w_fu_672_p2();
    void thread_xor_ln42_fu_354_p2();
    void thread_zext_ln34_fu_414_p1();
    void thread_zext_ln39_fu_502_p1();
    void thread_zext_ln40_fu_524_p1();
    void thread_zext_ln42_1_fu_291_p1();
    void thread_zext_ln42_2_fu_511_p1();
    void thread_zext_ln42_3_fu_557_p1();
    void thread_zext_ln42_4_fu_566_p1();
    void thread_zext_ln42_fu_279_p1();
    void thread_zext_ln45_1_fu_325_p1();
    void thread_zext_ln45_2_fu_664_p1();
    void thread_zext_ln45_3_fu_731_p1();
    void thread_zext_ln45_fu_313_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
