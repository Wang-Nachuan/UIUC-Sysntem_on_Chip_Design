// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ld_weights3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ld_weights3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ld_weights3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> ld_weights3::ap_ST_fsm_state1 = "1";
const sc_lv<6> ld_weights3::ap_ST_fsm_state2 = "10";
const sc_lv<6> ld_weights3::ap_ST_fsm_state3 = "100";
const sc_lv<6> ld_weights3::ap_ST_fsm_state4 = "1000";
const sc_lv<6> ld_weights3::ap_ST_fsm_state5 = "10000";
const sc_lv<6> ld_weights3::ap_ST_fsm_state6 = "100000";
const sc_lv<32> ld_weights3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> ld_weights3::ap_const_lv32_1 = "1";
const sc_lv<1> ld_weights3::ap_const_lv1_0 = "0";
const sc_lv<32> ld_weights3::ap_const_lv32_2 = "10";
const sc_lv<32> ld_weights3::ap_const_lv32_3 = "11";
const sc_lv<32> ld_weights3::ap_const_lv32_4 = "100";
const sc_lv<5> ld_weights3::ap_const_lv5_0 = "00000";
const sc_lv<1> ld_weights3::ap_const_lv1_1 = "1";
const sc_lv<3> ld_weights3::ap_const_lv3_0 = "000";
const sc_lv<32> ld_weights3::ap_const_lv32_5 = "101";
const sc_lv<5> ld_weights3::ap_const_lv5_10 = "10000";
const sc_lv<5> ld_weights3::ap_const_lv5_1 = "1";
const sc_lv<3> ld_weights3::ap_const_lv3_6 = "110";
const sc_lv<3> ld_weights3::ap_const_lv3_1 = "1";
const sc_lv<2> ld_weights3::ap_const_lv2_0 = "00";
const sc_lv<3> ld_weights3::ap_const_lv3_5 = "101";
const bool ld_weights3::ap_const_boolean_1 = true;

ld_weights3::ld_weights3(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln193_1_fu_194_p2);
    sensitive << ( sext_ln193_1_fu_178_p1 );
    sensitive << ( sext_ln193_2_fu_190_p1 );

    SC_METHOD(thread_add_ln193_2_fu_216_p2);
    sensitive << ( add_ln193_1_reg_290 );
    sensitive << ( zext_ln193_2_fu_212_p1 );

    SC_METHOD(thread_add_ln193_3_fu_237_p2);
    sensitive << ( trunc_ln193_fu_221_p1 );
    sensitive << ( p_shl3_cast_fu_229_p3 );

    SC_METHOD(thread_add_ln193_4_fu_259_p2);
    sensitive << ( add_ln193_3_reg_303 );
    sensitive << ( zext_ln193_4_fu_255_p1 );

    SC_METHOD(thread_add_ln193_fu_173_p2);
    sensitive << ( sext_ln193_reg_277 );
    sensitive << ( zext_ln193_3_fu_169_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln189_fu_111_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln189_fu_111_p2 );

    SC_METHOD(thread_i_fu_117_p2);
    sensitive << ( i_0_reg_67 );

    SC_METHOD(thread_icmp_ln189_fu_111_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_67 );

    SC_METHOD(thread_icmp_ln190_fu_157_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_78 );

    SC_METHOD(thread_icmp_ln191_fu_200_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_reg_89 );

    SC_METHOD(thread_icmp_ln192_fu_243_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( l_0_reg_100 );

    SC_METHOD(thread_j_fu_163_p2);
    sensitive << ( j_0_reg_78 );

    SC_METHOD(thread_k_fu_206_p2);
    sensitive << ( k_0_reg_89 );

    SC_METHOD(thread_l_fu_249_p2);
    sensitive << ( l_0_reg_100 );

    SC_METHOD(thread_p_shl3_cast_fu_229_p3);
    sensitive << ( trunc_ln193_1_fu_225_p1 );

    SC_METHOD(thread_sext_ln193_1_fu_178_p1);
    sensitive << ( add_ln193_fu_173_p2 );

    SC_METHOD(thread_sext_ln193_2_fu_190_p1);
    sensitive << ( tmp_2_fu_182_p3 );

    SC_METHOD(thread_sext_ln193_fu_153_p1);
    sensitive << ( sub_ln193_fu_147_p2 );

    SC_METHOD(thread_sub_ln193_fu_147_p2);
    sensitive << ( zext_ln193_fu_131_p1 );
    sensitive << ( zext_ln193_1_fu_143_p1 );

    SC_METHOD(thread_tmp_2_fu_182_p3);
    sensitive << ( add_ln193_fu_173_p2 );

    SC_METHOD(thread_tmp_fu_123_p3);
    sensitive << ( i_0_reg_67 );

    SC_METHOD(thread_tmp_s_fu_135_p3);
    sensitive << ( i_0_reg_67 );

    SC_METHOD(thread_trunc_ln193_1_fu_225_p1);
    sensitive << ( add_ln193_2_fu_216_p2 );

    SC_METHOD(thread_trunc_ln193_fu_221_p1);
    sensitive << ( add_ln193_2_fu_216_p2 );

    SC_METHOD(thread_weights3_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln193_5_fu_264_p1 );

    SC_METHOD(thread_weights3_buf_address0);
    sensitive << ( zext_ln193_5_reg_316 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_weights3_buf_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_weights3_buf_d0);
    sensitive << ( weights3_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_weights3_buf_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_weights3_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_zext_ln193_1_fu_143_p1);
    sensitive << ( tmp_s_fu_135_p3 );

    SC_METHOD(thread_zext_ln193_2_fu_212_p1);
    sensitive << ( k_0_reg_89 );

    SC_METHOD(thread_zext_ln193_3_fu_169_p1);
    sensitive << ( j_0_reg_78 );

    SC_METHOD(thread_zext_ln193_4_fu_255_p1);
    sensitive << ( l_0_reg_100 );

    SC_METHOD(thread_zext_ln193_5_fu_264_p1);
    sensitive << ( add_ln193_4_fu_259_p2 );

    SC_METHOD(thread_zext_ln193_fu_131_p1);
    sensitive << ( tmp_fu_123_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln189_fu_111_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln190_fu_157_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln191_fu_200_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln192_fu_243_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ld_weights3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, weights3_address0, "(port)weights3_address0");
    sc_trace(mVcdFile, weights3_ce0, "(port)weights3_ce0");
    sc_trace(mVcdFile, weights3_q0, "(port)weights3_q0");
    sc_trace(mVcdFile, weights3_buf_address0, "(port)weights3_buf_address0");
    sc_trace(mVcdFile, weights3_buf_ce0, "(port)weights3_buf_ce0");
    sc_trace(mVcdFile, weights3_buf_we0, "(port)weights3_buf_we0");
    sc_trace(mVcdFile, weights3_buf_d0, "(port)weights3_buf_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_117_p2, "i_fu_117_p2");
    sc_trace(mVcdFile, i_reg_272, "i_reg_272");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sext_ln193_fu_153_p1, "sext_ln193_fu_153_p1");
    sc_trace(mVcdFile, sext_ln193_reg_277, "sext_ln193_reg_277");
    sc_trace(mVcdFile, icmp_ln189_fu_111_p2, "icmp_ln189_fu_111_p2");
    sc_trace(mVcdFile, j_fu_163_p2, "j_fu_163_p2");
    sc_trace(mVcdFile, j_reg_285, "j_reg_285");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln193_1_fu_194_p2, "add_ln193_1_fu_194_p2");
    sc_trace(mVcdFile, add_ln193_1_reg_290, "add_ln193_1_reg_290");
    sc_trace(mVcdFile, icmp_ln190_fu_157_p2, "icmp_ln190_fu_157_p2");
    sc_trace(mVcdFile, k_fu_206_p2, "k_fu_206_p2");
    sc_trace(mVcdFile, k_reg_298, "k_reg_298");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln193_3_fu_237_p2, "add_ln193_3_fu_237_p2");
    sc_trace(mVcdFile, add_ln193_3_reg_303, "add_ln193_3_reg_303");
    sc_trace(mVcdFile, icmp_ln191_fu_200_p2, "icmp_ln191_fu_200_p2");
    sc_trace(mVcdFile, l_fu_249_p2, "l_fu_249_p2");
    sc_trace(mVcdFile, l_reg_311, "l_reg_311");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln193_5_fu_264_p1, "zext_ln193_5_fu_264_p1");
    sc_trace(mVcdFile, zext_ln193_5_reg_316, "zext_ln193_5_reg_316");
    sc_trace(mVcdFile, icmp_ln192_fu_243_p2, "icmp_ln192_fu_243_p2");
    sc_trace(mVcdFile, i_0_reg_67, "i_0_reg_67");
    sc_trace(mVcdFile, j_0_reg_78, "j_0_reg_78");
    sc_trace(mVcdFile, k_0_reg_89, "k_0_reg_89");
    sc_trace(mVcdFile, l_0_reg_100, "l_0_reg_100");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_fu_123_p3, "tmp_fu_123_p3");
    sc_trace(mVcdFile, tmp_s_fu_135_p3, "tmp_s_fu_135_p3");
    sc_trace(mVcdFile, zext_ln193_fu_131_p1, "zext_ln193_fu_131_p1");
    sc_trace(mVcdFile, zext_ln193_1_fu_143_p1, "zext_ln193_1_fu_143_p1");
    sc_trace(mVcdFile, sub_ln193_fu_147_p2, "sub_ln193_fu_147_p2");
    sc_trace(mVcdFile, zext_ln193_3_fu_169_p1, "zext_ln193_3_fu_169_p1");
    sc_trace(mVcdFile, add_ln193_fu_173_p2, "add_ln193_fu_173_p2");
    sc_trace(mVcdFile, tmp_2_fu_182_p3, "tmp_2_fu_182_p3");
    sc_trace(mVcdFile, sext_ln193_1_fu_178_p1, "sext_ln193_1_fu_178_p1");
    sc_trace(mVcdFile, sext_ln193_2_fu_190_p1, "sext_ln193_2_fu_190_p1");
    sc_trace(mVcdFile, zext_ln193_2_fu_212_p1, "zext_ln193_2_fu_212_p1");
    sc_trace(mVcdFile, add_ln193_2_fu_216_p2, "add_ln193_2_fu_216_p2");
    sc_trace(mVcdFile, trunc_ln193_1_fu_225_p1, "trunc_ln193_1_fu_225_p1");
    sc_trace(mVcdFile, trunc_ln193_fu_221_p1, "trunc_ln193_fu_221_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_229_p3, "p_shl3_cast_fu_229_p3");
    sc_trace(mVcdFile, zext_ln193_4_fu_255_p1, "zext_ln193_4_fu_255_p1");
    sc_trace(mVcdFile, add_ln193_4_fu_259_p2, "add_ln193_4_fu_259_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

ld_weights3::~ld_weights3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void ld_weights3::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln190_fu_157_p2.read(), ap_const_lv1_1))) {
        i_0_reg_67 = i_reg_272.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_67 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln191_fu_200_p2.read(), ap_const_lv1_1))) {
        j_0_reg_78 = j_reg_285.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln189_fu_111_p2.read(), ap_const_lv1_0))) {
        j_0_reg_78 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln192_fu_243_p2.read(), ap_const_lv1_1))) {
        k_0_reg_89 = k_reg_298.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln190_fu_157_p2.read()))) {
        k_0_reg_89 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln191_fu_200_p2.read()))) {
        l_0_reg_100 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        l_0_reg_100 = l_reg_311.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln190_fu_157_p2.read()))) {
        add_ln193_1_reg_290 = add_ln193_1_fu_194_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln191_fu_200_p2.read()))) {
        add_ln193_3_reg_303 = add_ln193_3_fu_237_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_272 = i_fu_117_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_285 = j_fu_163_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_reg_298 = k_fu_206_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        l_reg_311 = l_fu_249_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln189_fu_111_p2.read(), ap_const_lv1_0))) {
        sext_ln193_reg_277 = sext_ln193_fu_153_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln192_fu_243_p2.read()))) {
        zext_ln193_5_reg_316 = zext_ln193_5_fu_264_p1.read();
    }
}

void ld_weights3::thread_add_ln193_1_fu_194_p2() {
    add_ln193_1_fu_194_p2 = (!sext_ln193_1_fu_178_p1.read().is_01() || !sext_ln193_2_fu_190_p1.read().is_01())? sc_lv<64>(): (sc_bigint<64>(sext_ln193_1_fu_178_p1.read()) + sc_bigint<64>(sext_ln193_2_fu_190_p1.read()));
}

void ld_weights3::thread_add_ln193_2_fu_216_p2() {
    add_ln193_2_fu_216_p2 = (!add_ln193_1_reg_290.read().is_01() || !zext_ln193_2_fu_212_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(add_ln193_1_reg_290.read()) + sc_biguint<64>(zext_ln193_2_fu_212_p1.read()));
}

void ld_weights3::thread_add_ln193_3_fu_237_p2() {
    add_ln193_3_fu_237_p2 = (!trunc_ln193_fu_221_p1.read().is_01() || !p_shl3_cast_fu_229_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(trunc_ln193_fu_221_p1.read()) + sc_biguint<13>(p_shl3_cast_fu_229_p3.read()));
}

void ld_weights3::thread_add_ln193_4_fu_259_p2() {
    add_ln193_4_fu_259_p2 = (!add_ln193_3_reg_303.read().is_01() || !zext_ln193_4_fu_255_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(add_ln193_3_reg_303.read()) + sc_biguint<13>(zext_ln193_4_fu_255_p1.read()));
}

void ld_weights3::thread_add_ln193_fu_173_p2() {
    add_ln193_fu_173_p2 = (!sext_ln193_reg_277.read().is_01() || !zext_ln193_3_fu_169_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(sext_ln193_reg_277.read()) + sc_biguint<10>(zext_ln193_3_fu_169_p1.read()));
}

void ld_weights3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void ld_weights3::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void ld_weights3::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void ld_weights3::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void ld_weights3::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void ld_weights3::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void ld_weights3::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln189_fu_111_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void ld_weights3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ld_weights3::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln189_fu_111_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ld_weights3::thread_i_fu_117_p2() {
    i_fu_117_p2 = (!i_0_reg_67.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_67.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void ld_weights3::thread_icmp_ln189_fu_111_p2() {
    icmp_ln189_fu_111_p2 = (!i_0_reg_67.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_67.read() == ap_const_lv5_10);
}

void ld_weights3::thread_icmp_ln190_fu_157_p2() {
    icmp_ln190_fu_157_p2 = (!j_0_reg_78.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_78.read() == ap_const_lv3_6);
}

void ld_weights3::thread_icmp_ln191_fu_200_p2() {
    icmp_ln191_fu_200_p2 = (!k_0_reg_89.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_89.read() == ap_const_lv3_5);
}

void ld_weights3::thread_icmp_ln192_fu_243_p2() {
    icmp_ln192_fu_243_p2 = (!l_0_reg_100.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(l_0_reg_100.read() == ap_const_lv3_5);
}

void ld_weights3::thread_j_fu_163_p2() {
    j_fu_163_p2 = (!j_0_reg_78.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_78.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void ld_weights3::thread_k_fu_206_p2() {
    k_fu_206_p2 = (!k_0_reg_89.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_0_reg_89.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void ld_weights3::thread_l_fu_249_p2() {
    l_fu_249_p2 = (!l_0_reg_100.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(l_0_reg_100.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void ld_weights3::thread_p_shl3_cast_fu_229_p3() {
    p_shl3_cast_fu_229_p3 = esl_concat<11,2>(trunc_ln193_1_fu_225_p1.read(), ap_const_lv2_0);
}

void ld_weights3::thread_sext_ln193_1_fu_178_p1() {
    sext_ln193_1_fu_178_p1 = esl_sext<64,10>(add_ln193_fu_173_p2.read());
}

void ld_weights3::thread_sext_ln193_2_fu_190_p1() {
    sext_ln193_2_fu_190_p1 = esl_sext<64,12>(tmp_2_fu_182_p3.read());
}

void ld_weights3::thread_sext_ln193_fu_153_p1() {
    sext_ln193_fu_153_p1 = esl_sext<10,9>(sub_ln193_fu_147_p2.read());
}

void ld_weights3::thread_sub_ln193_fu_147_p2() {
    sub_ln193_fu_147_p2 = (!zext_ln193_fu_131_p1.read().is_01() || !zext_ln193_1_fu_143_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln193_fu_131_p1.read()) - sc_biguint<9>(zext_ln193_1_fu_143_p1.read()));
}

void ld_weights3::thread_tmp_2_fu_182_p3() {
    tmp_2_fu_182_p3 = esl_concat<10,2>(add_ln193_fu_173_p2.read(), ap_const_lv2_0);
}

void ld_weights3::thread_tmp_fu_123_p3() {
    tmp_fu_123_p3 = esl_concat<5,3>(i_0_reg_67.read(), ap_const_lv3_0);
}

void ld_weights3::thread_tmp_s_fu_135_p3() {
    tmp_s_fu_135_p3 = esl_concat<5,1>(i_0_reg_67.read(), ap_const_lv1_0);
}

void ld_weights3::thread_trunc_ln193_1_fu_225_p1() {
    trunc_ln193_1_fu_225_p1 = add_ln193_2_fu_216_p2.read().range(11-1, 0);
}

void ld_weights3::thread_trunc_ln193_fu_221_p1() {
    trunc_ln193_fu_221_p1 = add_ln193_2_fu_216_p2.read().range(13-1, 0);
}

void ld_weights3::thread_weights3_address0() {
    weights3_address0 =  (sc_lv<12>) (zext_ln193_5_fu_264_p1.read());
}

void ld_weights3::thread_weights3_buf_address0() {
    weights3_buf_address0 =  (sc_lv<12>) (zext_ln193_5_reg_316.read());
}

void ld_weights3::thread_weights3_buf_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        weights3_buf_ce0 = ap_const_logic_1;
    } else {
        weights3_buf_ce0 = ap_const_logic_0;
    }
}

void ld_weights3::thread_weights3_buf_d0() {
    weights3_buf_d0 = weights3_q0.read();
}

void ld_weights3::thread_weights3_buf_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        weights3_buf_we0 = ap_const_logic_1;
    } else {
        weights3_buf_we0 = ap_const_logic_0;
    }
}

void ld_weights3::thread_weights3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        weights3_ce0 = ap_const_logic_1;
    } else {
        weights3_ce0 = ap_const_logic_0;
    }
}

void ld_weights3::thread_zext_ln193_1_fu_143_p1() {
    zext_ln193_1_fu_143_p1 = esl_zext<9,6>(tmp_s_fu_135_p3.read());
}

void ld_weights3::thread_zext_ln193_2_fu_212_p1() {
    zext_ln193_2_fu_212_p1 = esl_zext<64,3>(k_0_reg_89.read());
}

void ld_weights3::thread_zext_ln193_3_fu_169_p1() {
    zext_ln193_3_fu_169_p1 = esl_zext<10,3>(j_0_reg_78.read());
}

void ld_weights3::thread_zext_ln193_4_fu_255_p1() {
    zext_ln193_4_fu_255_p1 = esl_zext<13,3>(l_0_reg_100.read());
}

void ld_weights3::thread_zext_ln193_5_fu_264_p1() {
    zext_ln193_5_fu_264_p1 = esl_zext<64,13>(add_ln193_4_fu_259_p2.read());
}

void ld_weights3::thread_zext_ln193_fu_131_p1() {
    zext_ln193_fu_131_p1 = esl_zext<9,8>(tmp_fu_123_p3.read());
}

void ld_weights3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln189_fu_111_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln190_fu_157_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln191_fu_200_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln192_fu_243_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

