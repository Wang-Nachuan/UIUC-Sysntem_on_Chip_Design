// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ld_weights3_HH_
#define _ld_weights3_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct ld_weights3 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > weights3_address0;
    sc_out< sc_logic > weights3_ce0;
    sc_in< sc_lv<32> > weights3_q0;
    sc_out< sc_lv<12> > weights3_buf_address0;
    sc_out< sc_logic > weights3_buf_ce0;
    sc_out< sc_logic > weights3_buf_we0;
    sc_out< sc_lv<32> > weights3_buf_d0;


    // Module declarations
    ld_weights3(sc_module_name name);
    SC_HAS_PROCESS(ld_weights3);

    ~ld_weights3();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > i_fu_117_p2;
    sc_signal< sc_lv<5> > i_reg_272;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > sext_ln193_fu_153_p1;
    sc_signal< sc_lv<10> > sext_ln193_reg_277;
    sc_signal< sc_lv<1> > icmp_ln189_fu_111_p2;
    sc_signal< sc_lv<3> > j_fu_163_p2;
    sc_signal< sc_lv<3> > j_reg_285;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > add_ln193_1_fu_194_p2;
    sc_signal< sc_lv<64> > add_ln193_1_reg_290;
    sc_signal< sc_lv<1> > icmp_ln190_fu_157_p2;
    sc_signal< sc_lv<3> > k_fu_206_p2;
    sc_signal< sc_lv<3> > k_reg_298;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<13> > add_ln193_3_fu_237_p2;
    sc_signal< sc_lv<13> > add_ln193_3_reg_303;
    sc_signal< sc_lv<1> > icmp_ln191_fu_200_p2;
    sc_signal< sc_lv<3> > l_fu_249_p2;
    sc_signal< sc_lv<3> > l_reg_311;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > zext_ln193_5_fu_264_p1;
    sc_signal< sc_lv<64> > zext_ln193_5_reg_316;
    sc_signal< sc_lv<1> > icmp_ln192_fu_243_p2;
    sc_signal< sc_lv<5> > i_0_reg_67;
    sc_signal< sc_lv<3> > j_0_reg_78;
    sc_signal< sc_lv<3> > k_0_reg_89;
    sc_signal< sc_lv<3> > l_0_reg_100;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > tmp_fu_123_p3;
    sc_signal< sc_lv<6> > tmp_s_fu_135_p3;
    sc_signal< sc_lv<9> > zext_ln193_fu_131_p1;
    sc_signal< sc_lv<9> > zext_ln193_1_fu_143_p1;
    sc_signal< sc_lv<9> > sub_ln193_fu_147_p2;
    sc_signal< sc_lv<10> > zext_ln193_3_fu_169_p1;
    sc_signal< sc_lv<10> > add_ln193_fu_173_p2;
    sc_signal< sc_lv<12> > tmp_2_fu_182_p3;
    sc_signal< sc_lv<64> > sext_ln193_1_fu_178_p1;
    sc_signal< sc_lv<64> > sext_ln193_2_fu_190_p1;
    sc_signal< sc_lv<64> > zext_ln193_2_fu_212_p1;
    sc_signal< sc_lv<64> > add_ln193_2_fu_216_p2;
    sc_signal< sc_lv<11> > trunc_ln193_1_fu_225_p1;
    sc_signal< sc_lv<13> > trunc_ln193_fu_221_p1;
    sc_signal< sc_lv<13> > p_shl3_cast_fu_229_p3;
    sc_signal< sc_lv<13> > zext_ln193_4_fu_255_p1;
    sc_signal< sc_lv<13> > add_ln193_4_fu_259_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln193_1_fu_194_p2();
    void thread_add_ln193_2_fu_216_p2();
    void thread_add_ln193_3_fu_237_p2();
    void thread_add_ln193_4_fu_259_p2();
    void thread_add_ln193_fu_173_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_117_p2();
    void thread_icmp_ln189_fu_111_p2();
    void thread_icmp_ln190_fu_157_p2();
    void thread_icmp_ln191_fu_200_p2();
    void thread_icmp_ln192_fu_243_p2();
    void thread_j_fu_163_p2();
    void thread_k_fu_206_p2();
    void thread_l_fu_249_p2();
    void thread_p_shl3_cast_fu_229_p3();
    void thread_sext_ln193_1_fu_178_p1();
    void thread_sext_ln193_2_fu_190_p1();
    void thread_sext_ln193_fu_153_p1();
    void thread_sub_ln193_fu_147_p2();
    void thread_tmp_2_fu_182_p3();
    void thread_tmp_fu_123_p3();
    void thread_tmp_s_fu_135_p3();
    void thread_trunc_ln193_1_fu_225_p1();
    void thread_trunc_ln193_fu_221_p1();
    void thread_weights3_address0();
    void thread_weights3_buf_address0();
    void thread_weights3_buf_ce0();
    void thread_weights3_buf_d0();
    void thread_weights3_buf_we0();
    void thread_weights3_ce0();
    void thread_zext_ln193_1_fu_143_p1();
    void thread_zext_ln193_2_fu_212_p1();
    void thread_zext_ln193_3_fu_169_p1();
    void thread_zext_ln193_4_fu_255_p1();
    void thread_zext_ln193_5_fu_264_p1();
    void thread_zext_ln193_fu_131_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
