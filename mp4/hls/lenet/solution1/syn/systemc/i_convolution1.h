// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _i_convolution1_HH_
#define _i_convolution1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenet_top_fadd_32bkb.h"
#include "lenet_top_fmul_32cud.h"

namespace ap_rtl {

struct i_convolution1 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > input_0_address0;
    sc_out< sc_logic > input_0_ce0;
    sc_in< sc_lv<32> > input_0_q0;
    sc_out< sc_lv<8> > weights_0_address0;
    sc_out< sc_logic > weights_0_ce0;
    sc_in< sc_lv<32> > weights_0_q0;
    sc_out< sc_lv<3> > bias_address0;
    sc_out< sc_logic > bias_ce0;
    sc_in< sc_lv<32> > bias_q0;
    sc_out< sc_lv<13> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    i_convolution1(sc_module_name name);
    SC_HAS_PROCESS(i_convolution1);

    ~i_convolution1();

    sc_trace_file* mVcdFile;

    lenet_top_fadd_32bkb<1,5,32,32,32>* lenet_top_fadd_32bkb_U7;
    lenet_top_fmul_32cud<1,4,32,32,32>* lenet_top_fmul_32cud_U8;
    sc_signal< sc_lv<23> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > co_fu_196_p2;
    sc_signal< sc_lv<3> > co_reg_435;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > add_ln21_2_fu_227_p2;
    sc_signal< sc_lv<6> > add_ln21_2_reg_440;
    sc_signal< sc_lv<1> > icmp_ln13_fu_190_p2;
    sc_signal< sc_lv<10> > sext_ln23_fu_251_p1;
    sc_signal< sc_lv<10> > sext_ln23_reg_445;
    sc_signal< sc_lv<3> > bias_addr_reg_450;
    sc_signal< sc_lv<5> > h_fu_261_p2;
    sc_signal< sc_lv<5> > h_reg_458;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<14> > sub_ln23_1_fu_300_p2;
    sc_signal< sc_lv<14> > sub_ln23_1_reg_463;
    sc_signal< sc_lv<1> > icmp_ln14_fu_255_p2;
    sc_signal< sc_lv<5> > w_fu_312_p2;
    sc_signal< sc_lv<5> > w_reg_471;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > m_fu_328_p2;
    sc_signal< sc_lv<3> > m_reg_479;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<9> > add_ln21_4_fu_359_p2;
    sc_signal< sc_lv<9> > add_ln21_4_reg_484;
    sc_signal< sc_lv<1> > icmp_ln18_fu_322_p2;
    sc_signal< sc_lv<5> > add_ln21_fu_365_p2;
    sc_signal< sc_lv<5> > add_ln21_reg_489;
    sc_signal< sc_lv<3> > n_fu_381_p2;
    sc_signal< sc_lv<3> > n_reg_497;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln20_fu_375_p2;
    sc_signal< sc_lv<32> > weights_0_load_reg_512;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > input_0_load_reg_517;
    sc_signal< sc_lv<32> > grp_fu_186_p2;
    sc_signal< sc_lv<32> > tmp_7_reg_522;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > grp_fu_180_p2;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > bias_load_reg_532;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<14> > add_ln23_1_fu_423_p2;
    sc_signal< sc_lv<14> > add_ln23_1_reg_537;
    sc_signal< sc_lv<32> > tmp_reg_542;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<3> > co_0_reg_99;
    sc_signal< sc_lv<5> > h_0_reg_110;
    sc_signal< sc_lv<1> > icmp_ln15_fu_306_p2;
    sc_signal< sc_lv<5> > w_0_reg_122;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<32> > sum_0_reg_134;
    sc_signal< sc_lv<3> > m_0_reg_146;
    sc_signal< sc_lv<32> > sum_1_reg_157;
    sc_signal< sc_lv<3> > n_0_reg_169;
    sc_signal< sc_lv<64> > zext_ln21_fu_202_p1;
    sc_signal< sc_lv<64> > zext_ln21_9_fu_396_p1;
    sc_signal< sc_lv<64> > zext_ln21_4_fu_414_p1;
    sc_signal< sc_lv<64> > zext_ln23_3_fu_428_p1;
    sc_signal< sc_lv<32> > grp_fu_180_p0;
    sc_signal< sc_lv<32> > grp_fu_180_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<5> > tmp_s_fu_211_p3;
    sc_signal< sc_lv<6> > zext_ln21_1_fu_207_p1;
    sc_signal< sc_lv<6> > zext_ln21_2_fu_219_p1;
    sc_signal< sc_lv<8> > tmp_15_fu_233_p3;
    sc_signal< sc_lv<9> > zext_ln23_fu_241_p1;
    sc_signal< sc_lv<9> > zext_ln21_3_fu_223_p1;
    sc_signal< sc_lv<9> > sub_ln23_fu_245_p2;
    sc_signal< sc_lv<10> > zext_ln23_1_fu_267_p1;
    sc_signal< sc_lv<10> > add_ln23_fu_271_p2;
    sc_signal< sc_lv<9> > trunc_ln23_fu_276_p1;
    sc_signal< sc_lv<12> > tmp_17_fu_288_p3;
    sc_signal< sc_lv<14> > p_shl3_cast_fu_280_p3;
    sc_signal< sc_lv<14> > sext_ln23_1_fu_296_p1;
    sc_signal< sc_lv<6> > zext_ln21_5_fu_334_p1;
    sc_signal< sc_lv<6> > add_ln21_3_fu_338_p2;
    sc_signal< sc_lv<8> > tmp_18_fu_347_p3;
    sc_signal< sc_lv<9> > zext_ln21_6_fu_343_p1;
    sc_signal< sc_lv<9> > zext_ln21_7_fu_355_p1;
    sc_signal< sc_lv<5> > zext_ln18_fu_318_p1;
    sc_signal< sc_lv<9> > zext_ln21_8_fu_387_p1;
    sc_signal< sc_lv<9> > add_ln21_5_fu_391_p2;
    sc_signal< sc_lv<5> > zext_ln20_fu_371_p1;
    sc_signal< sc_lv<5> > add_ln21_1_fu_401_p2;
    sc_signal< sc_lv<10> > tmp_16_fu_407_p3;
    sc_signal< sc_lv<14> > zext_ln23_2_fu_419_p1;
    sc_signal< sc_lv<23> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<23> ap_ST_fsm_state1;
    static const sc_lv<23> ap_ST_fsm_state2;
    static const sc_lv<23> ap_ST_fsm_state3;
    static const sc_lv<23> ap_ST_fsm_state4;
    static const sc_lv<23> ap_ST_fsm_state5;
    static const sc_lv<23> ap_ST_fsm_state6;
    static const sc_lv<23> ap_ST_fsm_state7;
    static const sc_lv<23> ap_ST_fsm_state8;
    static const sc_lv<23> ap_ST_fsm_state9;
    static const sc_lv<23> ap_ST_fsm_state10;
    static const sc_lv<23> ap_ST_fsm_state11;
    static const sc_lv<23> ap_ST_fsm_state12;
    static const sc_lv<23> ap_ST_fsm_state13;
    static const sc_lv<23> ap_ST_fsm_state14;
    static const sc_lv<23> ap_ST_fsm_state15;
    static const sc_lv<23> ap_ST_fsm_state16;
    static const sc_lv<23> ap_ST_fsm_state17;
    static const sc_lv<23> ap_ST_fsm_state18;
    static const sc_lv<23> ap_ST_fsm_state19;
    static const sc_lv<23> ap_ST_fsm_state20;
    static const sc_lv<23> ap_ST_fsm_state21;
    static const sc_lv<23> ap_ST_fsm_state22;
    static const sc_lv<23> ap_ST_fsm_state23;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln21_1_fu_401_p2();
    void thread_add_ln21_2_fu_227_p2();
    void thread_add_ln21_3_fu_338_p2();
    void thread_add_ln21_4_fu_359_p2();
    void thread_add_ln21_5_fu_391_p2();
    void thread_add_ln21_fu_365_p2();
    void thread_add_ln23_1_fu_423_p2();
    void thread_add_ln23_fu_271_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bias_address0();
    void thread_bias_ce0();
    void thread_co_fu_196_p2();
    void thread_grp_fu_180_p0();
    void thread_grp_fu_180_p1();
    void thread_h_fu_261_p2();
    void thread_icmp_ln13_fu_190_p2();
    void thread_icmp_ln14_fu_255_p2();
    void thread_icmp_ln15_fu_306_p2();
    void thread_icmp_ln18_fu_322_p2();
    void thread_icmp_ln20_fu_375_p2();
    void thread_input_0_address0();
    void thread_input_0_ce0();
    void thread_m_fu_328_p2();
    void thread_n_fu_381_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl3_cast_fu_280_p3();
    void thread_sext_ln23_1_fu_296_p1();
    void thread_sext_ln23_fu_251_p1();
    void thread_sub_ln23_1_fu_300_p2();
    void thread_sub_ln23_fu_245_p2();
    void thread_tmp_15_fu_233_p3();
    void thread_tmp_16_fu_407_p3();
    void thread_tmp_17_fu_288_p3();
    void thread_tmp_18_fu_347_p3();
    void thread_tmp_s_fu_211_p3();
    void thread_trunc_ln23_fu_276_p1();
    void thread_w_fu_312_p2();
    void thread_weights_0_address0();
    void thread_weights_0_ce0();
    void thread_zext_ln18_fu_318_p1();
    void thread_zext_ln20_fu_371_p1();
    void thread_zext_ln21_1_fu_207_p1();
    void thread_zext_ln21_2_fu_219_p1();
    void thread_zext_ln21_3_fu_223_p1();
    void thread_zext_ln21_4_fu_414_p1();
    void thread_zext_ln21_5_fu_334_p1();
    void thread_zext_ln21_6_fu_343_p1();
    void thread_zext_ln21_7_fu_355_p1();
    void thread_zext_ln21_8_fu_387_p1();
    void thread_zext_ln21_9_fu_396_p1();
    void thread_zext_ln21_fu_202_p1();
    void thread_zext_ln23_1_fu_267_p1();
    void thread_zext_ln23_2_fu_419_p1();
    void thread_zext_ln23_3_fu_428_p1();
    void thread_zext_ln23_fu_241_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
