// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "i_convolution1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic i_convolution1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic i_convolution1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> i_convolution1::ap_ST_fsm_state1 = "1";
const sc_lv<23> i_convolution1::ap_ST_fsm_state2 = "10";
const sc_lv<23> i_convolution1::ap_ST_fsm_state3 = "100";
const sc_lv<23> i_convolution1::ap_ST_fsm_state4 = "1000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state5 = "10000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state6 = "100000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> i_convolution1::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> i_convolution1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> i_convolution1::ap_const_lv32_1 = "1";
const sc_lv<1> i_convolution1::ap_const_lv1_0 = "0";
const sc_lv<32> i_convolution1::ap_const_lv32_2 = "10";
const sc_lv<32> i_convolution1::ap_const_lv32_3 = "11";
const sc_lv<32> i_convolution1::ap_const_lv32_4 = "100";
const sc_lv<32> i_convolution1::ap_const_lv32_5 = "101";
const sc_lv<32> i_convolution1::ap_const_lv32_6 = "110";
const sc_lv<32> i_convolution1::ap_const_lv32_A = "1010";
const sc_lv<32> i_convolution1::ap_const_lv32_F = "1111";
const sc_lv<32> i_convolution1::ap_const_lv32_10 = "10000";
const sc_lv<32> i_convolution1::ap_const_lv32_15 = "10101";
const sc_lv<3> i_convolution1::ap_const_lv3_0 = "000";
const sc_lv<1> i_convolution1::ap_const_lv1_1 = "1";
const sc_lv<5> i_convolution1::ap_const_lv5_0 = "00000";
const sc_lv<32> i_convolution1::ap_const_lv32_16 = "10110";
const sc_lv<32> i_convolution1::ap_const_lv32_B = "1011";
const sc_lv<32> i_convolution1::ap_const_lv32_11 = "10001";
const sc_lv<32> i_convolution1::ap_const_lv32_7 = "111";
const sc_lv<3> i_convolution1::ap_const_lv3_6 = "110";
const sc_lv<3> i_convolution1::ap_const_lv3_1 = "1";
const sc_lv<2> i_convolution1::ap_const_lv2_0 = "00";
const sc_lv<5> i_convolution1::ap_const_lv5_1C = "11100";
const sc_lv<5> i_convolution1::ap_const_lv5_1 = "1";
const sc_lv<3> i_convolution1::ap_const_lv3_5 = "101";
const bool i_convolution1::ap_const_boolean_1 = true;

i_convolution1::i_convolution1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lenet_top_fadd_32bkb_U7 = new lenet_top_fadd_32bkb<1,5,32,32,32>("lenet_top_fadd_32bkb_U7");
    lenet_top_fadd_32bkb_U7->clk(ap_clk);
    lenet_top_fadd_32bkb_U7->reset(ap_rst);
    lenet_top_fadd_32bkb_U7->din0(grp_fu_180_p0);
    lenet_top_fadd_32bkb_U7->din1(grp_fu_180_p1);
    lenet_top_fadd_32bkb_U7->ce(ap_var_for_const0);
    lenet_top_fadd_32bkb_U7->dout(grp_fu_180_p2);
    lenet_top_fmul_32cud_U8 = new lenet_top_fmul_32cud<1,4,32,32,32>("lenet_top_fmul_32cud_U8");
    lenet_top_fmul_32cud_U8->clk(ap_clk);
    lenet_top_fmul_32cud_U8->reset(ap_rst);
    lenet_top_fmul_32cud_U8->din0(weights_0_load_reg_512);
    lenet_top_fmul_32cud_U8->din1(input_0_load_reg_517);
    lenet_top_fmul_32cud_U8->ce(ap_var_for_const0);
    lenet_top_fmul_32cud_U8->dout(grp_fu_186_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln21_1_fu_401_p2);
    sensitive << ( w_0_reg_122 );
    sensitive << ( zext_ln20_fu_371_p1 );

    SC_METHOD(thread_add_ln21_2_fu_227_p2);
    sensitive << ( zext_ln21_1_fu_207_p1 );
    sensitive << ( zext_ln21_2_fu_219_p1 );

    SC_METHOD(thread_add_ln21_3_fu_338_p2);
    sensitive << ( add_ln21_2_reg_440 );
    sensitive << ( zext_ln21_5_fu_334_p1 );

    SC_METHOD(thread_add_ln21_4_fu_359_p2);
    sensitive << ( zext_ln21_6_fu_343_p1 );
    sensitive << ( zext_ln21_7_fu_355_p1 );

    SC_METHOD(thread_add_ln21_5_fu_391_p2);
    sensitive << ( add_ln21_4_reg_484 );
    sensitive << ( zext_ln21_8_fu_387_p1 );

    SC_METHOD(thread_add_ln21_fu_365_p2);
    sensitive << ( h_0_reg_110 );
    sensitive << ( zext_ln18_fu_318_p1 );

    SC_METHOD(thread_add_ln23_1_fu_423_p2);
    sensitive << ( sub_ln23_1_reg_463 );
    sensitive << ( zext_ln23_2_fu_419_p1 );

    SC_METHOD(thread_add_ln23_fu_271_p2);
    sensitive << ( sext_ln23_reg_445 );
    sensitive << ( zext_ln23_1_fu_267_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln13_fu_190_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln13_fu_190_p2 );

    SC_METHOD(thread_bias_address0);
    sensitive << ( bias_addr_reg_450 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_co_fu_196_p2);
    sensitive << ( co_0_reg_99 );

    SC_METHOD(thread_grp_fu_180_p0);
    sensitive << ( sum_0_reg_134 );
    sensitive << ( sum_1_reg_157 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_180_p1);
    sensitive << ( tmp_7_reg_522 );
    sensitive << ( bias_load_reg_532 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_h_fu_261_p2);
    sensitive << ( h_0_reg_110 );

    SC_METHOD(thread_icmp_ln13_fu_190_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_0_reg_99 );

    SC_METHOD(thread_icmp_ln14_fu_255_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( h_0_reg_110 );

    SC_METHOD(thread_icmp_ln15_fu_306_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( w_0_reg_122 );

    SC_METHOD(thread_icmp_ln18_fu_322_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( m_0_reg_146 );

    SC_METHOD(thread_icmp_ln20_fu_375_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( n_0_reg_169 );

    SC_METHOD(thread_input_0_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln21_4_fu_414_p1 );

    SC_METHOD(thread_input_0_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_m_fu_328_p2);
    sensitive << ( m_0_reg_146 );

    SC_METHOD(thread_n_fu_381_p2);
    sensitive << ( n_0_reg_169 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( zext_ln23_3_fu_428_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( tmp_reg_542 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_p_shl3_cast_fu_280_p3);
    sensitive << ( trunc_ln23_fu_276_p1 );

    SC_METHOD(thread_sext_ln23_1_fu_296_p1);
    sensitive << ( tmp_17_fu_288_p3 );

    SC_METHOD(thread_sext_ln23_fu_251_p1);
    sensitive << ( sub_ln23_fu_245_p2 );

    SC_METHOD(thread_sub_ln23_1_fu_300_p2);
    sensitive << ( p_shl3_cast_fu_280_p3 );
    sensitive << ( sext_ln23_1_fu_296_p1 );

    SC_METHOD(thread_sub_ln23_fu_245_p2);
    sensitive << ( zext_ln23_fu_241_p1 );
    sensitive << ( zext_ln21_3_fu_223_p1 );

    SC_METHOD(thread_tmp_15_fu_233_p3);
    sensitive << ( co_0_reg_99 );

    SC_METHOD(thread_tmp_16_fu_407_p3);
    sensitive << ( add_ln21_reg_489 );
    sensitive << ( add_ln21_1_fu_401_p2 );

    SC_METHOD(thread_tmp_17_fu_288_p3);
    sensitive << ( add_ln23_fu_271_p2 );

    SC_METHOD(thread_tmp_18_fu_347_p3);
    sensitive << ( add_ln21_3_fu_338_p2 );

    SC_METHOD(thread_tmp_s_fu_211_p3);
    sensitive << ( co_0_reg_99 );

    SC_METHOD(thread_trunc_ln23_fu_276_p1);
    sensitive << ( add_ln23_fu_271_p2 );

    SC_METHOD(thread_w_fu_312_p2);
    sensitive << ( w_0_reg_122 );

    SC_METHOD(thread_weights_0_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln21_9_fu_396_p1 );

    SC_METHOD(thread_weights_0_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_zext_ln18_fu_318_p1);
    sensitive << ( m_0_reg_146 );

    SC_METHOD(thread_zext_ln20_fu_371_p1);
    sensitive << ( n_0_reg_169 );

    SC_METHOD(thread_zext_ln21_1_fu_207_p1);
    sensitive << ( co_0_reg_99 );

    SC_METHOD(thread_zext_ln21_2_fu_219_p1);
    sensitive << ( tmp_s_fu_211_p3 );

    SC_METHOD(thread_zext_ln21_3_fu_223_p1);
    sensitive << ( tmp_s_fu_211_p3 );

    SC_METHOD(thread_zext_ln21_4_fu_414_p1);
    sensitive << ( tmp_16_fu_407_p3 );

    SC_METHOD(thread_zext_ln21_5_fu_334_p1);
    sensitive << ( m_0_reg_146 );

    SC_METHOD(thread_zext_ln21_6_fu_343_p1);
    sensitive << ( add_ln21_3_fu_338_p2 );

    SC_METHOD(thread_zext_ln21_7_fu_355_p1);
    sensitive << ( tmp_18_fu_347_p3 );

    SC_METHOD(thread_zext_ln21_8_fu_387_p1);
    sensitive << ( n_0_reg_169 );

    SC_METHOD(thread_zext_ln21_9_fu_396_p1);
    sensitive << ( add_ln21_5_fu_391_p2 );

    SC_METHOD(thread_zext_ln21_fu_202_p1);
    sensitive << ( co_0_reg_99 );

    SC_METHOD(thread_zext_ln23_1_fu_267_p1);
    sensitive << ( h_0_reg_110 );

    SC_METHOD(thread_zext_ln23_2_fu_419_p1);
    sensitive << ( w_0_reg_122 );

    SC_METHOD(thread_zext_ln23_3_fu_428_p1);
    sensitive << ( add_ln23_1_reg_537 );

    SC_METHOD(thread_zext_ln23_fu_241_p1);
    sensitive << ( tmp_15_fu_233_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln13_fu_190_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln14_fu_255_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln18_fu_322_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln20_fu_375_p2 );
    sensitive << ( icmp_ln15_fu_306_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "i_convolution1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_0_address0, "(port)input_0_address0");
    sc_trace(mVcdFile, input_0_ce0, "(port)input_0_ce0");
    sc_trace(mVcdFile, input_0_q0, "(port)input_0_q0");
    sc_trace(mVcdFile, weights_0_address0, "(port)weights_0_address0");
    sc_trace(mVcdFile, weights_0_ce0, "(port)weights_0_ce0");
    sc_trace(mVcdFile, weights_0_q0, "(port)weights_0_q0");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_q0, "(port)bias_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, co_fu_196_p2, "co_fu_196_p2");
    sc_trace(mVcdFile, co_reg_435, "co_reg_435");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln21_2_fu_227_p2, "add_ln21_2_fu_227_p2");
    sc_trace(mVcdFile, add_ln21_2_reg_440, "add_ln21_2_reg_440");
    sc_trace(mVcdFile, icmp_ln13_fu_190_p2, "icmp_ln13_fu_190_p2");
    sc_trace(mVcdFile, sext_ln23_fu_251_p1, "sext_ln23_fu_251_p1");
    sc_trace(mVcdFile, sext_ln23_reg_445, "sext_ln23_reg_445");
    sc_trace(mVcdFile, bias_addr_reg_450, "bias_addr_reg_450");
    sc_trace(mVcdFile, h_fu_261_p2, "h_fu_261_p2");
    sc_trace(mVcdFile, h_reg_458, "h_reg_458");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln23_1_fu_300_p2, "sub_ln23_1_fu_300_p2");
    sc_trace(mVcdFile, sub_ln23_1_reg_463, "sub_ln23_1_reg_463");
    sc_trace(mVcdFile, icmp_ln14_fu_255_p2, "icmp_ln14_fu_255_p2");
    sc_trace(mVcdFile, w_fu_312_p2, "w_fu_312_p2");
    sc_trace(mVcdFile, w_reg_471, "w_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, m_fu_328_p2, "m_fu_328_p2");
    sc_trace(mVcdFile, m_reg_479, "m_reg_479");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln21_4_fu_359_p2, "add_ln21_4_fu_359_p2");
    sc_trace(mVcdFile, add_ln21_4_reg_484, "add_ln21_4_reg_484");
    sc_trace(mVcdFile, icmp_ln18_fu_322_p2, "icmp_ln18_fu_322_p2");
    sc_trace(mVcdFile, add_ln21_fu_365_p2, "add_ln21_fu_365_p2");
    sc_trace(mVcdFile, add_ln21_reg_489, "add_ln21_reg_489");
    sc_trace(mVcdFile, n_fu_381_p2, "n_fu_381_p2");
    sc_trace(mVcdFile, n_reg_497, "n_reg_497");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln20_fu_375_p2, "icmp_ln20_fu_375_p2");
    sc_trace(mVcdFile, weights_0_load_reg_512, "weights_0_load_reg_512");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, input_0_load_reg_517, "input_0_load_reg_517");
    sc_trace(mVcdFile, grp_fu_186_p2, "grp_fu_186_p2");
    sc_trace(mVcdFile, tmp_7_reg_522, "tmp_7_reg_522");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_180_p2, "grp_fu_180_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, bias_load_reg_532, "bias_load_reg_532");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, add_ln23_1_fu_423_p2, "add_ln23_1_fu_423_p2");
    sc_trace(mVcdFile, add_ln23_1_reg_537, "add_ln23_1_reg_537");
    sc_trace(mVcdFile, tmp_reg_542, "tmp_reg_542");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, co_0_reg_99, "co_0_reg_99");
    sc_trace(mVcdFile, h_0_reg_110, "h_0_reg_110");
    sc_trace(mVcdFile, icmp_ln15_fu_306_p2, "icmp_ln15_fu_306_p2");
    sc_trace(mVcdFile, w_0_reg_122, "w_0_reg_122");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, sum_0_reg_134, "sum_0_reg_134");
    sc_trace(mVcdFile, m_0_reg_146, "m_0_reg_146");
    sc_trace(mVcdFile, sum_1_reg_157, "sum_1_reg_157");
    sc_trace(mVcdFile, n_0_reg_169, "n_0_reg_169");
    sc_trace(mVcdFile, zext_ln21_fu_202_p1, "zext_ln21_fu_202_p1");
    sc_trace(mVcdFile, zext_ln21_9_fu_396_p1, "zext_ln21_9_fu_396_p1");
    sc_trace(mVcdFile, zext_ln21_4_fu_414_p1, "zext_ln21_4_fu_414_p1");
    sc_trace(mVcdFile, zext_ln23_3_fu_428_p1, "zext_ln23_3_fu_428_p1");
    sc_trace(mVcdFile, grp_fu_180_p0, "grp_fu_180_p0");
    sc_trace(mVcdFile, grp_fu_180_p1, "grp_fu_180_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_s_fu_211_p3, "tmp_s_fu_211_p3");
    sc_trace(mVcdFile, zext_ln21_1_fu_207_p1, "zext_ln21_1_fu_207_p1");
    sc_trace(mVcdFile, zext_ln21_2_fu_219_p1, "zext_ln21_2_fu_219_p1");
    sc_trace(mVcdFile, tmp_15_fu_233_p3, "tmp_15_fu_233_p3");
    sc_trace(mVcdFile, zext_ln23_fu_241_p1, "zext_ln23_fu_241_p1");
    sc_trace(mVcdFile, zext_ln21_3_fu_223_p1, "zext_ln21_3_fu_223_p1");
    sc_trace(mVcdFile, sub_ln23_fu_245_p2, "sub_ln23_fu_245_p2");
    sc_trace(mVcdFile, zext_ln23_1_fu_267_p1, "zext_ln23_1_fu_267_p1");
    sc_trace(mVcdFile, add_ln23_fu_271_p2, "add_ln23_fu_271_p2");
    sc_trace(mVcdFile, trunc_ln23_fu_276_p1, "trunc_ln23_fu_276_p1");
    sc_trace(mVcdFile, tmp_17_fu_288_p3, "tmp_17_fu_288_p3");
    sc_trace(mVcdFile, p_shl3_cast_fu_280_p3, "p_shl3_cast_fu_280_p3");
    sc_trace(mVcdFile, sext_ln23_1_fu_296_p1, "sext_ln23_1_fu_296_p1");
    sc_trace(mVcdFile, zext_ln21_5_fu_334_p1, "zext_ln21_5_fu_334_p1");
    sc_trace(mVcdFile, add_ln21_3_fu_338_p2, "add_ln21_3_fu_338_p2");
    sc_trace(mVcdFile, tmp_18_fu_347_p3, "tmp_18_fu_347_p3");
    sc_trace(mVcdFile, zext_ln21_6_fu_343_p1, "zext_ln21_6_fu_343_p1");
    sc_trace(mVcdFile, zext_ln21_7_fu_355_p1, "zext_ln21_7_fu_355_p1");
    sc_trace(mVcdFile, zext_ln18_fu_318_p1, "zext_ln18_fu_318_p1");
    sc_trace(mVcdFile, zext_ln21_8_fu_387_p1, "zext_ln21_8_fu_387_p1");
    sc_trace(mVcdFile, add_ln21_5_fu_391_p2, "add_ln21_5_fu_391_p2");
    sc_trace(mVcdFile, zext_ln20_fu_371_p1, "zext_ln20_fu_371_p1");
    sc_trace(mVcdFile, add_ln21_1_fu_401_p2, "add_ln21_1_fu_401_p2");
    sc_trace(mVcdFile, tmp_16_fu_407_p3, "tmp_16_fu_407_p3");
    sc_trace(mVcdFile, zext_ln23_2_fu_419_p1, "zext_ln23_2_fu_419_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

i_convolution1::~i_convolution1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lenet_top_fadd_32bkb_U7;
    delete lenet_top_fmul_32cud_U8;
}

void i_convolution1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void i_convolution1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln14_fu_255_p2.read(), ap_const_lv1_1))) {
        co_0_reg_99 = co_reg_435.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_0_reg_99 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_306_p2.read()))) {
        h_0_reg_110 = h_reg_458.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln13_fu_190_p2.read(), ap_const_lv1_0))) {
        h_0_reg_110 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_306_p2.read()))) {
        m_0_reg_146 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln20_fu_375_p2.read(), ap_const_lv1_1))) {
        m_0_reg_146 = m_reg_479.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_322_p2.read()))) {
        n_0_reg_169 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        n_0_reg_169 = n_reg_497.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_306_p2.read()))) {
        sum_0_reg_134 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln20_fu_375_p2.read(), ap_const_lv1_1))) {
        sum_0_reg_134 = sum_1_reg_157.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_322_p2.read()))) {
        sum_1_reg_157 = sum_0_reg_134.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        sum_1_reg_157 = grp_fu_180_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_255_p2.read()))) {
        w_0_reg_122 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        w_0_reg_122 = w_reg_471.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_190_p2.read(), ap_const_lv1_0))) {
        add_ln21_2_reg_440 = add_ln21_2_fu_227_p2.read();
        bias_addr_reg_450 =  (sc_lv<3>) (zext_ln21_fu_202_p1.read());
        sext_ln23_reg_445 = sext_ln23_fu_251_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_322_p2.read()))) {
        add_ln21_4_reg_484 = add_ln21_4_fu_359_p2.read();
        add_ln21_reg_489 = add_ln21_fu_365_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        add_ln23_1_reg_537 = add_ln23_1_fu_423_p2.read();
        bias_load_reg_532 = bias_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_reg_435 = co_fu_196_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        h_reg_458 = h_fu_261_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        input_0_load_reg_517 = input_0_q0.read();
        weights_0_load_reg_512 = weights_0_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_reg_479 = m_fu_328_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        n_reg_497 = n_fu_381_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_255_p2.read()))) {
        sub_ln23_1_reg_463 = sub_ln23_1_fu_300_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_7_reg_522 = grp_fu_186_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_reg_542 = grp_fu_180_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        w_reg_471 = w_fu_312_p2.read();
    }
}

void i_convolution1::thread_add_ln21_1_fu_401_p2() {
    add_ln21_1_fu_401_p2 = (!zext_ln20_fu_371_p1.read().is_01() || !w_0_reg_122.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln20_fu_371_p1.read()) + sc_biguint<5>(w_0_reg_122.read()));
}

void i_convolution1::thread_add_ln21_2_fu_227_p2() {
    add_ln21_2_fu_227_p2 = (!zext_ln21_1_fu_207_p1.read().is_01() || !zext_ln21_2_fu_219_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln21_1_fu_207_p1.read()) + sc_biguint<6>(zext_ln21_2_fu_219_p1.read()));
}

void i_convolution1::thread_add_ln21_3_fu_338_p2() {
    add_ln21_3_fu_338_p2 = (!add_ln21_2_reg_440.read().is_01() || !zext_ln21_5_fu_334_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(add_ln21_2_reg_440.read()) + sc_biguint<6>(zext_ln21_5_fu_334_p1.read()));
}

void i_convolution1::thread_add_ln21_4_fu_359_p2() {
    add_ln21_4_fu_359_p2 = (!zext_ln21_6_fu_343_p1.read().is_01() || !zext_ln21_7_fu_355_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln21_6_fu_343_p1.read()) + sc_biguint<9>(zext_ln21_7_fu_355_p1.read()));
}

void i_convolution1::thread_add_ln21_5_fu_391_p2() {
    add_ln21_5_fu_391_p2 = (!add_ln21_4_reg_484.read().is_01() || !zext_ln21_8_fu_387_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(add_ln21_4_reg_484.read()) + sc_biguint<9>(zext_ln21_8_fu_387_p1.read()));
}

void i_convolution1::thread_add_ln21_fu_365_p2() {
    add_ln21_fu_365_p2 = (!zext_ln18_fu_318_p1.read().is_01() || !h_0_reg_110.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln18_fu_318_p1.read()) + sc_biguint<5>(h_0_reg_110.read()));
}

void i_convolution1::thread_add_ln23_1_fu_423_p2() {
    add_ln23_1_fu_423_p2 = (!sub_ln23_1_reg_463.read().is_01() || !zext_ln23_2_fu_419_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(sub_ln23_1_reg_463.read()) + sc_biguint<14>(zext_ln23_2_fu_419_p1.read()));
}

void i_convolution1::thread_add_ln23_fu_271_p2() {
    add_ln23_fu_271_p2 = (!sext_ln23_reg_445.read().is_01() || !zext_ln23_1_fu_267_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(sext_ln23_reg_445.read()) + sc_biguint<10>(zext_ln23_1_fu_267_p1.read()));
}

void i_convolution1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void i_convolution1::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void i_convolution1::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void i_convolution1::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void i_convolution1::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void i_convolution1::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void i_convolution1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void i_convolution1::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void i_convolution1::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void i_convolution1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void i_convolution1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void i_convolution1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void i_convolution1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void i_convolution1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void i_convolution1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void i_convolution1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln13_fu_190_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void i_convolution1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void i_convolution1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_190_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void i_convolution1::thread_bias_address0() {
    bias_address0 = bias_addr_reg_450.read();
}

void i_convolution1::thread_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void i_convolution1::thread_co_fu_196_p2() {
    co_fu_196_p2 = (!co_0_reg_99.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(co_0_reg_99.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void i_convolution1::thread_grp_fu_180_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_180_p0 = sum_0_reg_134.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_180_p0 = sum_1_reg_157.read();
    } else {
        grp_fu_180_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void i_convolution1::thread_grp_fu_180_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_180_p1 = bias_load_reg_532.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_180_p1 = tmp_7_reg_522.read();
    } else {
        grp_fu_180_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void i_convolution1::thread_h_fu_261_p2() {
    h_fu_261_p2 = (!h_0_reg_110.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(h_0_reg_110.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void i_convolution1::thread_icmp_ln13_fu_190_p2() {
    icmp_ln13_fu_190_p2 = (!co_0_reg_99.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(co_0_reg_99.read() == ap_const_lv3_6);
}

void i_convolution1::thread_icmp_ln14_fu_255_p2() {
    icmp_ln14_fu_255_p2 = (!h_0_reg_110.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(h_0_reg_110.read() == ap_const_lv5_1C);
}

void i_convolution1::thread_icmp_ln15_fu_306_p2() {
    icmp_ln15_fu_306_p2 = (!w_0_reg_122.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(w_0_reg_122.read() == ap_const_lv5_1C);
}

void i_convolution1::thread_icmp_ln18_fu_322_p2() {
    icmp_ln18_fu_322_p2 = (!m_0_reg_146.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(m_0_reg_146.read() == ap_const_lv3_5);
}

void i_convolution1::thread_icmp_ln20_fu_375_p2() {
    icmp_ln20_fu_375_p2 = (!n_0_reg_169.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(n_0_reg_169.read() == ap_const_lv3_5);
}

void i_convolution1::thread_input_0_address0() {
    input_0_address0 =  (sc_lv<10>) (zext_ln21_4_fu_414_p1.read());
}

void i_convolution1::thread_input_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_0_ce0 = ap_const_logic_1;
    } else {
        input_0_ce0 = ap_const_logic_0;
    }
}

void i_convolution1::thread_m_fu_328_p2() {
    m_fu_328_p2 = (!m_0_reg_146.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(m_0_reg_146.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void i_convolution1::thread_n_fu_381_p2() {
    n_fu_381_p2 = (!n_0_reg_169.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(n_0_reg_169.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void i_convolution1::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<13>) (zext_ln23_3_fu_428_p1.read());
}

void i_convolution1::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void i_convolution1::thread_output_r_d0() {
    output_r_d0 = tmp_reg_542.read();
}

void i_convolution1::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void i_convolution1::thread_p_shl3_cast_fu_280_p3() {
    p_shl3_cast_fu_280_p3 = esl_concat<9,5>(trunc_ln23_fu_276_p1.read(), ap_const_lv5_0);
}

void i_convolution1::thread_sext_ln23_1_fu_296_p1() {
    sext_ln23_1_fu_296_p1 = esl_sext<14,12>(tmp_17_fu_288_p3.read());
}

void i_convolution1::thread_sext_ln23_fu_251_p1() {
    sext_ln23_fu_251_p1 = esl_sext<10,9>(sub_ln23_fu_245_p2.read());
}

void i_convolution1::thread_sub_ln23_1_fu_300_p2() {
    sub_ln23_1_fu_300_p2 = (!p_shl3_cast_fu_280_p3.read().is_01() || !sext_ln23_1_fu_296_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl3_cast_fu_280_p3.read()) - sc_bigint<14>(sext_ln23_1_fu_296_p1.read()));
}

void i_convolution1::thread_sub_ln23_fu_245_p2() {
    sub_ln23_fu_245_p2 = (!zext_ln23_fu_241_p1.read().is_01() || !zext_ln21_3_fu_223_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln23_fu_241_p1.read()) - sc_biguint<9>(zext_ln21_3_fu_223_p1.read()));
}

void i_convolution1::thread_tmp_15_fu_233_p3() {
    tmp_15_fu_233_p3 = esl_concat<3,5>(co_0_reg_99.read(), ap_const_lv5_0);
}

void i_convolution1::thread_tmp_16_fu_407_p3() {
    tmp_16_fu_407_p3 = esl_concat<5,5>(add_ln21_reg_489.read(), add_ln21_1_fu_401_p2.read());
}

void i_convolution1::thread_tmp_17_fu_288_p3() {
    tmp_17_fu_288_p3 = esl_concat<10,2>(add_ln23_fu_271_p2.read(), ap_const_lv2_0);
}

void i_convolution1::thread_tmp_18_fu_347_p3() {
    tmp_18_fu_347_p3 = esl_concat<6,2>(add_ln21_3_fu_338_p2.read(), ap_const_lv2_0);
}

void i_convolution1::thread_tmp_s_fu_211_p3() {
    tmp_s_fu_211_p3 = esl_concat<3,2>(co_0_reg_99.read(), ap_const_lv2_0);
}

void i_convolution1::thread_trunc_ln23_fu_276_p1() {
    trunc_ln23_fu_276_p1 = add_ln23_fu_271_p2.read().range(9-1, 0);
}

void i_convolution1::thread_w_fu_312_p2() {
    w_fu_312_p2 = (!w_0_reg_122.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(w_0_reg_122.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void i_convolution1::thread_weights_0_address0() {
    weights_0_address0 =  (sc_lv<8>) (zext_ln21_9_fu_396_p1.read());
}

void i_convolution1::thread_weights_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        weights_0_ce0 = ap_const_logic_1;
    } else {
        weights_0_ce0 = ap_const_logic_0;
    }
}

void i_convolution1::thread_zext_ln18_fu_318_p1() {
    zext_ln18_fu_318_p1 = esl_zext<5,3>(m_0_reg_146.read());
}

void i_convolution1::thread_zext_ln20_fu_371_p1() {
    zext_ln20_fu_371_p1 = esl_zext<5,3>(n_0_reg_169.read());
}

void i_convolution1::thread_zext_ln21_1_fu_207_p1() {
    zext_ln21_1_fu_207_p1 = esl_zext<6,3>(co_0_reg_99.read());
}

void i_convolution1::thread_zext_ln21_2_fu_219_p1() {
    zext_ln21_2_fu_219_p1 = esl_zext<6,5>(tmp_s_fu_211_p3.read());
}

void i_convolution1::thread_zext_ln21_3_fu_223_p1() {
    zext_ln21_3_fu_223_p1 = esl_zext<9,5>(tmp_s_fu_211_p3.read());
}

void i_convolution1::thread_zext_ln21_4_fu_414_p1() {
    zext_ln21_4_fu_414_p1 = esl_zext<64,10>(tmp_16_fu_407_p3.read());
}

void i_convolution1::thread_zext_ln21_5_fu_334_p1() {
    zext_ln21_5_fu_334_p1 = esl_zext<6,3>(m_0_reg_146.read());
}

void i_convolution1::thread_zext_ln21_6_fu_343_p1() {
    zext_ln21_6_fu_343_p1 = esl_zext<9,6>(add_ln21_3_fu_338_p2.read());
}

void i_convolution1::thread_zext_ln21_7_fu_355_p1() {
    zext_ln21_7_fu_355_p1 = esl_zext<9,8>(tmp_18_fu_347_p3.read());
}

void i_convolution1::thread_zext_ln21_8_fu_387_p1() {
    zext_ln21_8_fu_387_p1 = esl_zext<9,3>(n_0_reg_169.read());
}

void i_convolution1::thread_zext_ln21_9_fu_396_p1() {
    zext_ln21_9_fu_396_p1 = esl_zext<64,9>(add_ln21_5_fu_391_p2.read());
}

void i_convolution1::thread_zext_ln21_fu_202_p1() {
    zext_ln21_fu_202_p1 = esl_zext<64,3>(co_0_reg_99.read());
}

void i_convolution1::thread_zext_ln23_1_fu_267_p1() {
    zext_ln23_1_fu_267_p1 = esl_zext<10,5>(h_0_reg_110.read());
}

void i_convolution1::thread_zext_ln23_2_fu_419_p1() {
    zext_ln23_2_fu_419_p1 = esl_zext<14,5>(w_0_reg_122.read());
}

void i_convolution1::thread_zext_ln23_3_fu_428_p1() {
    zext_ln23_3_fu_428_p1 = esl_zext<64,14>(add_ln23_1_reg_537.read());
}

void i_convolution1::thread_zext_ln23_fu_241_p1() {
    zext_ln23_fu_241_p1 = esl_zext<9,8>(tmp_15_fu_233_p3.read());
}

void i_convolution1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_190_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln14_fu_255_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_306_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_322_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_375_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

