// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _i_max_pooling4_HH_
#define _i_max_pooling4_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenet_top_fcmp_32dEe.h"

namespace ap_rtl {

struct i_max_pooling4 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<9> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    i_max_pooling4(sc_module_name name);
    SC_HAS_PROCESS(i_max_pooling4);

    ~i_max_pooling4();

    sc_trace_file* mVcdFile;

    lenet_top_fcmp_32dEe<1,2,32,32,1>* lenet_top_fcmp_32dEe_U56;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > indvar_flatten_reg_177;
    sc_signal< sc_lv<2> > i_0_reg_188;
    sc_signal< sc_lv<32> > max_value_1_reg_199;
    sc_signal< sc_lv<2> > j_0_reg_211;
    sc_signal< sc_lv<9> > add_ln77_fu_235_p2;
    sc_signal< sc_lv<9> > add_ln77_reg_710;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln78_fu_241_p2;
    sc_signal< sc_lv<1> > icmp_ln78_reg_715;
    sc_signal< sc_lv<1> > icmp_ln77_fu_229_p2;
    sc_signal< sc_lv<3> > select_ln85_fu_247_p3;
    sc_signal< sc_lv<3> > select_ln85_reg_724;
    sc_signal< sc_lv<5> > select_ln85_1_fu_261_p3;
    sc_signal< sc_lv<5> > select_ln85_1_reg_730;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > add_ln85_fu_296_p2;
    sc_signal< sc_lv<9> > add_ln85_reg_735;
    sc_signal< sc_lv<3> > select_ln78_fu_362_p3;
    sc_signal< sc_lv<3> > select_ln78_reg_740;
    sc_signal< sc_lv<4> > select_ln78_1_fu_378_p3;
    sc_signal< sc_lv<4> > select_ln78_1_reg_746;
    sc_signal< sc_lv<3> > select_ln78_2_fu_386_p3;
    sc_signal< sc_lv<3> > select_ln78_2_reg_751;
    sc_signal< sc_lv<10> > add_ln88_2_fu_415_p2;
    sc_signal< sc_lv<10> > add_ln88_2_reg_756;
    sc_signal< sc_lv<4> > shl_ln85_1_fu_421_p3;
    sc_signal< sc_lv<4> > shl_ln85_1_reg_761;
    sc_signal< sc_lv<1> > icmp_ln82_fu_429_p2;
    sc_signal< sc_lv<1> > icmp_ln82_reg_766;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln82_reg_766_pp0_iter1_reg;
    sc_signal< sc_lv<3> > add_ln82_1_fu_435_p2;
    sc_signal< sc_lv<3> > add_ln82_1_reg_770;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > select_ln82_fu_453_p3;
    sc_signal< sc_lv<2> > select_ln82_reg_775;
    sc_signal< sc_lv<2> > select_ln82_1_fu_461_p3;
    sc_signal< sc_lv<2> > select_ln82_1_reg_780;
    sc_signal< sc_lv<9> > add_ln85_2_fu_482_p2;
    sc_signal< sc_lv<9> > add_ln85_2_reg_785;
    sc_signal< sc_lv<4> > add_ln85_1_fu_491_p2;
    sc_signal< sc_lv<4> > add_ln85_1_reg_791;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<2> > j_fu_534_p2;
    sc_signal< sc_lv<2> > j_reg_801;
    sc_signal< sc_lv<32> > input_load_reg_806;
    sc_signal< sc_lv<1> > icmp_ln85_fu_557_p2;
    sc_signal< sc_lv<1> > icmp_ln85_reg_813;
    sc_signal< sc_lv<1> > icmp_ln85_1_fu_563_p2;
    sc_signal< sc_lv<1> > icmp_ln85_1_reg_818;
    sc_signal< sc_lv<32> > max_value_fu_620_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<10> > add_ln88_3_fu_630_p2;
    sc_signal< sc_lv<10> > add_ln88_3_reg_828;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<3> > w_fu_635_p2;
    sc_signal< sc_lv<3> > w_reg_833;
    sc_signal< sc_lv<6> > select_ln78_3_fu_646_p3;
    sc_signal< sc_lv<6> > select_ln78_3_reg_838;
    sc_signal< sc_lv<1> > grp_fu_222_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_843;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<9> > indvar_flatten24_reg_118;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<5> > c_0_reg_129;
    sc_signal< sc_lv<6> > indvar_flatten6_reg_141;
    sc_signal< sc_lv<3> > h_0_reg_153;
    sc_signal< sc_lv<3> > w_0_reg_165;
    sc_signal< sc_lv<3> > ap_phi_mux_indvar_flatten_phi_fu_181_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > ap_phi_mux_i_0_phi_fu_192_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_max_value_1_phi_fu_203_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_j_0_phi_fu_215_p4;
    sc_signal< sc_lv<64> > zext_ln85_6_fu_529_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln88_3_fu_694_p1;
    sc_signal< sc_lv<32> > grp_fu_222_p0;
    sc_signal< sc_lv<32> > grp_fu_222_p1;
    sc_signal< sc_lv<5> > c_fu_255_p2;
    sc_signal< sc_lv<8> > tmp_7_fu_272_p3;
    sc_signal< sc_lv<6> > tmp_8_fu_284_p3;
    sc_signal< sc_lv<9> > zext_ln85_2_fu_292_p1;
    sc_signal< sc_lv<9> > zext_ln85_1_fu_280_p1;
    sc_signal< sc_lv<7> > tmp_9_fu_302_p3;
    sc_signal< sc_lv<8> > zext_ln85_fu_268_p1;
    sc_signal< sc_lv<8> > zext_ln88_fu_310_p1;
    sc_signal< sc_lv<4> > shl_ln_fu_320_p3;
    sc_signal< sc_lv<1> > icmp_ln79_fu_340_p2;
    sc_signal< sc_lv<1> > xor_ln85_fu_335_p2;
    sc_signal< sc_lv<1> > and_ln85_2_fu_346_p2;
    sc_signal< sc_lv<1> > or_ln78_fu_357_p2;
    sc_signal< sc_lv<3> > h_fu_352_p2;
    sc_signal< sc_lv<4> > shl_ln85_mid1_fu_370_p3;
    sc_signal< sc_lv<4> > select_ln85_2_fu_328_p3;
    sc_signal< sc_lv<8> > add_ln88_fu_314_p2;
    sc_signal< sc_lv<8> > zext_ln78_fu_393_p1;
    sc_signal< sc_lv<8> > add_ln88_1_fu_397_p2;
    sc_signal< sc_lv<10> > zext_ln88_1_fu_403_p1;
    sc_signal< sc_lv<10> > p_shl_cast_fu_407_p3;
    sc_signal< sc_lv<1> > icmp_ln83_fu_447_p2;
    sc_signal< sc_lv<2> > i_fu_441_p2;
    sc_signal< sc_lv<4> > zext_ln82_fu_469_p1;
    sc_signal< sc_lv<4> > add_ln82_fu_473_p2;
    sc_signal< sc_lv<9> > zext_ln85_3_fu_478_p1;
    sc_signal< sc_lv<4> > zext_ln83_fu_487_p1;
    sc_signal< sc_lv<10> > tmp_6_fu_503_p3;
    sc_signal< sc_lv<12> > zext_ln85_4_fu_510_p1;
    sc_signal< sc_lv<12> > p_shl1_cast_fu_496_p3;
    sc_signal< sc_lv<12> > add_ln85_3_fu_514_p2;
    sc_signal< sc_lv<12> > zext_ln85_5_fu_520_p1;
    sc_signal< sc_lv<12> > add_ln85_4_fu_523_p2;
    sc_signal< sc_lv<32> > bitcast_ln85_fu_539_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_543_p4;
    sc_signal< sc_lv<23> > trunc_ln85_fu_553_p1;
    sc_signal< sc_lv<32> > bitcast_ln85_1_fu_569_p1;
    sc_signal< sc_lv<8> > tmp_4_fu_572_p4;
    sc_signal< sc_lv<23> > trunc_ln85_1_fu_582_p1;
    sc_signal< sc_lv<1> > icmp_ln85_3_fu_596_p2;
    sc_signal< sc_lv<1> > icmp_ln85_2_fu_590_p2;
    sc_signal< sc_lv<1> > or_ln85_fu_586_p2;
    sc_signal< sc_lv<1> > or_ln85_1_fu_602_p2;
    sc_signal< sc_lv<1> > and_ln85_fu_608_p2;
    sc_signal< sc_lv<1> > and_ln85_1_fu_614_p2;
    sc_signal< sc_lv<10> > zext_ln88_2_fu_627_p1;
    sc_signal< sc_lv<6> > add_ln78_1_fu_640_p2;
    sc_signal< sc_lv<32> > bitcast_ln87_fu_653_p1;
    sc_signal< sc_lv<8> > tmp_fu_657_p4;
    sc_signal< sc_lv<23> > trunc_ln87_fu_667_p1;
    sc_signal< sc_lv<1> > icmp_ln87_1_fu_677_p2;
    sc_signal< sc_lv<1> > icmp_ln87_fu_671_p2;
    sc_signal< sc_lv<1> > or_ln87_fu_683_p2;
    sc_signal< sc_lv<1> > and_ln87_fu_689_p2;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_pp0_stage1;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<8> ap_ST_fsm_state9;
    static const sc_lv<8> ap_ST_fsm_state10;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_D368D4A5;
    static const sc_lv<9> ap_const_lv9_190;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<6> ap_const_lv6_19;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln77_fu_235_p2();
    void thread_add_ln78_1_fu_640_p2();
    void thread_add_ln82_1_fu_435_p2();
    void thread_add_ln82_fu_473_p2();
    void thread_add_ln85_1_fu_491_p2();
    void thread_add_ln85_2_fu_482_p2();
    void thread_add_ln85_3_fu_514_p2();
    void thread_add_ln85_4_fu_523_p2();
    void thread_add_ln85_fu_296_p2();
    void thread_add_ln88_1_fu_397_p2();
    void thread_add_ln88_2_fu_415_p2();
    void thread_add_ln88_3_fu_630_p2();
    void thread_add_ln88_fu_314_p2();
    void thread_and_ln85_1_fu_614_p2();
    void thread_and_ln85_2_fu_346_p2();
    void thread_and_ln85_fu_608_p2();
    void thread_and_ln87_fu_689_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage1_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_block_state7_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_0_phi_fu_192_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_181_p4();
    void thread_ap_phi_mux_j_0_phi_fu_215_p4();
    void thread_ap_phi_mux_max_value_1_phi_fu_203_p4();
    void thread_ap_ready();
    void thread_bitcast_ln85_1_fu_569_p1();
    void thread_bitcast_ln85_fu_539_p1();
    void thread_bitcast_ln87_fu_653_p1();
    void thread_c_fu_255_p2();
    void thread_grp_fu_222_p0();
    void thread_grp_fu_222_p1();
    void thread_h_fu_352_p2();
    void thread_i_fu_441_p2();
    void thread_icmp_ln77_fu_229_p2();
    void thread_icmp_ln78_fu_241_p2();
    void thread_icmp_ln79_fu_340_p2();
    void thread_icmp_ln82_fu_429_p2();
    void thread_icmp_ln83_fu_447_p2();
    void thread_icmp_ln85_1_fu_563_p2();
    void thread_icmp_ln85_2_fu_590_p2();
    void thread_icmp_ln85_3_fu_596_p2();
    void thread_icmp_ln85_fu_557_p2();
    void thread_icmp_ln87_1_fu_677_p2();
    void thread_icmp_ln87_fu_671_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_fu_534_p2();
    void thread_max_value_fu_620_p3();
    void thread_or_ln78_fu_357_p2();
    void thread_or_ln85_1_fu_602_p2();
    void thread_or_ln85_fu_586_p2();
    void thread_or_ln87_fu_683_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_496_p3();
    void thread_p_shl_cast_fu_407_p3();
    void thread_select_ln78_1_fu_378_p3();
    void thread_select_ln78_2_fu_386_p3();
    void thread_select_ln78_3_fu_646_p3();
    void thread_select_ln78_fu_362_p3();
    void thread_select_ln82_1_fu_461_p3();
    void thread_select_ln82_fu_453_p3();
    void thread_select_ln85_1_fu_261_p3();
    void thread_select_ln85_2_fu_328_p3();
    void thread_select_ln85_fu_247_p3();
    void thread_shl_ln85_1_fu_421_p3();
    void thread_shl_ln85_mid1_fu_370_p3();
    void thread_shl_ln_fu_320_p3();
    void thread_tmp_3_fu_543_p4();
    void thread_tmp_4_fu_572_p4();
    void thread_tmp_6_fu_503_p3();
    void thread_tmp_7_fu_272_p3();
    void thread_tmp_8_fu_284_p3();
    void thread_tmp_9_fu_302_p3();
    void thread_tmp_fu_657_p4();
    void thread_trunc_ln85_1_fu_582_p1();
    void thread_trunc_ln85_fu_553_p1();
    void thread_trunc_ln87_fu_667_p1();
    void thread_w_fu_635_p2();
    void thread_xor_ln85_fu_335_p2();
    void thread_zext_ln78_fu_393_p1();
    void thread_zext_ln82_fu_469_p1();
    void thread_zext_ln83_fu_487_p1();
    void thread_zext_ln85_1_fu_280_p1();
    void thread_zext_ln85_2_fu_292_p1();
    void thread_zext_ln85_3_fu_478_p1();
    void thread_zext_ln85_4_fu_510_p1();
    void thread_zext_ln85_5_fu_520_p1();
    void thread_zext_ln85_6_fu_529_p1();
    void thread_zext_ln85_fu_268_p1();
    void thread_zext_ln88_1_fu_403_p1();
    void thread_zext_ln88_2_fu_627_p1();
    void thread_zext_ln88_3_fu_694_p1();
    void thread_zext_ln88_fu_310_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
