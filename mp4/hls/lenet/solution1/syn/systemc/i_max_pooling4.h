// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _i_max_pooling4_HH_
#define _i_max_pooling4_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenet_top_fcmp_32dEe.h"

namespace ap_rtl {

struct i_max_pooling4 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<9> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    i_max_pooling4(sc_module_name name);
    SC_HAS_PROCESS(i_max_pooling4);

    ~i_max_pooling4();

    sc_trace_file* mVcdFile;

    lenet_top_fcmp_32dEe<1,2,32,32,1>* lenet_top_fcmp_32dEe_U31;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > c_fu_179_p2;
    sc_signal< sc_lv<5> > c_reg_502;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > add_ln104_2_fu_213_p2;
    sc_signal< sc_lv<9> > add_ln104_2_reg_507;
    sc_signal< sc_lv<1> > icmp_ln96_fu_173_p2;
    sc_signal< sc_lv<8> > add_ln106_fu_231_p2;
    sc_signal< sc_lv<8> > add_ln106_reg_512;
    sc_signal< sc_lv<3> > h_fu_243_p2;
    sc_signal< sc_lv<3> > h_reg_520;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > shl_ln_fu_249_p3;
    sc_signal< sc_lv<4> > shl_ln_reg_525;
    sc_signal< sc_lv<1> > icmp_ln97_fu_237_p2;
    sc_signal< sc_lv<10> > add_ln106_2_fu_278_p2;
    sc_signal< sc_lv<10> > add_ln106_2_reg_530;
    sc_signal< sc_lv<3> > w_fu_290_p2;
    sc_signal< sc_lv<3> > w_reg_538;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > shl_ln104_1_fu_296_p3;
    sc_signal< sc_lv<4> > shl_ln104_1_reg_543;
    sc_signal< sc_lv<1> > icmp_ln98_fu_284_p2;
    sc_signal< sc_lv<2> > i_fu_314_p2;
    sc_signal< sc_lv<2> > i_reg_551;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<12> > add_ln104_4_fu_354_p2;
    sc_signal< sc_lv<12> > add_ln104_4_reg_556;
    sc_signal< sc_lv<1> > icmp_ln101_fu_308_p2;
    sc_signal< sc_lv<2> > j_fu_384_p2;
    sc_signal< sc_lv<2> > j_reg_564;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln103_fu_378_p2;
    sc_signal< sc_lv<32> > input_load_reg_574;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > max_value_fu_492_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<5> > c_0_reg_86;
    sc_signal< sc_lv<3> > h_0_reg_97;
    sc_signal< sc_lv<3> > w_0_reg_108;
    sc_signal< sc_lv<32> > max_value_0_reg_120;
    sc_signal< sc_lv<2> > i_0_reg_133;
    sc_signal< sc_lv<32> > max_value_1_reg_144;
    sc_signal< sc_lv<2> > j_0_reg_156;
    sc_signal< sc_lv<64> > zext_ln106_4_fu_369_p1;
    sc_signal< sc_lv<64> > zext_ln104_6_fu_404_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_189_p3;
    sc_signal< sc_lv<6> > tmp_4_fu_201_p3;
    sc_signal< sc_lv<9> > zext_ln104_2_fu_209_p1;
    sc_signal< sc_lv<9> > zext_ln104_1_fu_197_p1;
    sc_signal< sc_lv<7> > tmp_5_fu_219_p3;
    sc_signal< sc_lv<8> > zext_ln104_fu_185_p1;
    sc_signal< sc_lv<8> > zext_ln106_fu_227_p1;
    sc_signal< sc_lv<8> > zext_ln106_1_fu_257_p1;
    sc_signal< sc_lv<8> > add_ln106_1_fu_261_p2;
    sc_signal< sc_lv<10> > p_shl3_cast_fu_270_p3;
    sc_signal< sc_lv<10> > zext_ln106_2_fu_266_p1;
    sc_signal< sc_lv<4> > zext_ln101_fu_304_p1;
    sc_signal< sc_lv<4> > add_ln104_fu_320_p2;
    sc_signal< sc_lv<9> > zext_ln104_3_fu_325_p1;
    sc_signal< sc_lv<9> > add_ln104_3_fu_329_p2;
    sc_signal< sc_lv<10> > tmp_7_fu_342_p3;
    sc_signal< sc_lv<12> > p_shl4_cast_fu_334_p3;
    sc_signal< sc_lv<12> > zext_ln104_4_fu_350_p1;
    sc_signal< sc_lv<10> > zext_ln106_3_fu_360_p1;
    sc_signal< sc_lv<10> > add_ln106_3_fu_364_p2;
    sc_signal< sc_lv<4> > zext_ln103_fu_374_p1;
    sc_signal< sc_lv<4> > add_ln104_1_fu_390_p2;
    sc_signal< sc_lv<12> > zext_ln104_5_fu_395_p1;
    sc_signal< sc_lv<12> > add_ln104_5_fu_399_p2;
    sc_signal< sc_lv<32> > bitcast_ln104_fu_409_p1;
    sc_signal< sc_lv<32> > bitcast_ln104_1_fu_427_p1;
    sc_signal< sc_lv<8> > tmp_fu_413_p4;
    sc_signal< sc_lv<23> > trunc_ln104_fu_423_p1;
    sc_signal< sc_lv<1> > icmp_ln104_1_fu_450_p2;
    sc_signal< sc_lv<1> > icmp_ln104_fu_444_p2;
    sc_signal< sc_lv<8> > tmp_8_fu_430_p4;
    sc_signal< sc_lv<23> > trunc_ln104_1_fu_440_p1;
    sc_signal< sc_lv<1> > icmp_ln104_3_fu_468_p2;
    sc_signal< sc_lv<1> > icmp_ln104_2_fu_462_p2;
    sc_signal< sc_lv<1> > or_ln104_fu_456_p2;
    sc_signal< sc_lv<1> > or_ln104_1_fu_474_p2;
    sc_signal< sc_lv<1> > and_ln104_fu_480_p2;
    sc_signal< sc_lv<1> > grp_fu_167_p2;
    sc_signal< sc_lv<1> > and_ln104_1_fu_486_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_D368D4A5;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln104_1_fu_390_p2();
    void thread_add_ln104_2_fu_213_p2();
    void thread_add_ln104_3_fu_329_p2();
    void thread_add_ln104_4_fu_354_p2();
    void thread_add_ln104_5_fu_399_p2();
    void thread_add_ln104_fu_320_p2();
    void thread_add_ln106_1_fu_261_p2();
    void thread_add_ln106_2_fu_278_p2();
    void thread_add_ln106_3_fu_364_p2();
    void thread_add_ln106_fu_231_p2();
    void thread_and_ln104_1_fu_486_p2();
    void thread_and_ln104_fu_480_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln104_1_fu_427_p1();
    void thread_bitcast_ln104_fu_409_p1();
    void thread_c_fu_179_p2();
    void thread_h_fu_243_p2();
    void thread_i_fu_314_p2();
    void thread_icmp_ln101_fu_308_p2();
    void thread_icmp_ln103_fu_378_p2();
    void thread_icmp_ln104_1_fu_450_p2();
    void thread_icmp_ln104_2_fu_462_p2();
    void thread_icmp_ln104_3_fu_468_p2();
    void thread_icmp_ln104_fu_444_p2();
    void thread_icmp_ln96_fu_173_p2();
    void thread_icmp_ln97_fu_237_p2();
    void thread_icmp_ln98_fu_284_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_fu_384_p2();
    void thread_max_value_fu_492_p3();
    void thread_or_ln104_1_fu_474_p2();
    void thread_or_ln104_fu_456_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl3_cast_fu_270_p3();
    void thread_p_shl4_cast_fu_334_p3();
    void thread_shl_ln104_1_fu_296_p3();
    void thread_shl_ln_fu_249_p3();
    void thread_tmp_4_fu_201_p3();
    void thread_tmp_5_fu_219_p3();
    void thread_tmp_7_fu_342_p3();
    void thread_tmp_8_fu_430_p4();
    void thread_tmp_fu_413_p4();
    void thread_tmp_s_fu_189_p3();
    void thread_trunc_ln104_1_fu_440_p1();
    void thread_trunc_ln104_fu_423_p1();
    void thread_w_fu_290_p2();
    void thread_zext_ln101_fu_304_p1();
    void thread_zext_ln103_fu_374_p1();
    void thread_zext_ln104_1_fu_197_p1();
    void thread_zext_ln104_2_fu_209_p1();
    void thread_zext_ln104_3_fu_325_p1();
    void thread_zext_ln104_4_fu_350_p1();
    void thread_zext_ln104_5_fu_395_p1();
    void thread_zext_ln104_6_fu_404_p1();
    void thread_zext_ln104_fu_185_p1();
    void thread_zext_ln106_1_fu_257_p1();
    void thread_zext_ln106_2_fu_266_p1();
    void thread_zext_ln106_3_fu_360_p1();
    void thread_zext_ln106_4_fu_369_p1();
    void thread_zext_ln106_fu_227_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
