// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "i_relu4.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic i_relu4::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic i_relu4::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> i_relu4::ap_ST_fsm_state1 = "1";
const sc_lv<6> i_relu4::ap_ST_fsm_state2 = "10";
const sc_lv<6> i_relu4::ap_ST_fsm_state3 = "100";
const sc_lv<6> i_relu4::ap_ST_fsm_state4 = "1000";
const sc_lv<6> i_relu4::ap_ST_fsm_state5 = "10000";
const sc_lv<6> i_relu4::ap_ST_fsm_state6 = "100000";
const sc_lv<32> i_relu4::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> i_relu4::ap_const_lv32_1 = "1";
const sc_lv<1> i_relu4::ap_const_lv1_0 = "0";
const sc_lv<32> i_relu4::ap_const_lv32_2 = "10";
const sc_lv<32> i_relu4::ap_const_lv32_3 = "11";
const sc_lv<32> i_relu4::ap_const_lv32_4 = "100";
const sc_lv<5> i_relu4::ap_const_lv5_0 = "00000";
const sc_lv<1> i_relu4::ap_const_lv1_1 = "1";
const sc_lv<3> i_relu4::ap_const_lv3_0 = "000";
const sc_lv<32> i_relu4::ap_const_lv32_5 = "101";
const sc_lv<5> i_relu4::ap_const_lv5_10 = "10000";
const sc_lv<5> i_relu4::ap_const_lv5_1 = "1";
const sc_lv<2> i_relu4::ap_const_lv2_0 = "00";
const sc_lv<3> i_relu4::ap_const_lv3_5 = "101";
const sc_lv<3> i_relu4::ap_const_lv3_1 = "1";
const sc_lv<32> i_relu4::ap_const_lv32_17 = "10111";
const sc_lv<32> i_relu4::ap_const_lv32_1E = "11110";
const sc_lv<8> i_relu4::ap_const_lv8_FF = "11111111";
const sc_lv<23> i_relu4::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> i_relu4::ap_const_lv5_4 = "100";
const bool i_relu4::ap_const_boolean_1 = true;

i_relu4::i_relu4(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lenet_top_fcmp_32dEe_U34 = new lenet_top_fcmp_32dEe<1,2,32,32,1>("lenet_top_fcmp_32dEe_U34");
    lenet_top_fcmp_32dEe_U34->clk(ap_clk);
    lenet_top_fcmp_32dEe_U34->reset(ap_rst);
    lenet_top_fcmp_32dEe_U34->din0(input_r_q0);
    lenet_top_fcmp_32dEe_U34->din1(ap_var_for_const0);
    lenet_top_fcmp_32dEe_U34->ce(ap_var_for_const1);
    lenet_top_fcmp_32dEe_U34->opcode(ap_var_for_const2);
    lenet_top_fcmp_32dEe_U34->dout(grp_fu_87_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln116_1_fu_143_p2);
    sensitive << ( add_ln116_reg_240 );
    sensitive << ( zext_ln116_2_fu_139_p1 );

    SC_METHOD(thread_add_ln116_2_fu_160_p2);
    sensitive << ( zext_ln116_3_fu_148_p1 );
    sensitive << ( p_shl1_cast_fu_152_p3 );

    SC_METHOD(thread_add_ln116_3_fu_182_p2);
    sensitive << ( add_ln116_2_reg_253 );
    sensitive << ( zext_ln116_4_fu_178_p1 );

    SC_METHOD(thread_add_ln116_fu_121_p2);
    sensitive << ( zext_ln116_fu_105_p1 );
    sensitive << ( zext_ln116_1_fu_117_p1 );

    SC_METHOD(thread_and_ln116_fu_226_p2);
    sensitive << ( or_ln116_fu_222_p2 );
    sensitive << ( grp_fu_87_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln113_fu_93_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln113_fu_93_p2 );

    SC_METHOD(thread_bitcast_ln116_fu_192_p1);
    sensitive << ( input_r_q0 );

    SC_METHOD(thread_i_fu_99_p2);
    sensitive << ( i_0_reg_54 );

    SC_METHOD(thread_icmp_ln113_fu_93_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_54 );

    SC_METHOD(thread_icmp_ln114_fu_127_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_65 );

    SC_METHOD(thread_icmp_ln115_fu_166_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_reg_76 );

    SC_METHOD(thread_icmp_ln116_1_fu_216_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln116_fu_206_p1 );

    SC_METHOD(thread_icmp_ln116_fu_210_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_fu_196_p4 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( input_addr_reg_266 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln116_5_fu_187_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_input_r_d0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_input_r_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( and_ln116_fu_226_p2 );

    SC_METHOD(thread_j_fu_133_p2);
    sensitive << ( j_0_reg_65 );

    SC_METHOD(thread_k_fu_172_p2);
    sensitive << ( k_0_reg_76 );

    SC_METHOD(thread_or_ln116_fu_222_p2);
    sensitive << ( icmp_ln116_reg_276 );
    sensitive << ( icmp_ln116_1_reg_281 );

    SC_METHOD(thread_p_shl1_cast_fu_152_p3);
    sensitive << ( add_ln116_1_fu_143_p2 );

    SC_METHOD(thread_tmp_fu_196_p4);
    sensitive << ( bitcast_ln116_fu_192_p1 );

    SC_METHOD(thread_tmp_s_fu_109_p3);
    sensitive << ( i_0_reg_54 );

    SC_METHOD(thread_trunc_ln116_fu_206_p1);
    sensitive << ( bitcast_ln116_fu_192_p1 );

    SC_METHOD(thread_zext_ln116_1_fu_117_p1);
    sensitive << ( tmp_s_fu_109_p3 );

    SC_METHOD(thread_zext_ln116_2_fu_139_p1);
    sensitive << ( j_0_reg_65 );

    SC_METHOD(thread_zext_ln116_3_fu_148_p1);
    sensitive << ( add_ln116_1_fu_143_p2 );

    SC_METHOD(thread_zext_ln116_4_fu_178_p1);
    sensitive << ( k_0_reg_76 );

    SC_METHOD(thread_zext_ln116_5_fu_187_p1);
    sensitive << ( add_ln116_3_fu_182_p2 );

    SC_METHOD(thread_zext_ln116_fu_105_p1);
    sensitive << ( i_0_reg_54 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln113_fu_93_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln114_fu_127_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln115_fu_166_p2 );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "i_relu4_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_we0, "(port)input_r_we0");
    sc_trace(mVcdFile, input_r_d0, "(port)input_r_d0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_99_p2, "i_fu_99_p2");
    sc_trace(mVcdFile, i_reg_235, "i_reg_235");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln116_fu_121_p2, "add_ln116_fu_121_p2");
    sc_trace(mVcdFile, add_ln116_reg_240, "add_ln116_reg_240");
    sc_trace(mVcdFile, icmp_ln113_fu_93_p2, "icmp_ln113_fu_93_p2");
    sc_trace(mVcdFile, j_fu_133_p2, "j_fu_133_p2");
    sc_trace(mVcdFile, j_reg_248, "j_reg_248");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln116_2_fu_160_p2, "add_ln116_2_fu_160_p2");
    sc_trace(mVcdFile, add_ln116_2_reg_253, "add_ln116_2_reg_253");
    sc_trace(mVcdFile, icmp_ln114_fu_127_p2, "icmp_ln114_fu_127_p2");
    sc_trace(mVcdFile, k_fu_172_p2, "k_fu_172_p2");
    sc_trace(mVcdFile, k_reg_261, "k_reg_261");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, input_addr_reg_266, "input_addr_reg_266");
    sc_trace(mVcdFile, icmp_ln115_fu_166_p2, "icmp_ln115_fu_166_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln116_fu_210_p2, "icmp_ln116_fu_210_p2");
    sc_trace(mVcdFile, icmp_ln116_reg_276, "icmp_ln116_reg_276");
    sc_trace(mVcdFile, icmp_ln116_1_fu_216_p2, "icmp_ln116_1_fu_216_p2");
    sc_trace(mVcdFile, icmp_ln116_1_reg_281, "icmp_ln116_1_reg_281");
    sc_trace(mVcdFile, i_0_reg_54, "i_0_reg_54");
    sc_trace(mVcdFile, j_0_reg_65, "j_0_reg_65");
    sc_trace(mVcdFile, k_0_reg_76, "k_0_reg_76");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, zext_ln116_5_fu_187_p1, "zext_ln116_5_fu_187_p1");
    sc_trace(mVcdFile, and_ln116_fu_226_p2, "and_ln116_fu_226_p2");
    sc_trace(mVcdFile, tmp_s_fu_109_p3, "tmp_s_fu_109_p3");
    sc_trace(mVcdFile, zext_ln116_fu_105_p1, "zext_ln116_fu_105_p1");
    sc_trace(mVcdFile, zext_ln116_1_fu_117_p1, "zext_ln116_1_fu_117_p1");
    sc_trace(mVcdFile, zext_ln116_2_fu_139_p1, "zext_ln116_2_fu_139_p1");
    sc_trace(mVcdFile, add_ln116_1_fu_143_p2, "add_ln116_1_fu_143_p2");
    sc_trace(mVcdFile, zext_ln116_3_fu_148_p1, "zext_ln116_3_fu_148_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_152_p3, "p_shl1_cast_fu_152_p3");
    sc_trace(mVcdFile, zext_ln116_4_fu_178_p1, "zext_ln116_4_fu_178_p1");
    sc_trace(mVcdFile, add_ln116_3_fu_182_p2, "add_ln116_3_fu_182_p2");
    sc_trace(mVcdFile, bitcast_ln116_fu_192_p1, "bitcast_ln116_fu_192_p1");
    sc_trace(mVcdFile, tmp_fu_196_p4, "tmp_fu_196_p4");
    sc_trace(mVcdFile, trunc_ln116_fu_206_p1, "trunc_ln116_fu_206_p1");
    sc_trace(mVcdFile, or_ln116_fu_222_p2, "or_ln116_fu_222_p2");
    sc_trace(mVcdFile, grp_fu_87_p2, "grp_fu_87_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

i_relu4::~i_relu4() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lenet_top_fcmp_32dEe_U34;
}

void i_relu4::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void i_relu4::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void i_relu4::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_4;
}

void i_relu4::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln114_fu_127_p2.read(), ap_const_lv1_1))) {
        i_0_reg_54 = i_reg_235.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_54 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln115_fu_166_p2.read(), ap_const_lv1_1))) {
        j_0_reg_65 = j_reg_248.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln113_fu_93_p2.read(), ap_const_lv1_0))) {
        j_0_reg_65 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_fu_127_p2.read()))) {
        k_0_reg_76 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        k_0_reg_76 = k_reg_261.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_fu_127_p2.read()))) {
        add_ln116_2_reg_253 = add_ln116_2_fu_160_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln113_fu_93_p2.read(), ap_const_lv1_0))) {
        add_ln116_reg_240 = add_ln116_fu_121_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_235 = i_fu_99_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        icmp_ln116_1_reg_281 = icmp_ln116_1_fu_216_p2.read();
        icmp_ln116_reg_276 = icmp_ln116_fu_210_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln115_fu_166_p2.read()))) {
        input_addr_reg_266 =  (sc_lv<9>) (zext_ln116_5_fu_187_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_248 = j_fu_133_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_reg_261 = k_fu_172_p2.read();
    }
}

void i_relu4::thread_add_ln116_1_fu_143_p2() {
    add_ln116_1_fu_143_p2 = (!add_ln116_reg_240.read().is_01() || !zext_ln116_2_fu_139_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(add_ln116_reg_240.read()) + sc_biguint<8>(zext_ln116_2_fu_139_p1.read()));
}

void i_relu4::thread_add_ln116_2_fu_160_p2() {
    add_ln116_2_fu_160_p2 = (!zext_ln116_3_fu_148_p1.read().is_01() || !p_shl1_cast_fu_152_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln116_3_fu_148_p1.read()) + sc_biguint<10>(p_shl1_cast_fu_152_p3.read()));
}

void i_relu4::thread_add_ln116_3_fu_182_p2() {
    add_ln116_3_fu_182_p2 = (!add_ln116_2_reg_253.read().is_01() || !zext_ln116_4_fu_178_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln116_2_reg_253.read()) + sc_biguint<10>(zext_ln116_4_fu_178_p1.read()));
}

void i_relu4::thread_add_ln116_fu_121_p2() {
    add_ln116_fu_121_p2 = (!zext_ln116_fu_105_p1.read().is_01() || !zext_ln116_1_fu_117_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln116_fu_105_p1.read()) + sc_biguint<8>(zext_ln116_1_fu_117_p1.read()));
}

void i_relu4::thread_and_ln116_fu_226_p2() {
    and_ln116_fu_226_p2 = (or_ln116_fu_222_p2.read() & grp_fu_87_p2.read());
}

void i_relu4::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void i_relu4::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void i_relu4::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void i_relu4::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void i_relu4::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void i_relu4::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void i_relu4::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln113_fu_93_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void i_relu4::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void i_relu4::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln113_fu_93_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void i_relu4::thread_bitcast_ln116_fu_192_p1() {
    bitcast_ln116_fu_192_p1 = input_r_q0.read();
}

void i_relu4::thread_i_fu_99_p2() {
    i_fu_99_p2 = (!i_0_reg_54.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_54.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void i_relu4::thread_icmp_ln113_fu_93_p2() {
    icmp_ln113_fu_93_p2 = (!i_0_reg_54.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_54.read() == ap_const_lv5_10);
}

void i_relu4::thread_icmp_ln114_fu_127_p2() {
    icmp_ln114_fu_127_p2 = (!j_0_reg_65.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_65.read() == ap_const_lv3_5);
}

void i_relu4::thread_icmp_ln115_fu_166_p2() {
    icmp_ln115_fu_166_p2 = (!k_0_reg_76.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_76.read() == ap_const_lv3_5);
}

void i_relu4::thread_icmp_ln116_1_fu_216_p2() {
    icmp_ln116_1_fu_216_p2 = (!trunc_ln116_fu_206_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln116_fu_206_p1.read() == ap_const_lv23_0);
}

void i_relu4::thread_icmp_ln116_fu_210_p2() {
    icmp_ln116_fu_210_p2 = (!tmp_fu_196_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_196_p4.read() != ap_const_lv8_FF);
}

void i_relu4::thread_input_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_r_address0 = input_addr_reg_266.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_r_address0 =  (sc_lv<9>) (zext_ln116_5_fu_187_p1.read());
    } else {
        input_r_address0 = "XXXXXXXXX";
    }
}

void i_relu4::thread_input_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void i_relu4::thread_input_r_d0() {
    input_r_d0 = ap_const_lv32_0;
}

void i_relu4::thread_input_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, and_ln116_fu_226_p2.read()))) {
        input_r_we0 = ap_const_logic_1;
    } else {
        input_r_we0 = ap_const_logic_0;
    }
}

void i_relu4::thread_j_fu_133_p2() {
    j_fu_133_p2 = (!j_0_reg_65.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_65.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void i_relu4::thread_k_fu_172_p2() {
    k_fu_172_p2 = (!k_0_reg_76.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_0_reg_76.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void i_relu4::thread_or_ln116_fu_222_p2() {
    or_ln116_fu_222_p2 = (icmp_ln116_1_reg_281.read() | icmp_ln116_reg_276.read());
}

void i_relu4::thread_p_shl1_cast_fu_152_p3() {
    p_shl1_cast_fu_152_p3 = esl_concat<8,2>(add_ln116_1_fu_143_p2.read(), ap_const_lv2_0);
}

void i_relu4::thread_tmp_fu_196_p4() {
    tmp_fu_196_p4 = bitcast_ln116_fu_192_p1.read().range(30, 23);
}

void i_relu4::thread_tmp_s_fu_109_p3() {
    tmp_s_fu_109_p3 = esl_concat<5,2>(i_0_reg_54.read(), ap_const_lv2_0);
}

void i_relu4::thread_trunc_ln116_fu_206_p1() {
    trunc_ln116_fu_206_p1 = bitcast_ln116_fu_192_p1.read().range(23-1, 0);
}

void i_relu4::thread_zext_ln116_1_fu_117_p1() {
    zext_ln116_1_fu_117_p1 = esl_zext<8,7>(tmp_s_fu_109_p3.read());
}

void i_relu4::thread_zext_ln116_2_fu_139_p1() {
    zext_ln116_2_fu_139_p1 = esl_zext<8,3>(j_0_reg_65.read());
}

void i_relu4::thread_zext_ln116_3_fu_148_p1() {
    zext_ln116_3_fu_148_p1 = esl_zext<10,8>(add_ln116_1_fu_143_p2.read());
}

void i_relu4::thread_zext_ln116_4_fu_178_p1() {
    zext_ln116_4_fu_178_p1 = esl_zext<10,3>(k_0_reg_76.read());
}

void i_relu4::thread_zext_ln116_5_fu_187_p1() {
    zext_ln116_5_fu_187_p1 = esl_zext<64,10>(add_ln116_3_fu_182_p2.read());
}

void i_relu4::thread_zext_ln116_fu_105_p1() {
    zext_ln116_fu_105_p1 = esl_zext<8,5>(i_0_reg_54.read());
}

void i_relu4::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln113_fu_93_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln114_fu_127_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln115_fu_166_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

