// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ld_weights1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ld_weights1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ld_weights1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> ld_weights1::ap_ST_fsm_state1 = "1";
const sc_lv<5> ld_weights1::ap_ST_fsm_state2 = "10";
const sc_lv<5> ld_weights1::ap_ST_fsm_state3 = "100";
const sc_lv<5> ld_weights1::ap_ST_fsm_state4 = "1000";
const sc_lv<5> ld_weights1::ap_ST_fsm_state5 = "10000";
const sc_lv<32> ld_weights1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> ld_weights1::ap_const_lv32_1 = "1";
const sc_lv<1> ld_weights1::ap_const_lv1_0 = "0";
const sc_lv<32> ld_weights1::ap_const_lv32_2 = "10";
const sc_lv<32> ld_weights1::ap_const_lv32_3 = "11";
const sc_lv<3> ld_weights1::ap_const_lv3_0 = "000";
const sc_lv<1> ld_weights1::ap_const_lv1_1 = "1";
const sc_lv<32> ld_weights1::ap_const_lv32_4 = "100";
const sc_lv<3> ld_weights1::ap_const_lv3_6 = "110";
const sc_lv<3> ld_weights1::ap_const_lv3_1 = "1";
const sc_lv<2> ld_weights1::ap_const_lv2_0 = "00";
const sc_lv<3> ld_weights1::ap_const_lv3_5 = "101";
const bool ld_weights1::ap_const_boolean_1 = true;

ld_weights1::ld_weights1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln182_1_fu_136_p2);
    sensitive << ( add_ln182_reg_197 );
    sensitive << ( zext_ln182_2_fu_132_p1 );

    SC_METHOD(thread_add_ln182_2_fu_157_p2);
    sensitive << ( zext_ln182_4_fu_153_p1 );
    sensitive << ( zext_ln182_3_fu_141_p1 );

    SC_METHOD(thread_add_ln182_3_fu_179_p2);
    sensitive << ( add_ln182_2_reg_210 );
    sensitive << ( zext_ln182_5_fu_175_p1 );

    SC_METHOD(thread_add_ln182_fu_114_p2);
    sensitive << ( zext_ln182_fu_98_p1 );
    sensitive << ( zext_ln182_1_fu_110_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln179_fu_86_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln179_fu_86_p2 );

    SC_METHOD(thread_i_fu_92_p2);
    sensitive << ( i_0_reg_53 );

    SC_METHOD(thread_icmp_ln179_fu_86_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_53 );

    SC_METHOD(thread_icmp_ln180_fu_120_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_64 );

    SC_METHOD(thread_icmp_ln181_fu_163_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_reg_75 );

    SC_METHOD(thread_j_fu_126_p2);
    sensitive << ( j_0_reg_64 );

    SC_METHOD(thread_k_fu_169_p2);
    sensitive << ( k_0_reg_75 );

    SC_METHOD(thread_tmp_3_fu_145_p3);
    sensitive << ( add_ln182_1_fu_136_p2 );

    SC_METHOD(thread_tmp_fu_102_p3);
    sensitive << ( i_0_reg_53 );

    SC_METHOD(thread_weights1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln182_6_fu_184_p1 );

    SC_METHOD(thread_weights1_buf_0_address0);
    sensitive << ( zext_ln182_6_reg_223 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_weights1_buf_0_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_weights1_buf_0_d0);
    sensitive << ( weights1_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_weights1_buf_0_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_weights1_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_zext_ln182_1_fu_110_p1);
    sensitive << ( tmp_fu_102_p3 );

    SC_METHOD(thread_zext_ln182_2_fu_132_p1);
    sensitive << ( j_0_reg_64 );

    SC_METHOD(thread_zext_ln182_3_fu_141_p1);
    sensitive << ( add_ln182_1_fu_136_p2 );

    SC_METHOD(thread_zext_ln182_4_fu_153_p1);
    sensitive << ( tmp_3_fu_145_p3 );

    SC_METHOD(thread_zext_ln182_5_fu_175_p1);
    sensitive << ( k_0_reg_75 );

    SC_METHOD(thread_zext_ln182_6_fu_184_p1);
    sensitive << ( add_ln182_3_fu_179_p2 );

    SC_METHOD(thread_zext_ln182_fu_98_p1);
    sensitive << ( i_0_reg_53 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln179_fu_86_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln180_fu_120_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln181_fu_163_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ld_weights1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, weights1_address0, "(port)weights1_address0");
    sc_trace(mVcdFile, weights1_ce0, "(port)weights1_ce0");
    sc_trace(mVcdFile, weights1_q0, "(port)weights1_q0");
    sc_trace(mVcdFile, weights1_buf_0_address0, "(port)weights1_buf_0_address0");
    sc_trace(mVcdFile, weights1_buf_0_ce0, "(port)weights1_buf_0_ce0");
    sc_trace(mVcdFile, weights1_buf_0_we0, "(port)weights1_buf_0_we0");
    sc_trace(mVcdFile, weights1_buf_0_d0, "(port)weights1_buf_0_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_92_p2, "i_fu_92_p2");
    sc_trace(mVcdFile, i_reg_192, "i_reg_192");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln182_fu_114_p2, "add_ln182_fu_114_p2");
    sc_trace(mVcdFile, add_ln182_reg_197, "add_ln182_reg_197");
    sc_trace(mVcdFile, icmp_ln179_fu_86_p2, "icmp_ln179_fu_86_p2");
    sc_trace(mVcdFile, j_fu_126_p2, "j_fu_126_p2");
    sc_trace(mVcdFile, j_reg_205, "j_reg_205");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln182_2_fu_157_p2, "add_ln182_2_fu_157_p2");
    sc_trace(mVcdFile, add_ln182_2_reg_210, "add_ln182_2_reg_210");
    sc_trace(mVcdFile, icmp_ln180_fu_120_p2, "icmp_ln180_fu_120_p2");
    sc_trace(mVcdFile, k_fu_169_p2, "k_fu_169_p2");
    sc_trace(mVcdFile, k_reg_218, "k_reg_218");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln182_6_fu_184_p1, "zext_ln182_6_fu_184_p1");
    sc_trace(mVcdFile, zext_ln182_6_reg_223, "zext_ln182_6_reg_223");
    sc_trace(mVcdFile, icmp_ln181_fu_163_p2, "icmp_ln181_fu_163_p2");
    sc_trace(mVcdFile, i_0_reg_53, "i_0_reg_53");
    sc_trace(mVcdFile, j_0_reg_64, "j_0_reg_64");
    sc_trace(mVcdFile, k_0_reg_75, "k_0_reg_75");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_fu_102_p3, "tmp_fu_102_p3");
    sc_trace(mVcdFile, zext_ln182_fu_98_p1, "zext_ln182_fu_98_p1");
    sc_trace(mVcdFile, zext_ln182_1_fu_110_p1, "zext_ln182_1_fu_110_p1");
    sc_trace(mVcdFile, zext_ln182_2_fu_132_p1, "zext_ln182_2_fu_132_p1");
    sc_trace(mVcdFile, add_ln182_1_fu_136_p2, "add_ln182_1_fu_136_p2");
    sc_trace(mVcdFile, tmp_3_fu_145_p3, "tmp_3_fu_145_p3");
    sc_trace(mVcdFile, zext_ln182_4_fu_153_p1, "zext_ln182_4_fu_153_p1");
    sc_trace(mVcdFile, zext_ln182_3_fu_141_p1, "zext_ln182_3_fu_141_p1");
    sc_trace(mVcdFile, zext_ln182_5_fu_175_p1, "zext_ln182_5_fu_175_p1");
    sc_trace(mVcdFile, add_ln182_3_fu_179_p2, "add_ln182_3_fu_179_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

ld_weights1::~ld_weights1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void ld_weights1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln180_fu_120_p2.read(), ap_const_lv1_1))) {
        i_0_reg_53 = i_reg_192.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_53 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln181_fu_163_p2.read(), ap_const_lv1_1))) {
        j_0_reg_64 = j_reg_205.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln179_fu_86_p2.read(), ap_const_lv1_0))) {
        j_0_reg_64 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln180_fu_120_p2.read()))) {
        k_0_reg_75 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_0_reg_75 = k_reg_218.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln180_fu_120_p2.read()))) {
        add_ln182_2_reg_210 = add_ln182_2_fu_157_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln179_fu_86_p2.read(), ap_const_lv1_0))) {
        add_ln182_reg_197 = add_ln182_fu_114_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_192 = i_fu_92_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_205 = j_fu_126_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_reg_218 = k_fu_169_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln181_fu_163_p2.read()))) {
        zext_ln182_6_reg_223 = zext_ln182_6_fu_184_p1.read();
    }
}

void ld_weights1::thread_add_ln182_1_fu_136_p2() {
    add_ln182_1_fu_136_p2 = (!zext_ln182_2_fu_132_p1.read().is_01() || !add_ln182_reg_197.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln182_2_fu_132_p1.read()) + sc_biguint<6>(add_ln182_reg_197.read()));
}

void ld_weights1::thread_add_ln182_2_fu_157_p2() {
    add_ln182_2_fu_157_p2 = (!zext_ln182_4_fu_153_p1.read().is_01() || !zext_ln182_3_fu_141_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln182_4_fu_153_p1.read()) + sc_biguint<9>(zext_ln182_3_fu_141_p1.read()));
}

void ld_weights1::thread_add_ln182_3_fu_179_p2() {
    add_ln182_3_fu_179_p2 = (!add_ln182_2_reg_210.read().is_01() || !zext_ln182_5_fu_175_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(add_ln182_2_reg_210.read()) + sc_biguint<9>(zext_ln182_5_fu_175_p1.read()));
}

void ld_weights1::thread_add_ln182_fu_114_p2() {
    add_ln182_fu_114_p2 = (!zext_ln182_fu_98_p1.read().is_01() || !zext_ln182_1_fu_110_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln182_fu_98_p1.read()) + sc_biguint<6>(zext_ln182_1_fu_110_p1.read()));
}

void ld_weights1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void ld_weights1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void ld_weights1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void ld_weights1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void ld_weights1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void ld_weights1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln179_fu_86_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void ld_weights1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ld_weights1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln179_fu_86_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ld_weights1::thread_i_fu_92_p2() {
    i_fu_92_p2 = (!i_0_reg_53.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_53.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void ld_weights1::thread_icmp_ln179_fu_86_p2() {
    icmp_ln179_fu_86_p2 = (!i_0_reg_53.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_53.read() == ap_const_lv3_6);
}

void ld_weights1::thread_icmp_ln180_fu_120_p2() {
    icmp_ln180_fu_120_p2 = (!j_0_reg_64.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_64.read() == ap_const_lv3_5);
}

void ld_weights1::thread_icmp_ln181_fu_163_p2() {
    icmp_ln181_fu_163_p2 = (!k_0_reg_75.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_75.read() == ap_const_lv3_5);
}

void ld_weights1::thread_j_fu_126_p2() {
    j_fu_126_p2 = (!j_0_reg_64.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_64.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void ld_weights1::thread_k_fu_169_p2() {
    k_fu_169_p2 = (!k_0_reg_75.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_0_reg_75.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void ld_weights1::thread_tmp_3_fu_145_p3() {
    tmp_3_fu_145_p3 = esl_concat<6,2>(add_ln182_1_fu_136_p2.read(), ap_const_lv2_0);
}

void ld_weights1::thread_tmp_fu_102_p3() {
    tmp_fu_102_p3 = esl_concat<3,2>(i_0_reg_53.read(), ap_const_lv2_0);
}

void ld_weights1::thread_weights1_address0() {
    weights1_address0 =  (sc_lv<8>) (zext_ln182_6_fu_184_p1.read());
}

void ld_weights1::thread_weights1_buf_0_address0() {
    weights1_buf_0_address0 =  (sc_lv<8>) (zext_ln182_6_reg_223.read());
}

void ld_weights1::thread_weights1_buf_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        weights1_buf_0_ce0 = ap_const_logic_1;
    } else {
        weights1_buf_0_ce0 = ap_const_logic_0;
    }
}

void ld_weights1::thread_weights1_buf_0_d0() {
    weights1_buf_0_d0 = weights1_q0.read();
}

void ld_weights1::thread_weights1_buf_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        weights1_buf_0_we0 = ap_const_logic_1;
    } else {
        weights1_buf_0_we0 = ap_const_logic_0;
    }
}

void ld_weights1::thread_weights1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        weights1_ce0 = ap_const_logic_1;
    } else {
        weights1_ce0 = ap_const_logic_0;
    }
}

void ld_weights1::thread_zext_ln182_1_fu_110_p1() {
    zext_ln182_1_fu_110_p1 = esl_zext<6,5>(tmp_fu_102_p3.read());
}

void ld_weights1::thread_zext_ln182_2_fu_132_p1() {
    zext_ln182_2_fu_132_p1 = esl_zext<6,3>(j_0_reg_64.read());
}

void ld_weights1::thread_zext_ln182_3_fu_141_p1() {
    zext_ln182_3_fu_141_p1 = esl_zext<9,6>(add_ln182_1_fu_136_p2.read());
}

void ld_weights1::thread_zext_ln182_4_fu_153_p1() {
    zext_ln182_4_fu_153_p1 = esl_zext<9,8>(tmp_3_fu_145_p3.read());
}

void ld_weights1::thread_zext_ln182_5_fu_175_p1() {
    zext_ln182_5_fu_175_p1 = esl_zext<9,3>(k_0_reg_75.read());
}

void ld_weights1::thread_zext_ln182_6_fu_184_p1() {
    zext_ln182_6_fu_184_p1 = esl_zext<64,9>(add_ln182_3_fu_179_p2.read());
}

void ld_weights1::thread_zext_ln182_fu_98_p1() {
    zext_ln182_fu_98_p1 = esl_zext<6,3>(i_0_reg_53.read());
}

void ld_weights1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln179_fu_86_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln180_fu_120_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln181_fu_163_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

