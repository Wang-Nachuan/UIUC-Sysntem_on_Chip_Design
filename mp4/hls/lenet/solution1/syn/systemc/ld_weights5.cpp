// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ld_weights5.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ld_weights5::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ld_weights5::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> ld_weights5::ap_ST_fsm_state1 = "1";
const sc_lv<6> ld_weights5::ap_ST_fsm_state2 = "10";
const sc_lv<6> ld_weights5::ap_ST_fsm_state3 = "100";
const sc_lv<6> ld_weights5::ap_ST_fsm_state4 = "1000";
const sc_lv<6> ld_weights5::ap_ST_fsm_state5 = "10000";
const sc_lv<6> ld_weights5::ap_ST_fsm_state6 = "100000";
const sc_lv<32> ld_weights5::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> ld_weights5::ap_const_lv32_1 = "1";
const sc_lv<1> ld_weights5::ap_const_lv1_0 = "0";
const sc_lv<32> ld_weights5::ap_const_lv32_2 = "10";
const sc_lv<32> ld_weights5::ap_const_lv32_3 = "11";
const sc_lv<32> ld_weights5::ap_const_lv32_4 = "100";
const sc_lv<7> ld_weights5::ap_const_lv7_0 = "0000000";
const sc_lv<1> ld_weights5::ap_const_lv1_1 = "1";
const sc_lv<5> ld_weights5::ap_const_lv5_0 = "00000";
const sc_lv<3> ld_weights5::ap_const_lv3_0 = "000";
const sc_lv<32> ld_weights5::ap_const_lv32_5 = "101";
const sc_lv<7> ld_weights5::ap_const_lv7_78 = "1111000";
const sc_lv<7> ld_weights5::ap_const_lv7_1 = "1";
const sc_lv<4> ld_weights5::ap_const_lv4_0 = "0000";
const sc_lv<5> ld_weights5::ap_const_lv5_10 = "10000";
const sc_lv<5> ld_weights5::ap_const_lv5_1 = "1";
const sc_lv<2> ld_weights5::ap_const_lv2_0 = "00";
const sc_lv<3> ld_weights5::ap_const_lv3_5 = "101";
const sc_lv<3> ld_weights5::ap_const_lv3_1 = "1";
const bool ld_weights5::ap_const_boolean_1 = true;

ld_weights5::ld_weights5(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln205_1_fu_174_p2);
    sensitive << ( zext_ln205_1_fu_158_p1 );
    sensitive << ( zext_ln205_3_fu_170_p1 );

    SC_METHOD(thread_add_ln205_2_fu_196_p2);
    sensitive << ( add_ln205_1_reg_270 );
    sensitive << ( zext_ln205_2_fu_192_p1 );

    SC_METHOD(thread_add_ln205_3_fu_217_p2);
    sensitive << ( trunc_ln205_fu_201_p1 );
    sensitive << ( p_shl1_cast_fu_209_p3 );

    SC_METHOD(thread_add_ln205_4_fu_239_p2);
    sensitive << ( add_ln205_3_reg_283 );
    sensitive << ( zext_ln205_4_fu_235_p1 );

    SC_METHOD(thread_add_ln205_fu_153_p2);
    sensitive << ( zext_ln202_reg_257 );
    sensitive << ( zext_ln205_fu_149_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln201_fu_113_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln201_fu_113_p2 );

    SC_METHOD(thread_i_fu_119_p2);
    sensitive << ( i_0_reg_69 );

    SC_METHOD(thread_icmp_ln201_fu_113_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_69 );

    SC_METHOD(thread_icmp_ln202_fu_137_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_80 );

    SC_METHOD(thread_icmp_ln203_fu_180_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_reg_91 );

    SC_METHOD(thread_icmp_ln204_fu_223_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( l_0_reg_102 );

    SC_METHOD(thread_j_fu_143_p2);
    sensitive << ( j_0_reg_80 );

    SC_METHOD(thread_k_fu_186_p2);
    sensitive << ( k_0_reg_91 );

    SC_METHOD(thread_l_fu_229_p2);
    sensitive << ( l_0_reg_102 );

    SC_METHOD(thread_p_shl1_cast_fu_209_p3);
    sensitive << ( trunc_ln205_1_fu_205_p1 );

    SC_METHOD(thread_tmp_1_fu_162_p3);
    sensitive << ( add_ln205_fu_153_p2 );

    SC_METHOD(thread_tmp_fu_125_p3);
    sensitive << ( i_0_reg_69 );

    SC_METHOD(thread_trunc_ln205_1_fu_205_p1);
    sensitive << ( add_ln205_2_fu_196_p2 );

    SC_METHOD(thread_trunc_ln205_fu_201_p1);
    sensitive << ( add_ln205_2_fu_196_p2 );

    SC_METHOD(thread_weights5_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln205_5_fu_244_p1 );

    SC_METHOD(thread_weights5_buf_address0);
    sensitive << ( zext_ln205_5_reg_296 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_weights5_buf_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_weights5_buf_d0);
    sensitive << ( weights5_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_weights5_buf_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_weights5_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_zext_ln202_fu_133_p1);
    sensitive << ( tmp_fu_125_p3 );

    SC_METHOD(thread_zext_ln205_1_fu_158_p1);
    sensitive << ( add_ln205_fu_153_p2 );

    SC_METHOD(thread_zext_ln205_2_fu_192_p1);
    sensitive << ( k_0_reg_91 );

    SC_METHOD(thread_zext_ln205_3_fu_170_p1);
    sensitive << ( tmp_1_fu_162_p3 );

    SC_METHOD(thread_zext_ln205_4_fu_235_p1);
    sensitive << ( l_0_reg_102 );

    SC_METHOD(thread_zext_ln205_5_fu_244_p1);
    sensitive << ( add_ln205_4_fu_239_p2 );

    SC_METHOD(thread_zext_ln205_fu_149_p1);
    sensitive << ( j_0_reg_80 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln201_fu_113_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln202_fu_137_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln203_fu_180_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln204_fu_223_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ld_weights5_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, weights5_address0, "(port)weights5_address0");
    sc_trace(mVcdFile, weights5_ce0, "(port)weights5_ce0");
    sc_trace(mVcdFile, weights5_q0, "(port)weights5_q0");
    sc_trace(mVcdFile, weights5_buf_address0, "(port)weights5_buf_address0");
    sc_trace(mVcdFile, weights5_buf_ce0, "(port)weights5_buf_ce0");
    sc_trace(mVcdFile, weights5_buf_we0, "(port)weights5_buf_we0");
    sc_trace(mVcdFile, weights5_buf_d0, "(port)weights5_buf_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_119_p2, "i_fu_119_p2");
    sc_trace(mVcdFile, i_reg_252, "i_reg_252");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln202_fu_133_p1, "zext_ln202_fu_133_p1");
    sc_trace(mVcdFile, zext_ln202_reg_257, "zext_ln202_reg_257");
    sc_trace(mVcdFile, icmp_ln201_fu_113_p2, "icmp_ln201_fu_113_p2");
    sc_trace(mVcdFile, j_fu_143_p2, "j_fu_143_p2");
    sc_trace(mVcdFile, j_reg_265, "j_reg_265");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln205_1_fu_174_p2, "add_ln205_1_fu_174_p2");
    sc_trace(mVcdFile, add_ln205_1_reg_270, "add_ln205_1_reg_270");
    sc_trace(mVcdFile, icmp_ln202_fu_137_p2, "icmp_ln202_fu_137_p2");
    sc_trace(mVcdFile, k_fu_186_p2, "k_fu_186_p2");
    sc_trace(mVcdFile, k_reg_278, "k_reg_278");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln205_3_fu_217_p2, "add_ln205_3_fu_217_p2");
    sc_trace(mVcdFile, add_ln205_3_reg_283, "add_ln205_3_reg_283");
    sc_trace(mVcdFile, icmp_ln203_fu_180_p2, "icmp_ln203_fu_180_p2");
    sc_trace(mVcdFile, l_fu_229_p2, "l_fu_229_p2");
    sc_trace(mVcdFile, l_reg_291, "l_reg_291");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln205_5_fu_244_p1, "zext_ln205_5_fu_244_p1");
    sc_trace(mVcdFile, zext_ln205_5_reg_296, "zext_ln205_5_reg_296");
    sc_trace(mVcdFile, icmp_ln204_fu_223_p2, "icmp_ln204_fu_223_p2");
    sc_trace(mVcdFile, i_0_reg_69, "i_0_reg_69");
    sc_trace(mVcdFile, j_0_reg_80, "j_0_reg_80");
    sc_trace(mVcdFile, k_0_reg_91, "k_0_reg_91");
    sc_trace(mVcdFile, l_0_reg_102, "l_0_reg_102");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_fu_125_p3, "tmp_fu_125_p3");
    sc_trace(mVcdFile, zext_ln205_fu_149_p1, "zext_ln205_fu_149_p1");
    sc_trace(mVcdFile, add_ln205_fu_153_p2, "add_ln205_fu_153_p2");
    sc_trace(mVcdFile, tmp_1_fu_162_p3, "tmp_1_fu_162_p3");
    sc_trace(mVcdFile, zext_ln205_1_fu_158_p1, "zext_ln205_1_fu_158_p1");
    sc_trace(mVcdFile, zext_ln205_3_fu_170_p1, "zext_ln205_3_fu_170_p1");
    sc_trace(mVcdFile, zext_ln205_2_fu_192_p1, "zext_ln205_2_fu_192_p1");
    sc_trace(mVcdFile, add_ln205_2_fu_196_p2, "add_ln205_2_fu_196_p2");
    sc_trace(mVcdFile, trunc_ln205_1_fu_205_p1, "trunc_ln205_1_fu_205_p1");
    sc_trace(mVcdFile, trunc_ln205_fu_201_p1, "trunc_ln205_fu_201_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_209_p3, "p_shl1_cast_fu_209_p3");
    sc_trace(mVcdFile, zext_ln205_4_fu_235_p1, "zext_ln205_4_fu_235_p1");
    sc_trace(mVcdFile, add_ln205_4_fu_239_p2, "add_ln205_4_fu_239_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

ld_weights5::~ld_weights5() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void ld_weights5::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln202_fu_137_p2.read(), ap_const_lv1_1))) {
        i_0_reg_69 = i_reg_252.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_69 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln203_fu_180_p2.read(), ap_const_lv1_1))) {
        j_0_reg_80 = j_reg_265.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln201_fu_113_p2.read(), ap_const_lv1_0))) {
        j_0_reg_80 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln204_fu_223_p2.read(), ap_const_lv1_1))) {
        k_0_reg_91 = k_reg_278.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln202_fu_137_p2.read()))) {
        k_0_reg_91 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln203_fu_180_p2.read()))) {
        l_0_reg_102 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        l_0_reg_102 = l_reg_291.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln202_fu_137_p2.read()))) {
        add_ln205_1_reg_270 = add_ln205_1_fu_174_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln203_fu_180_p2.read()))) {
        add_ln205_3_reg_283 = add_ln205_3_fu_217_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_252 = i_fu_119_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_265 = j_fu_143_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_reg_278 = k_fu_186_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        l_reg_291 = l_fu_229_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln201_fu_113_p2.read(), ap_const_lv1_0))) {
        zext_ln202_reg_257 = zext_ln202_fu_133_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln204_fu_223_p2.read()))) {
        zext_ln205_5_reg_296 = zext_ln205_5_fu_244_p1.read();
    }
}

void ld_weights5::thread_add_ln205_1_fu_174_p2() {
    add_ln205_1_fu_174_p2 = (!zext_ln205_1_fu_158_p1.read().is_01() || !zext_ln205_3_fu_170_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln205_1_fu_158_p1.read()) + sc_biguint<64>(zext_ln205_3_fu_170_p1.read()));
}

void ld_weights5::thread_add_ln205_2_fu_196_p2() {
    add_ln205_2_fu_196_p2 = (!add_ln205_1_reg_270.read().is_01() || !zext_ln205_2_fu_192_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(add_ln205_1_reg_270.read()) + sc_biguint<64>(zext_ln205_2_fu_192_p1.read()));
}

void ld_weights5::thread_add_ln205_3_fu_217_p2() {
    add_ln205_3_fu_217_p2 = (!trunc_ln205_fu_201_p1.read().is_01() || !p_shl1_cast_fu_209_p3.read().is_01())? sc_lv<17>(): (sc_biguint<17>(trunc_ln205_fu_201_p1.read()) + sc_biguint<17>(p_shl1_cast_fu_209_p3.read()));
}

void ld_weights5::thread_add_ln205_4_fu_239_p2() {
    add_ln205_4_fu_239_p2 = (!add_ln205_3_reg_283.read().is_01() || !zext_ln205_4_fu_235_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(add_ln205_3_reg_283.read()) + sc_biguint<17>(zext_ln205_4_fu_235_p1.read()));
}

void ld_weights5::thread_add_ln205_fu_153_p2() {
    add_ln205_fu_153_p2 = (!zext_ln202_reg_257.read().is_01() || !zext_ln205_fu_149_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln202_reg_257.read()) + sc_biguint<12>(zext_ln205_fu_149_p1.read()));
}

void ld_weights5::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void ld_weights5::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void ld_weights5::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void ld_weights5::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void ld_weights5::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void ld_weights5::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void ld_weights5::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln201_fu_113_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void ld_weights5::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ld_weights5::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln201_fu_113_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ld_weights5::thread_i_fu_119_p2() {
    i_fu_119_p2 = (!i_0_reg_69.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_69.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void ld_weights5::thread_icmp_ln201_fu_113_p2() {
    icmp_ln201_fu_113_p2 = (!i_0_reg_69.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_69.read() == ap_const_lv7_78);
}

void ld_weights5::thread_icmp_ln202_fu_137_p2() {
    icmp_ln202_fu_137_p2 = (!j_0_reg_80.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_80.read() == ap_const_lv5_10);
}

void ld_weights5::thread_icmp_ln203_fu_180_p2() {
    icmp_ln203_fu_180_p2 = (!k_0_reg_91.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_91.read() == ap_const_lv3_5);
}

void ld_weights5::thread_icmp_ln204_fu_223_p2() {
    icmp_ln204_fu_223_p2 = (!l_0_reg_102.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(l_0_reg_102.read() == ap_const_lv3_5);
}

void ld_weights5::thread_j_fu_143_p2() {
    j_fu_143_p2 = (!j_0_reg_80.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_0_reg_80.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void ld_weights5::thread_k_fu_186_p2() {
    k_fu_186_p2 = (!k_0_reg_91.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_0_reg_91.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void ld_weights5::thread_l_fu_229_p2() {
    l_fu_229_p2 = (!l_0_reg_102.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(l_0_reg_102.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void ld_weights5::thread_p_shl1_cast_fu_209_p3() {
    p_shl1_cast_fu_209_p3 = esl_concat<15,2>(trunc_ln205_1_fu_205_p1.read(), ap_const_lv2_0);
}

void ld_weights5::thread_tmp_1_fu_162_p3() {
    tmp_1_fu_162_p3 = esl_concat<12,2>(add_ln205_fu_153_p2.read(), ap_const_lv2_0);
}

void ld_weights5::thread_tmp_fu_125_p3() {
    tmp_fu_125_p3 = esl_concat<7,4>(i_0_reg_69.read(), ap_const_lv4_0);
}

void ld_weights5::thread_trunc_ln205_1_fu_205_p1() {
    trunc_ln205_1_fu_205_p1 = add_ln205_2_fu_196_p2.read().range(15-1, 0);
}

void ld_weights5::thread_trunc_ln205_fu_201_p1() {
    trunc_ln205_fu_201_p1 = add_ln205_2_fu_196_p2.read().range(17-1, 0);
}

void ld_weights5::thread_weights5_address0() {
    weights5_address0 =  (sc_lv<16>) (zext_ln205_5_fu_244_p1.read());
}

void ld_weights5::thread_weights5_buf_address0() {
    weights5_buf_address0 =  (sc_lv<16>) (zext_ln205_5_reg_296.read());
}

void ld_weights5::thread_weights5_buf_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        weights5_buf_ce0 = ap_const_logic_1;
    } else {
        weights5_buf_ce0 = ap_const_logic_0;
    }
}

void ld_weights5::thread_weights5_buf_d0() {
    weights5_buf_d0 = weights5_q0.read();
}

void ld_weights5::thread_weights5_buf_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        weights5_buf_we0 = ap_const_logic_1;
    } else {
        weights5_buf_we0 = ap_const_logic_0;
    }
}

void ld_weights5::thread_weights5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        weights5_ce0 = ap_const_logic_1;
    } else {
        weights5_ce0 = ap_const_logic_0;
    }
}

void ld_weights5::thread_zext_ln202_fu_133_p1() {
    zext_ln202_fu_133_p1 = esl_zext<12,11>(tmp_fu_125_p3.read());
}

void ld_weights5::thread_zext_ln205_1_fu_158_p1() {
    zext_ln205_1_fu_158_p1 = esl_zext<64,12>(add_ln205_fu_153_p2.read());
}

void ld_weights5::thread_zext_ln205_2_fu_192_p1() {
    zext_ln205_2_fu_192_p1 = esl_zext<64,3>(k_0_reg_91.read());
}

void ld_weights5::thread_zext_ln205_3_fu_170_p1() {
    zext_ln205_3_fu_170_p1 = esl_zext<64,14>(tmp_1_fu_162_p3.read());
}

void ld_weights5::thread_zext_ln205_4_fu_235_p1() {
    zext_ln205_4_fu_235_p1 = esl_zext<17,3>(l_0_reg_102.read());
}

void ld_weights5::thread_zext_ln205_5_fu_244_p1() {
    zext_ln205_5_fu_244_p1 = esl_zext<64,17>(add_ln205_4_fu_239_p2.read());
}

void ld_weights5::thread_zext_ln205_fu_149_p1() {
    zext_ln205_fu_149_p1 = esl_zext<12,5>(j_0_reg_80.read());
}

void ld_weights5::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln201_fu_113_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln202_fu_137_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln203_fu_180_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln204_fu_223_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

