

================================================================
== Vivado HLS Report for 'i_relu4'
================================================================
* Date:           Sun Oct 30 00:20:23 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        lenet
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.685|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1393|  1393|  1393|  1393|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+------+------+----------+-----------+-----------+------+----------+
        |                 |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1         |  1392|  1392|        87|          -|          -|    16|    no    |
        | + Loop 1.1      |    85|    85|        17|          -|          -|     5|    no    |
        |  ++ Loop 1.1.1  |    15|    15|         3|          -|          -|     5|    no    |
        +-----------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 
6 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 7 [1/1] (1.76ns)   --->   "br label %.loopexit" [lenet/lenet_hls.cpp:113]   --->   Operation 7 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.87>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ 0, %0 ], [ %i, %.loopexit.loopexit ]"   --->   Operation 8 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (1.36ns)   --->   "%icmp_ln113 = icmp eq i5 %i_0, -16" [lenet/lenet_hls.cpp:113]   --->   Operation 9 'icmp' 'icmp_ln113' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 10 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (1.78ns)   --->   "%i = add i5 %i_0, 1" [lenet/lenet_hls.cpp:113]   --->   Operation 11 'add' 'i' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "br i1 %icmp_ln113, label %3, label %.preheader1.preheader" [lenet/lenet_hls.cpp:113]   --->   Operation 12 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln116 = zext i5 %i_0 to i8" [lenet/lenet_hls.cpp:116]   --->   Operation 13 'zext' 'zext_ln116' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%tmp_s = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i_0, i2 0)" [lenet/lenet_hls.cpp:116]   --->   Operation 14 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln116_1 = zext i7 %tmp_s to i8" [lenet/lenet_hls.cpp:116]   --->   Operation 15 'zext' 'zext_ln116_1' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (1.87ns)   --->   "%add_ln116 = add i8 %zext_ln116, %zext_ln116_1" [lenet/lenet_hls.cpp:116]   --->   Operation 16 'add' 'add_ln116' <Predicate = (!icmp_ln113)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (1.76ns)   --->   "br label %.preheader1" [lenet/lenet_hls.cpp:114]   --->   Operation 17 'br' <Predicate = (!icmp_ln113)> <Delay = 1.76>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "ret void" [lenet/lenet_hls.cpp:118]   --->   Operation 18 'ret' <Predicate = (icmp_ln113)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.64>
ST_3 : Operation 19 [1/1] (0.00ns)   --->   "%j_0 = phi i3 [ 0, %.preheader1.preheader ], [ %j, %.preheader1.loopexit ]"   --->   Operation 19 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 20 [1/1] (1.13ns)   --->   "%icmp_ln114 = icmp eq i3 %j_0, -3" [lenet/lenet_hls.cpp:114]   --->   Operation 20 'icmp' 'icmp_ln114' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "%empty_26 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"   --->   Operation 21 'speclooptripcount' 'empty_26' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (1.65ns)   --->   "%j = add i3 %j_0, 1" [lenet/lenet_hls.cpp:114]   --->   Operation 22 'add' 'j' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "br i1 %icmp_ln114, label %.loopexit.loopexit, label %.preheader.preheader" [lenet/lenet_hls.cpp:114]   --->   Operation 23 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln116_2 = zext i3 %j_0 to i8" [lenet/lenet_hls.cpp:116]   --->   Operation 24 'zext' 'zext_ln116_2' <Predicate = (!icmp_ln114)> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (1.91ns)   --->   "%add_ln116_1 = add i8 %add_ln116, %zext_ln116_2" [lenet/lenet_hls.cpp:116]   --->   Operation 25 'add' 'add_ln116_1' <Predicate = (!icmp_ln114)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln116_3 = zext i8 %add_ln116_1 to i10" [lenet/lenet_hls.cpp:116]   --->   Operation 26 'zext' 'zext_ln116_3' <Predicate = (!icmp_ln114)> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%p_shl1_cast = call i10 @_ssdm_op_BitConcatenate.i10.i8.i2(i8 %add_ln116_1, i2 0)" [lenet/lenet_hls.cpp:116]   --->   Operation 27 'bitconcatenate' 'p_shl1_cast' <Predicate = (!icmp_ln114)> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.73ns)   --->   "%add_ln116_2 = add i10 %zext_ln116_3, %p_shl1_cast" [lenet/lenet_hls.cpp:116]   --->   Operation 28 'add' 'add_ln116_2' <Predicate = (!icmp_ln114)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (1.76ns)   --->   "br label %.preheader" [lenet/lenet_hls.cpp:115]   --->   Operation 29 'br' <Predicate = (!icmp_ln114)> <Delay = 1.76>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 30 'br' <Predicate = (icmp_ln114)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.98>
ST_4 : Operation 31 [1/1] (0.00ns)   --->   "%k_0 = phi i3 [ %k, %._crit_edge ], [ 0, %.preheader.preheader ]"   --->   Operation 31 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 32 [1/1] (1.13ns)   --->   "%icmp_ln115 = icmp eq i3 %k_0, -3" [lenet/lenet_hls.cpp:115]   --->   Operation 32 'icmp' 'icmp_ln115' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"   --->   Operation 33 'speclooptripcount' 'empty_27' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (1.65ns)   --->   "%k = add i3 %k_0, 1" [lenet/lenet_hls.cpp:115]   --->   Operation 34 'add' 'k' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "br i1 %icmp_ln115, label %.preheader1.loopexit, label %1" [lenet/lenet_hls.cpp:115]   --->   Operation 35 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln116_4 = zext i3 %k_0 to i10" [lenet/lenet_hls.cpp:116]   --->   Operation 36 'zext' 'zext_ln116_4' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (1.73ns)   --->   "%add_ln116_3 = add i10 %add_ln116_2, %zext_ln116_4" [lenet/lenet_hls.cpp:116]   --->   Operation 37 'add' 'add_ln116_3' <Predicate = (!icmp_ln115)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln116_5 = zext i10 %add_ln116_3 to i64" [lenet/lenet_hls.cpp:116]   --->   Operation 38 'zext' 'zext_ln116_5' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%input_addr = getelementptr [400 x float]* %input_r, i64 0, i64 %zext_ln116_5" [lenet/lenet_hls.cpp:116]   --->   Operation 39 'getelementptr' 'input_addr' <Predicate = (!icmp_ln115)> <Delay = 0.00>
ST_4 : Operation 40 [2/2] (3.25ns)   --->   "%input_load = load float* %input_addr, align 4" [lenet/lenet_hls.cpp:116]   --->   Operation 40 'load' 'input_load' <Predicate = (!icmp_ln115)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "br label %.preheader1"   --->   Operation 41 'br' <Predicate = (icmp_ln115)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 8.68>
ST_5 : Operation 42 [1/2] (3.25ns)   --->   "%input_load = load float* %input_addr, align 4" [lenet/lenet_hls.cpp:116]   --->   Operation 42 'load' 'input_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_5 : Operation 43 [1/1] (0.00ns)   --->   "%bitcast_ln116 = bitcast float %input_load to i32" [lenet/lenet_hls.cpp:116]   --->   Operation 43 'bitcast' 'bitcast_ln116' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln116, i32 23, i32 30)" [lenet/lenet_hls.cpp:116]   --->   Operation 44 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln116 = trunc i32 %bitcast_ln116 to i23" [lenet/lenet_hls.cpp:116]   --->   Operation 45 'trunc' 'trunc_ln116' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 46 [1/1] (1.55ns)   --->   "%icmp_ln116 = icmp ne i8 %tmp, -1" [lenet/lenet_hls.cpp:116]   --->   Operation 46 'icmp' 'icmp_ln116' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 47 [1/1] (2.44ns)   --->   "%icmp_ln116_1 = icmp eq i23 %trunc_ln116, 0" [lenet/lenet_hls.cpp:116]   --->   Operation 47 'icmp' 'icmp_ln116_1' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 48 [2/2] (5.43ns)   --->   "%tmp_4 = fcmp olt float %input_load, 0.000000e+00" [lenet/lenet_hls.cpp:116]   --->   Operation 48 'fcmp' 'tmp_4' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.40>
ST_6 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node and_ln116)   --->   "%or_ln116 = or i1 %icmp_ln116_1, %icmp_ln116" [lenet/lenet_hls.cpp:116]   --->   Operation 49 'or' 'or_ln116' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 50 [1/2] (5.43ns)   --->   "%tmp_4 = fcmp olt float %input_load, 0.000000e+00" [lenet/lenet_hls.cpp:116]   --->   Operation 50 'fcmp' 'tmp_4' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 51 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln116 = and i1 %or_ln116, %tmp_4" [lenet/lenet_hls.cpp:116]   --->   Operation 51 'and' 'and_ln116' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 52 [1/1] (0.00ns)   --->   "br i1 %and_ln116, label %2, label %._crit_edge" [lenet/lenet_hls.cpp:116]   --->   Operation 52 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 53 [1/1] (3.25ns)   --->   "store float 0.000000e+00, float* %input_addr, align 4" [lenet/lenet_hls.cpp:117]   --->   Operation 53 'store' <Predicate = (and_ln116)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_6 : Operation 54 [1/1] (0.00ns)   --->   "br label %._crit_edge" [lenet/lenet_hls.cpp:117]   --->   Operation 54 'br' <Predicate = (and_ln116)> <Delay = 0.00>
ST_6 : Operation 55 [1/1] (0.00ns)   --->   "br label %.preheader" [lenet/lenet_hls.cpp:115]   --->   Operation 55 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', lenet/lenet_hls.cpp:113) [4]  (1.77 ns)

 <State 2>: 1.87ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', lenet/lenet_hls.cpp:113) [4]  (0 ns)
	'add' operation ('add_ln116', lenet/lenet_hls.cpp:116) [13]  (1.87 ns)

 <State 3>: 3.65ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', lenet/lenet_hls.cpp:114) [16]  (0 ns)
	'add' operation ('add_ln116_1', lenet/lenet_hls.cpp:116) [23]  (1.92 ns)
	'add' operation ('add_ln116_2', lenet/lenet_hls.cpp:116) [26]  (1.73 ns)

 <State 4>: 4.98ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', lenet/lenet_hls.cpp:115) [29]  (0 ns)
	'add' operation ('add_ln116_3', lenet/lenet_hls.cpp:116) [36]  (1.73 ns)
	'getelementptr' operation ('input_addr', lenet/lenet_hls.cpp:116) [38]  (0 ns)
	'load' operation ('input_load', lenet/lenet_hls.cpp:116) on array 'input_r' [39]  (3.25 ns)

 <State 5>: 8.69ns
The critical path consists of the following:
	'load' operation ('input_load', lenet/lenet_hls.cpp:116) on array 'input_r' [39]  (3.25 ns)
	'fcmp' operation ('tmp_4', lenet/lenet_hls.cpp:116) [46]  (5.43 ns)

 <State 6>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_4', lenet/lenet_hls.cpp:116) [46]  (5.43 ns)
	'and' operation ('and_ln116', lenet/lenet_hls.cpp:116) [47]  (0.978 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
