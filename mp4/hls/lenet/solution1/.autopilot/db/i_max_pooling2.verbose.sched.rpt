

================================================================
== Vivado HLS Report for 'i_max_pooling2'
================================================================
* Date:           Sun Oct 30 17:24:43 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        lenet
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.685|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  17641|  17641|  17641|  17641|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-------+-------+----------+-----------+-----------+------+----------+
        |             |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  17640|  17640|        15|          -|          -|  1176|    no    |
        | + Loop 1.1  |      9|      9|         4|          2|          1|     4|    yes   |
        +-------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 2, D = 4, States = { 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 8 5 
5 --> 6 
6 --> 7 
7 --> 4 
8 --> 9 
9 --> 10 
10 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 11 [1/1] (1.76ns)   --->   "br label %.preheader2" [lenet/lenet_hls.cpp:33]   --->   Operation 11 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.88>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten24 = phi i11 [ 0, %0 ], [ %add_ln33, %1 ]" [lenet/lenet_hls.cpp:33]   --->   Operation 12 'phi' 'indvar_flatten24' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%c_0 = phi i3 [ 0, %0 ], [ %select_ln42_1, %1 ]" [lenet/lenet_hls.cpp:42]   --->   Operation 13 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten6 = phi i8 [ 0, %0 ], [ %select_ln34_3, %1 ]" [lenet/lenet_hls.cpp:34]   --->   Operation 14 'phi' 'indvar_flatten6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%h_0 = phi i4 [ 0, %0 ], [ %select_ln34_2, %1 ]" [lenet/lenet_hls.cpp:34]   --->   Operation 15 'phi' 'h_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%w_0 = phi i4 [ 0, %0 ], [ %w, %1 ]"   --->   Operation 16 'phi' 'w_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (1.88ns)   --->   "%icmp_ln33 = icmp eq i11 %indvar_flatten24, -872" [lenet/lenet_hls.cpp:33]   --->   Operation 17 'icmp' 'icmp_ln33' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (1.63ns)   --->   "%add_ln33 = add i11 %indvar_flatten24, 1" [lenet/lenet_hls.cpp:33]   --->   Operation 18 'add' 'add_ln33' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln33, label %2, label %.preheader3.preheader" [lenet/lenet_hls.cpp:33]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.55ns)   --->   "%icmp_ln34 = icmp eq i8 %indvar_flatten6, -60" [lenet/lenet_hls.cpp:34]   --->   Operation 20 'icmp' 'icmp_ln34' <Predicate = (!icmp_ln33)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "ret void" [lenet/lenet_hls.cpp:49]   --->   Operation 21 'ret' <Predicate = (icmp_ln33)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.96>
ST_3 : Operation 22 [1/1] (1.65ns)   --->   "%c = add i3 1, %c_0" [lenet/lenet_hls.cpp:33]   --->   Operation 22 'add' 'c' <Predicate = (icmp_ln34)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1176, i64 1176, i64 1176)"   --->   Operation 23 'speclooptripcount' 'empty_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (1.02ns)   --->   "%select_ln42 = select i1 %icmp_ln34, i4 0, i4 %h_0" [lenet/lenet_hls.cpp:42]   --->   Operation 24 'select' 'select_ln42' <Predicate = true> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 25 [1/1] (0.98ns)   --->   "%select_ln42_1 = select i1 %icmp_ln34, i3 %c, i3 %c_0" [lenet/lenet_hls.cpp:42]   --->   Operation 25 'select' 'select_ln42_1' <Predicate = true> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_s = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %select_ln42_1, i5 0)" [lenet/lenet_hls.cpp:42]   --->   Operation 26 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i8 %tmp_s to i9" [lenet/lenet_hls.cpp:42]   --->   Operation 27 'zext' 'zext_ln42' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_1 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %select_ln42_1, i2 0)" [lenet/lenet_hls.cpp:42]   --->   Operation 28 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln42_1 = zext i5 %tmp_1 to i9" [lenet/lenet_hls.cpp:42]   --->   Operation 29 'zext' 'zext_ln42_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (1.91ns)   --->   "%sub_ln42 = sub i9 %zext_ln42, %zext_ln42_1" [lenet/lenet_hls.cpp:42]   --->   Operation 30 'sub' 'sub_ln42' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%sext_ln42 = sext i9 %sub_ln42 to i10" [lenet/lenet_hls.cpp:42]   --->   Operation 31 'sext' 'sext_ln42' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_2 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %select_ln42_1, i4 0)" [lenet/lenet_hls.cpp:45]   --->   Operation 32 'bitconcatenate' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln45 = zext i7 %tmp_2 to i8" [lenet/lenet_hls.cpp:45]   --->   Operation 33 'zext' 'zext_ln45' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_4 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %select_ln42_1, i1 false)" [lenet/lenet_hls.cpp:45]   --->   Operation 34 'bitconcatenate' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln45_1 = zext i4 %tmp_4 to i8" [lenet/lenet_hls.cpp:45]   --->   Operation 35 'zext' 'zext_ln45_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (1.87ns)   --->   "%sub_ln45 = sub i8 %zext_ln45, %zext_ln45_1" [lenet/lenet_hls.cpp:45]   --->   Operation 36 'sub' 'sub_ln45' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%sext_ln45 = sext i8 %sub_ln45 to i9" [lenet/lenet_hls.cpp:45]   --->   Operation 37 'sext' 'sext_ln45' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node select_ln34_1)   --->   "%shl_ln = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %h_0, i1 false)" [lenet/lenet_hls.cpp:42]   --->   Operation 38 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node select_ln34_1)   --->   "%select_ln42_2 = select i1 %icmp_ln34, i5 0, i5 %shl_ln" [lenet/lenet_hls.cpp:42]   --->   Operation 39 'select' 'select_ln42_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node and_ln42_2)   --->   "%xor_ln42 = xor i1 %icmp_ln34, true" [lenet/lenet_hls.cpp:42]   --->   Operation 40 'xor' 'xor_ln42' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (1.30ns)   --->   "%icmp_ln35 = icmp eq i4 %w_0, -2" [lenet/lenet_hls.cpp:35]   --->   Operation 41 'icmp' 'icmp_ln35' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln42_2 = and i1 %icmp_ln35, %xor_ln42" [lenet/lenet_hls.cpp:42]   --->   Operation 42 'and' 'and_ln42_2' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (1.73ns)   --->   "%h = add i4 1, %select_ln42" [lenet/lenet_hls.cpp:34]   --->   Operation 43 'add' 'h' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node select_ln34)   --->   "%or_ln34 = or i1 %and_ln42_2, %icmp_ln34" [lenet/lenet_hls.cpp:34]   --->   Operation 44 'or' 'or_ln34' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln34 = select i1 %or_ln34, i4 0, i4 %w_0" [lenet/lenet_hls.cpp:34]   --->   Operation 45 'select' 'select_ln34' <Predicate = true> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node select_ln34_1)   --->   "%shl_ln42_mid1 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %h, i1 false)" [lenet/lenet_hls.cpp:42]   --->   Operation 46 'bitconcatenate' 'shl_ln42_mid1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (1.21ns) (out node of the LUT)   --->   "%select_ln34_1 = select i1 %and_ln42_2, i5 %shl_ln42_mid1, i5 %select_ln42_2" [lenet/lenet_hls.cpp:34]   --->   Operation 47 'select' 'select_ln34_1' <Predicate = true> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (1.02ns)   --->   "%select_ln34_2 = select i1 %and_ln42_2, i4 %h, i4 %select_ln42" [lenet/lenet_hls.cpp:34]   --->   Operation 48 'select' 'select_ln34_2' <Predicate = true> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i4 %select_ln34_2 to i9" [lenet/lenet_hls.cpp:34]   --->   Operation 49 'zext' 'zext_ln34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (1.91ns)   --->   "%add_ln45 = add i9 %sext_ln45, %zext_ln34" [lenet/lenet_hls.cpp:45]   --->   Operation 50 'add' 'add_ln45' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%trunc_ln45 = trunc i9 %add_ln45 to i8" [lenet/lenet_hls.cpp:45]   --->   Operation 51 'trunc' 'trunc_ln45' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%p_shl_cast = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %trunc_ln45, i4 0)" [lenet/lenet_hls.cpp:45]   --->   Operation 52 'bitconcatenate' 'p_shl_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_10 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %add_ln45, i1 false)" [lenet/lenet_hls.cpp:45]   --->   Operation 53 'bitconcatenate' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%sext_ln45_1 = sext i10 %tmp_10 to i12" [lenet/lenet_hls.cpp:45]   --->   Operation 54 'sext' 'sext_ln45_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (1.54ns)   --->   "%sub_ln45_1 = sub i12 %p_shl_cast, %sext_ln45_1" [lenet/lenet_hls.cpp:45]   --->   Operation 55 'sub' 'sub_ln45_1' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%shl_ln42_1 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %select_ln34, i1 false)" [lenet/lenet_hls.cpp:42]   --->   Operation 56 'bitconcatenate' 'shl_ln42_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (1.76ns)   --->   "br label %.preheader" [lenet/lenet_hls.cpp:39]   --->   Operation 57 'br' <Predicate = true> <Delay = 1.76>

State 4 <SV = 3> <Delay = 6.16>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i3 [ 0, %.preheader3.preheader ], [ %add_ln39_1, %hls_label_1 ]" [lenet/lenet_hls.cpp:39]   --->   Operation 58 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%i_0 = phi i2 [ 0, %.preheader3.preheader ], [ %select_ln39_1, %hls_label_1 ]" [lenet/lenet_hls.cpp:39]   --->   Operation 59 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%max_value_1 = phi float [ 0xC26D1A94A0000000, %.preheader3.preheader ], [ %max_value, %hls_label_1 ]"   --->   Operation 60 'phi' 'max_value_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%j_0 = phi i2 [ 0, %.preheader3.preheader ], [ %j, %hls_label_1 ]"   --->   Operation 61 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (1.13ns)   --->   "%icmp_ln39 = icmp eq i3 %indvar_flatten, -4" [lenet/lenet_hls.cpp:39]   --->   Operation 62 'icmp' 'icmp_ln39' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (1.65ns)   --->   "%add_ln39_1 = add i3 %indvar_flatten, 1" [lenet/lenet_hls.cpp:39]   --->   Operation 63 'add' 'add_ln39_1' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "br i1 %icmp_ln39, label %1, label %hls_label_1" [lenet/lenet_hls.cpp:39]   --->   Operation 64 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (1.56ns)   --->   "%i = add i2 1, %i_0" [lenet/lenet_hls.cpp:39]   --->   Operation 65 'add' 'i' <Predicate = (!icmp_ln39)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 66 [1/1] (0.95ns)   --->   "%icmp_ln40 = icmp eq i2 %j_0, -2" [lenet/lenet_hls.cpp:40]   --->   Operation 66 'icmp' 'icmp_ln40' <Predicate = (!icmp_ln39)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.99ns)   --->   "%select_ln39 = select i1 %icmp_ln40, i2 0, i2 %j_0" [lenet/lenet_hls.cpp:39]   --->   Operation 67 'select' 'select_ln39' <Predicate = (!icmp_ln39)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 68 [1/1] (0.99ns)   --->   "%select_ln39_1 = select i1 %icmp_ln40, i2 %i, i2 %i_0" [lenet/lenet_hls.cpp:39]   --->   Operation 68 'select' 'select_ln39_1' <Predicate = (!icmp_ln39)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln39 = zext i2 %select_ln39_1 to i5" [lenet/lenet_hls.cpp:39]   --->   Operation 69 'zext' 'zext_ln39' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (1.78ns)   --->   "%add_ln39 = add i5 %zext_ln39, %select_ln34_1" [lenet/lenet_hls.cpp:39]   --->   Operation 70 'add' 'add_ln39' <Predicate = (!icmp_ln39)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln42_2 = zext i5 %add_ln39 to i10" [lenet/lenet_hls.cpp:42]   --->   Operation 71 'zext' 'zext_ln42_2' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (1.82ns)   --->   "%add_ln42 = add i10 %sext_ln42, %zext_ln42_2" [lenet/lenet_hls.cpp:42]   --->   Operation 72 'add' 'add_ln42' <Predicate = (!icmp_ln39)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%trunc_ln42 = trunc i10 %add_ln42 to i9" [lenet/lenet_hls.cpp:42]   --->   Operation 73 'trunc' 'trunc_ln42' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln40 = zext i2 %select_ln39 to i5" [lenet/lenet_hls.cpp:40]   --->   Operation 74 'zext' 'zext_ln40' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (1.78ns)   --->   "%add_ln42_1 = add i5 %zext_ln40, %shl_ln42_1" [lenet/lenet_hls.cpp:42]   --->   Operation 75 'add' 'add_ln42_1' <Predicate = (!icmp_ln39)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 7.09>
ST_5 : Operation 76 [1/1] (0.00ns)   --->   "%p_shl3_cast = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %trunc_ln42, i5 0)" [lenet/lenet_hls.cpp:42]   --->   Operation 76 'bitconcatenate' 'p_shl3_cast' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_11 = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %add_ln42, i2 0)" [lenet/lenet_hls.cpp:42]   --->   Operation 77 'bitconcatenate' 'tmp_11' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "%sext_ln42_1 = sext i12 %tmp_11 to i14" [lenet/lenet_hls.cpp:42]   --->   Operation 78 'sext' 'sext_ln42_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln42_1 = sub i14 %p_shl3_cast, %sext_ln42_1" [lenet/lenet_hls.cpp:42]   --->   Operation 79 'sub' 'sub_ln42_1' <Predicate = (!icmp_ln39)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.92> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln42_3 = zext i5 %add_ln42_1 to i14" [lenet/lenet_hls.cpp:42]   --->   Operation 80 'zext' 'zext_ln42_3' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (3.84ns) (root node of TernaryAdder)   --->   "%add_ln42_2 = add i14 %sub_ln42_1, %zext_ln42_3" [lenet/lenet_hls.cpp:42]   --->   Operation 81 'add' 'add_ln42_2' <Predicate = (!icmp_ln39)> <Delay = 3.84> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.92> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln42_4 = zext i14 %add_ln42_2 to i64" [lenet/lenet_hls.cpp:42]   --->   Operation 82 'zext' 'zext_ln42_4' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%input_addr = getelementptr [4704 x float]* %input_r, i64 0, i64 %zext_ln42_4" [lenet/lenet_hls.cpp:42]   --->   Operation 83 'getelementptr' 'input_addr' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_5 : Operation 84 [2/2] (3.25ns)   --->   "%input_load = load float* %input_addr, align 4" [lenet/lenet_hls.cpp:42]   --->   Operation 84 'load' 'input_load' <Predicate = (!icmp_ln39)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1176> <RAM>
ST_5 : Operation 85 [1/1] (1.56ns)   --->   "%j = add i2 1, %select_ln39" [lenet/lenet_hls.cpp:40]   --->   Operation 85 'add' 'j' <Predicate = (!icmp_ln39)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 8.68>
ST_6 : Operation 86 [1/2] (3.25ns)   --->   "%input_load = load float* %input_addr, align 4" [lenet/lenet_hls.cpp:42]   --->   Operation 86 'load' 'input_load' <Predicate = (!icmp_ln39)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1176> <RAM>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%bitcast_ln42 = bitcast float %max_value_1 to i32" [lenet/lenet_hls.cpp:42]   --->   Operation 87 'bitcast' 'bitcast_ln42' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln42, i32 23, i32 30)" [lenet/lenet_hls.cpp:42]   --->   Operation 88 'partselect' 'tmp_7' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (0.00ns)   --->   "%trunc_ln42_1 = trunc i32 %bitcast_ln42 to i23" [lenet/lenet_hls.cpp:42]   --->   Operation 89 'trunc' 'trunc_ln42_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_6 : Operation 90 [1/1] (1.55ns)   --->   "%icmp_ln42 = icmp ne i8 %tmp_7, -1" [lenet/lenet_hls.cpp:42]   --->   Operation 90 'icmp' 'icmp_ln42' <Predicate = (!icmp_ln39)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 91 [1/1] (2.44ns)   --->   "%icmp_ln42_1 = icmp eq i23 %trunc_ln42_1, 0" [lenet/lenet_hls.cpp:42]   --->   Operation 91 'icmp' 'icmp_ln42_1' <Predicate = (!icmp_ln39)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 92 [2/2] (5.43ns)   --->   "%tmp_9 = fcmp ogt float %max_value_1, %input_load" [lenet/lenet_hls.cpp:42]   --->   Operation 92 'fcmp' 'tmp_9' <Predicate = (!icmp_ln39)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.10>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 93 'speclooptripcount' 'empty' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str2)" [lenet/lenet_hls.cpp:42]   --->   Operation 94 'specregionbegin' 'tmp_3' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [lenet/lenet_hls.cpp:41]   --->   Operation 95 'specpipeline' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_7 : Operation 96 [1/1] (0.00ns)   --->   "%bitcast_ln42_1 = bitcast float %input_load to i32" [lenet/lenet_hls.cpp:42]   --->   Operation 96 'bitcast' 'bitcast_ln42_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_8 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln42_1, i32 23, i32 30)" [lenet/lenet_hls.cpp:42]   --->   Operation 97 'partselect' 'tmp_8' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_7 : Operation 98 [1/1] (0.00ns)   --->   "%trunc_ln42_2 = trunc i32 %bitcast_ln42_1 to i23" [lenet/lenet_hls.cpp:42]   --->   Operation 98 'trunc' 'trunc_ln42_2' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_7 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node and_ln42_1)   --->   "%or_ln42 = or i1 %icmp_ln42_1, %icmp_ln42" [lenet/lenet_hls.cpp:42]   --->   Operation 99 'or' 'or_ln42' <Predicate = (!icmp_ln39)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 100 [1/1] (1.55ns)   --->   "%icmp_ln42_2 = icmp ne i8 %tmp_8, -1" [lenet/lenet_hls.cpp:42]   --->   Operation 100 'icmp' 'icmp_ln42_2' <Predicate = (!icmp_ln39)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 101 [1/1] (2.44ns)   --->   "%icmp_ln42_3 = icmp eq i23 %trunc_ln42_2, 0" [lenet/lenet_hls.cpp:42]   --->   Operation 101 'icmp' 'icmp_ln42_3' <Predicate = (!icmp_ln39)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node and_ln42_1)   --->   "%or_ln42_1 = or i1 %icmp_ln42_3, %icmp_ln42_2" [lenet/lenet_hls.cpp:42]   --->   Operation 102 'or' 'or_ln42_1' <Predicate = (!icmp_ln39)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node and_ln42_1)   --->   "%and_ln42 = and i1 %or_ln42, %or_ln42_1" [lenet/lenet_hls.cpp:42]   --->   Operation 103 'and' 'and_ln42' <Predicate = (!icmp_ln39)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 104 [1/2] (5.43ns)   --->   "%tmp_9 = fcmp ogt float %max_value_1, %input_load" [lenet/lenet_hls.cpp:42]   --->   Operation 104 'fcmp' 'tmp_9' <Predicate = (!icmp_ln39)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 105 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln42_1 = and i1 %and_ln42, %tmp_9" [lenet/lenet_hls.cpp:42]   --->   Operation 105 'and' 'and_ln42_1' <Predicate = (!icmp_ln39)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 106 [1/1] (0.69ns) (out node of the LUT)   --->   "%max_value = select i1 %and_ln42_1, float %max_value_1, float %input_load" [lenet/lenet_hls.cpp:42]   --->   Operation 106 'select' 'max_value' <Predicate = (!icmp_ln39)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 107 [1/1] (0.00ns)   --->   "%empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str2, i32 %tmp_3)" [lenet/lenet_hls.cpp:42]   --->   Operation 107 'specregionend' 'empty_16' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "br label %.preheader" [lenet/lenet_hls.cpp:40]   --->   Operation 108 'br' <Predicate = (!icmp_ln39)> <Delay = 0.00>

State 8 <SV = 4> <Delay = 5.43>
ST_8 : Operation 109 [2/2] (5.43ns)   --->   "%tmp_6 = fcmp ogt float %max_value_1, 0.000000e+00" [lenet/lenet_hls.cpp:44]   --->   Operation 109 'fcmp' 'tmp_6' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln45_2 = zext i4 %select_ln34 to i12" [lenet/lenet_hls.cpp:45]   --->   Operation 110 'zext' 'zext_ln45_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 111 [1/1] (1.54ns)   --->   "%add_ln45_1 = add i12 %sub_ln45_1, %zext_ln45_2" [lenet/lenet_hls.cpp:45]   --->   Operation 111 'add' 'add_ln45_1' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 112 [1/1] (1.73ns)   --->   "%w = add i4 1, %select_ln34" [lenet/lenet_hls.cpp:35]   --->   Operation 112 'add' 'w' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 113 [1/1] (1.91ns)   --->   "%add_ln34_1 = add i8 1, %indvar_flatten6" [lenet/lenet_hls.cpp:34]   --->   Operation 113 'add' 'add_ln34_1' <Predicate = (!icmp_ln34)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 114 [1/1] (1.24ns)   --->   "%select_ln34_3 = select i1 %icmp_ln34, i8 1, i8 %add_ln34_1" [lenet/lenet_hls.cpp:34]   --->   Operation 114 'select' 'select_ln34_3' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 9 <SV = 5> <Delay = 5.43>
ST_9 : Operation 115 [1/2] (5.43ns)   --->   "%tmp_6 = fcmp ogt float %max_value_1, 0.000000e+00" [lenet/lenet_hls.cpp:44]   --->   Operation 115 'fcmp' 'tmp_6' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 6> <Delay = 6.68>
ST_10 : Operation 116 [1/1] (0.00ns)   --->   "%bitcast_ln44 = bitcast float %max_value_1 to i32" [lenet/lenet_hls.cpp:44]   --->   Operation 116 'bitcast' 'bitcast_ln44' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 117 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln44, i32 23, i32 30)" [lenet/lenet_hls.cpp:44]   --->   Operation 117 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 118 [1/1] (0.00ns)   --->   "%trunc_ln44 = trunc i32 %bitcast_ln44 to i23" [lenet/lenet_hls.cpp:44]   --->   Operation 118 'trunc' 'trunc_ln44' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 119 [1/1] (1.55ns)   --->   "%icmp_ln44 = icmp ne i8 %tmp, -1" [lenet/lenet_hls.cpp:44]   --->   Operation 119 'icmp' 'icmp_ln44' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 120 [1/1] (2.44ns)   --->   "%icmp_ln44_1 = icmp eq i23 %trunc_ln44, 0" [lenet/lenet_hls.cpp:44]   --->   Operation 120 'icmp' 'icmp_ln44_1' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node select_ln44)   --->   "%or_ln44 = or i1 %icmp_ln44_1, %icmp_ln44" [lenet/lenet_hls.cpp:44]   --->   Operation 121 'or' 'or_ln44' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node select_ln44)   --->   "%and_ln44 = and i1 %or_ln44, %tmp_6" [lenet/lenet_hls.cpp:44]   --->   Operation 122 'and' 'and_ln44' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln45_3 = zext i12 %add_ln45_1 to i64" [lenet/lenet_hls.cpp:45]   --->   Operation 123 'zext' 'zext_ln45_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 124 [1/1] (0.00ns)   --->   "%output_addr = getelementptr [1176 x float]* %output_r, i64 0, i64 %zext_ln45_3" [lenet/lenet_hls.cpp:45]   --->   Operation 124 'getelementptr' 'output_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 125 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln44 = select i1 %and_ln44, float %max_value_1, float 0.000000e+00" [lenet/lenet_hls.cpp:44]   --->   Operation 125 'select' 'select_ln44' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 126 [1/1] (3.25ns)   --->   "store float %select_ln44, float* %output_addr, align 4" [lenet/lenet_hls.cpp:45]   --->   Operation 126 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1176> <RAM>
ST_10 : Operation 127 [1/1] (0.00ns)   --->   "br label %.preheader2" [lenet/lenet_hls.cpp:35]   --->   Operation 127 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten24', lenet/lenet_hls.cpp:33) with incoming values : ('add_ln33', lenet/lenet_hls.cpp:33) [5]  (1.77 ns)

 <State 2>: 1.88ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten24', lenet/lenet_hls.cpp:33) with incoming values : ('add_ln33', lenet/lenet_hls.cpp:33) [5]  (0 ns)
	'icmp' operation ('icmp_ln33', lenet/lenet_hls.cpp:33) [10]  (1.88 ns)

 <State 3>: 7.96ns
The critical path consists of the following:
	'add' operation ('c', lenet/lenet_hls.cpp:33) [14]  (1.65 ns)
	'select' operation ('select_ln42_1', lenet/lenet_hls.cpp:42) [18]  (0.98 ns)
	'sub' operation ('sub_ln45', lenet/lenet_hls.cpp:45) [29]  (1.87 ns)
	'add' operation ('add_ln45', lenet/lenet_hls.cpp:45) [43]  (1.92 ns)
	'sub' operation ('sub_ln45_1', lenet/lenet_hls.cpp:45) [48]  (1.55 ns)

 <State 4>: 6.16ns
The critical path consists of the following:
	'phi' operation ('i_0', lenet/lenet_hls.cpp:39) with incoming values : ('select_ln39_1', lenet/lenet_hls.cpp:39) [53]  (0 ns)
	'add' operation ('i', lenet/lenet_hls.cpp:39) [60]  (1.56 ns)
	'select' operation ('select_ln39_1', lenet/lenet_hls.cpp:39) [64]  (0.993 ns)
	'add' operation ('add_ln39', lenet/lenet_hls.cpp:39) [66]  (1.78 ns)
	'add' operation ('add_ln42', lenet/lenet_hls.cpp:42) [68]  (1.82 ns)

 <State 5>: 7.1ns
The critical path consists of the following:
	'sub' operation ('sub_ln42_1', lenet/lenet_hls.cpp:42) [73]  (0 ns)
	'add' operation ('add_ln42_2', lenet/lenet_hls.cpp:42) [79]  (3.84 ns)
	'getelementptr' operation ('input_addr', lenet/lenet_hls.cpp:42) [81]  (0 ns)
	'load' operation ('input_load', lenet/lenet_hls.cpp:42) on array 'input_r' [82]  (3.25 ns)

 <State 6>: 8.69ns
The critical path consists of the following:
	'load' operation ('input_load', lenet/lenet_hls.cpp:42) on array 'input_r' [82]  (3.25 ns)
	'fcmp' operation ('tmp_9', lenet/lenet_hls.cpp:42) [96]  (5.43 ns)

 <State 7>: 7.11ns
The critical path consists of the following:
	'fcmp' operation ('tmp_9', lenet/lenet_hls.cpp:42) [96]  (5.43 ns)
	'and' operation ('and_ln42_1', lenet/lenet_hls.cpp:42) [97]  (0.978 ns)
	'select' operation ('max_value', lenet/lenet_hls.cpp:42) [98]  (0.698 ns)

 <State 8>: 5.43ns
The critical path consists of the following:
	'fcmp' operation ('tmp_6', lenet/lenet_hls.cpp:44) [109]  (5.43 ns)

 <State 9>: 5.43ns
The critical path consists of the following:
	'fcmp' operation ('tmp_6', lenet/lenet_hls.cpp:44) [109]  (5.43 ns)

 <State 10>: 6.68ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln44_1', lenet/lenet_hls.cpp:44) [107]  (2.45 ns)
	'or' operation ('or_ln44', lenet/lenet_hls.cpp:44) [108]  (0 ns)
	'and' operation ('and_ln44', lenet/lenet_hls.cpp:44) [110]  (0 ns)
	'select' operation ('select_ln44', lenet/lenet_hls.cpp:44) [115]  (0.978 ns)
	'store' operation ('store_ln45', lenet/lenet_hls.cpp:45) of variable 'select_ln44', lenet/lenet_hls.cpp:44 on array 'output_r' [116]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
