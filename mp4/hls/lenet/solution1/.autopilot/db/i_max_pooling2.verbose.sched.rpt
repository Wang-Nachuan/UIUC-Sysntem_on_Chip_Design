

================================================================
== Vivado HLS Report for 'i_max_pooling2'
================================================================
* Date:           Sun Oct 30 00:20:22 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        lenet
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.685|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  21349|  21349|  21349|  21349|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+-------+-------+----------+-----------+-----------+------+----------+
        |                         |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Loop 1                 |  21348|  21348|      3558|          -|          -|     6|    no    |
        | + Loop 1.1              |   3556|   3556|       254|          -|          -|    14|    no    |
        |  ++ Loop 1.1.1          |    252|    252|        18|          -|          -|    14|    no    |
        |   +++ Loop 1.1.1.1      |     16|     16|         8|          -|          -|     2|    no    |
        |    ++++ Loop 1.1.1.1.1  |      6|      6|         3|          -|          -|     2|    no    |
        +-------------------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 4 
6 --> 7 5 
7 --> 8 
8 --> 6 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 9 [1/1] (1.76ns)   --->   "br label %.loopexit" [lenet/lenet_hls.cpp:40]   --->   Operation 9 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.91>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%c_0 = phi i3 [ 0, %0 ], [ %c, %.loopexit.loopexit ]"   --->   Operation 10 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (1.13ns)   --->   "%icmp_ln40 = icmp eq i3 %c_0, -2" [lenet/lenet_hls.cpp:40]   --->   Operation 11 'icmp' 'icmp_ln40' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)"   --->   Operation 12 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (1.65ns)   --->   "%c = add i3 %c_0, 1" [lenet/lenet_hls.cpp:40]   --->   Operation 13 'add' 'c' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "br i1 %icmp_ln40, label %2, label %.preheader3.preheader" [lenet/lenet_hls.cpp:40]   --->   Operation 14 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_6 = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %c_0, i5 0)" [lenet/lenet_hls.cpp:48]   --->   Operation 15 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln48 = zext i8 %tmp_6 to i9" [lenet/lenet_hls.cpp:48]   --->   Operation 16 'zext' 'zext_ln48' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%tmp_7 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %c_0, i2 0)" [lenet/lenet_hls.cpp:48]   --->   Operation 17 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln48_1 = zext i5 %tmp_7 to i9" [lenet/lenet_hls.cpp:48]   --->   Operation 18 'zext' 'zext_ln48_1' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (1.91ns)   --->   "%sub_ln48 = sub i9 %zext_ln48, %zext_ln48_1" [lenet/lenet_hls.cpp:48]   --->   Operation 19 'sub' 'sub_ln48' <Predicate = (!icmp_ln40)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%sext_ln48 = sext i9 %sub_ln48 to i10" [lenet/lenet_hls.cpp:48]   --->   Operation 20 'sext' 'sext_ln48' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_8 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %c_0, i4 0)" [lenet/lenet_hls.cpp:50]   --->   Operation 21 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln50 = zext i7 %tmp_8 to i8" [lenet/lenet_hls.cpp:50]   --->   Operation 22 'zext' 'zext_ln50' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%tmp_9 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %c_0, i1 false)" [lenet/lenet_hls.cpp:50]   --->   Operation 23 'bitconcatenate' 'tmp_9' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i4 %tmp_9 to i8" [lenet/lenet_hls.cpp:50]   --->   Operation 24 'zext' 'zext_ln50_1' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.87ns)   --->   "%sub_ln50 = sub i8 %zext_ln50, %zext_ln50_1" [lenet/lenet_hls.cpp:50]   --->   Operation 25 'sub' 'sub_ln50' <Predicate = (!icmp_ln40)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%sext_ln50 = sext i8 %sub_ln50 to i9" [lenet/lenet_hls.cpp:50]   --->   Operation 26 'sext' 'sext_ln50' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.76ns)   --->   "br label %.preheader3" [lenet/lenet_hls.cpp:41]   --->   Operation 27 'br' <Predicate = (!icmp_ln40)> <Delay = 1.76>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "ret void" [lenet/lenet_hls.cpp:53]   --->   Operation 28 'ret' <Predicate = (icmp_ln40)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.46>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%h_0 = phi i4 [ 0, %.preheader3.preheader ], [ %h, %.preheader3.loopexit ]"   --->   Operation 29 'phi' 'h_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (1.30ns)   --->   "%icmp_ln41 = icmp eq i4 %h_0, -2" [lenet/lenet_hls.cpp:41]   --->   Operation 30 'icmp' 'icmp_ln41' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%empty_38 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 14, i64 14, i64 14)"   --->   Operation 31 'speclooptripcount' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (1.73ns)   --->   "%h = add i4 %h_0, 1" [lenet/lenet_hls.cpp:41]   --->   Operation 32 'add' 'h' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "br i1 %icmp_ln41, label %.loopexit.loopexit, label %.preheader2.preheader" [lenet/lenet_hls.cpp:41]   --->   Operation 33 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%shl_ln = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %h_0, i1 false)" [lenet/lenet_hls.cpp:48]   --->   Operation 34 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln50_2 = zext i4 %h_0 to i9" [lenet/lenet_hls.cpp:50]   --->   Operation 35 'zext' 'zext_ln50_2' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (1.91ns)   --->   "%add_ln50 = add i9 %zext_ln50_2, %sext_ln50" [lenet/lenet_hls.cpp:50]   --->   Operation 36 'add' 'add_ln50' <Predicate = (!icmp_ln41)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln50 = trunc i9 %add_ln50 to i8" [lenet/lenet_hls.cpp:50]   --->   Operation 37 'trunc' 'trunc_ln50' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%p_shl4_cast = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %trunc_ln50, i4 0)" [lenet/lenet_hls.cpp:50]   --->   Operation 38 'bitconcatenate' 'p_shl4_cast' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_10 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %add_ln50, i1 false)" [lenet/lenet_hls.cpp:50]   --->   Operation 39 'bitconcatenate' 'tmp_10' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%sext_ln50_1 = sext i10 %tmp_10 to i12" [lenet/lenet_hls.cpp:50]   --->   Operation 40 'sext' 'sext_ln50_1' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (1.54ns)   --->   "%sub_ln50_1 = sub i12 %p_shl4_cast, %sext_ln50_1" [lenet/lenet_hls.cpp:50]   --->   Operation 41 'sub' 'sub_ln50_1' <Predicate = (!icmp_ln41)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (1.76ns)   --->   "br label %.preheader2" [lenet/lenet_hls.cpp:42]   --->   Operation 42 'br' <Predicate = (!icmp_ln41)> <Delay = 1.76>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 43 'br' <Predicate = (icmp_ln41)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.76>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%w_0 = phi i4 [ %w, %1 ], [ 0, %.preheader2.preheader ]"   --->   Operation 44 'phi' 'w_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (1.30ns)   --->   "%icmp_ln42 = icmp eq i4 %w_0, -2" [lenet/lenet_hls.cpp:42]   --->   Operation 45 'icmp' 'icmp_ln42' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%empty_39 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 14, i64 14, i64 14)"   --->   Operation 46 'speclooptripcount' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (1.73ns)   --->   "%w = add i4 %w_0, 1" [lenet/lenet_hls.cpp:42]   --->   Operation 47 'add' 'w' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "br i1 %icmp_ln42, label %.preheader3.loopexit, label %.preheader1.preheader" [lenet/lenet_hls.cpp:42]   --->   Operation 48 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%shl_ln48_1 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %w_0, i1 false)" [lenet/lenet_hls.cpp:48]   --->   Operation 49 'bitconcatenate' 'shl_ln48_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (1.76ns)   --->   "br label %.preheader1" [lenet/lenet_hls.cpp:45]   --->   Operation 50 'br' <Predicate = (!icmp_ln42)> <Delay = 1.76>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "br label %.preheader3"   --->   Operation 51 'br' <Predicate = (icmp_ln42)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 5.41>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%max_value_0 = phi float [ 0xC26D1A94A0000000, %.preheader1.preheader ], [ %max_value_1, %.preheader1.loopexit ]" [lenet/lenet_hls.cpp:48]   --->   Operation 52 'phi' 'max_value_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%i_0 = phi i2 [ 0, %.preheader1.preheader ], [ %i, %.preheader1.loopexit ]"   --->   Operation 53 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln45 = zext i2 %i_0 to i5" [lenet/lenet_hls.cpp:45]   --->   Operation 54 'zext' 'zext_ln45' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.95ns)   --->   "%icmp_ln45 = icmp eq i2 %i_0, -2" [lenet/lenet_hls.cpp:45]   --->   Operation 55 'icmp' 'icmp_ln45' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%empty_40 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 56 'speclooptripcount' 'empty_40' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (1.56ns)   --->   "%i = add i2 %i_0, 1" [lenet/lenet_hls.cpp:45]   --->   Operation 57 'add' 'i' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "br i1 %icmp_ln45, label %1, label %.preheader.preheader" [lenet/lenet_hls.cpp:45]   --->   Operation 58 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (1.78ns)   --->   "%add_ln48 = add i5 %zext_ln45, %shl_ln" [lenet/lenet_hls.cpp:48]   --->   Operation 59 'add' 'add_ln48' <Predicate = (!icmp_ln45)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln48_2 = zext i5 %add_ln48 to i10" [lenet/lenet_hls.cpp:48]   --->   Operation 60 'zext' 'zext_ln48_2' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (1.82ns)   --->   "%add_ln48_2 = add i10 %sext_ln48, %zext_ln48_2" [lenet/lenet_hls.cpp:48]   --->   Operation 61 'add' 'add_ln48_2' <Predicate = (!icmp_ln45)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%trunc_ln48 = trunc i10 %add_ln48_2 to i9" [lenet/lenet_hls.cpp:48]   --->   Operation 62 'trunc' 'trunc_ln48' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%p_shl6_cast = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %trunc_ln48, i5 0)" [lenet/lenet_hls.cpp:48]   --->   Operation 63 'bitconcatenate' 'p_shl6_cast' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_11 = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %add_ln48_2, i2 0)" [lenet/lenet_hls.cpp:48]   --->   Operation 64 'bitconcatenate' 'tmp_11' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%sext_ln48_1 = sext i12 %tmp_11 to i14" [lenet/lenet_hls.cpp:48]   --->   Operation 65 'sext' 'sext_ln48_1' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (1.81ns)   --->   "%sub_ln48_1 = sub i14 %p_shl6_cast, %sext_ln48_1" [lenet/lenet_hls.cpp:48]   --->   Operation 66 'sub' 'sub_ln48_1' <Predicate = (!icmp_ln45)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (1.76ns)   --->   "br label %.preheader" [lenet/lenet_hls.cpp:47]   --->   Operation 67 'br' <Predicate = (!icmp_ln45)> <Delay = 1.76>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln50_3 = zext i4 %w_0 to i12" [lenet/lenet_hls.cpp:50]   --->   Operation 68 'zext' 'zext_ln50_3' <Predicate = (icmp_ln45)> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (1.54ns)   --->   "%add_ln50_1 = add i12 %sub_ln50_1, %zext_ln50_3" [lenet/lenet_hls.cpp:50]   --->   Operation 69 'add' 'add_ln50_1' <Predicate = (icmp_ln45)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln50_4 = zext i12 %add_ln50_1 to i64" [lenet/lenet_hls.cpp:50]   --->   Operation 70 'zext' 'zext_ln50_4' <Predicate = (icmp_ln45)> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%output_addr = getelementptr [1176 x float]* %output_r, i64 0, i64 %zext_ln50_4" [lenet/lenet_hls.cpp:50]   --->   Operation 71 'getelementptr' 'output_addr' <Predicate = (icmp_ln45)> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (3.25ns)   --->   "store float %max_value_0, float* %output_addr, align 4" [lenet/lenet_hls.cpp:50]   --->   Operation 72 'store' <Predicate = (icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1176> <RAM>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "br label %.preheader2" [lenet/lenet_hls.cpp:42]   --->   Operation 73 'br' <Predicate = (icmp_ln45)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 6.84>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%max_value_1 = phi float [ %max_value, %._crit_edge ], [ %max_value_0, %.preheader.preheader ]"   --->   Operation 74 'phi' 'max_value_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%j_0 = phi i2 [ %j, %._crit_edge ], [ 0, %.preheader.preheader ]"   --->   Operation 75 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i2 %j_0 to i5" [lenet/lenet_hls.cpp:47]   --->   Operation 76 'zext' 'zext_ln47' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.95ns)   --->   "%icmp_ln47 = icmp eq i2 %j_0, -2" [lenet/lenet_hls.cpp:47]   --->   Operation 77 'icmp' 'icmp_ln47' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%empty_41 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 78 'speclooptripcount' 'empty_41' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (1.56ns)   --->   "%j = add i2 %j_0, 1" [lenet/lenet_hls.cpp:47]   --->   Operation 79 'add' 'j' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "br i1 %icmp_ln47, label %.preheader1.loopexit, label %._crit_edge" [lenet/lenet_hls.cpp:47]   --->   Operation 80 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (1.78ns)   --->   "%add_ln48_1 = add i5 %zext_ln47, %shl_ln48_1" [lenet/lenet_hls.cpp:48]   --->   Operation 81 'add' 'add_ln48_1' <Predicate = (!icmp_ln47)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln48_3 = zext i5 %add_ln48_1 to i14" [lenet/lenet_hls.cpp:48]   --->   Operation 82 'zext' 'zext_ln48_3' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (1.81ns)   --->   "%add_ln48_3 = add i14 %sub_ln48_1, %zext_ln48_3" [lenet/lenet_hls.cpp:48]   --->   Operation 83 'add' 'add_ln48_3' <Predicate = (!icmp_ln47)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln48_4 = zext i14 %add_ln48_3 to i64" [lenet/lenet_hls.cpp:48]   --->   Operation 84 'zext' 'zext_ln48_4' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "%input_addr = getelementptr [4704 x float]* %input_r, i64 0, i64 %zext_ln48_4" [lenet/lenet_hls.cpp:48]   --->   Operation 85 'getelementptr' 'input_addr' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 86 [2/2] (3.25ns)   --->   "%input_load = load float* %input_addr, align 4" [lenet/lenet_hls.cpp:48]   --->   Operation 86 'load' 'input_load' <Predicate = (!icmp_ln47)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1176> <RAM>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "br label %.preheader1"   --->   Operation 87 'br' <Predicate = (icmp_ln47)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 8.68>
ST_7 : Operation 88 [1/2] (3.25ns)   --->   "%input_load = load float* %input_addr, align 4" [lenet/lenet_hls.cpp:48]   --->   Operation 88 'load' 'input_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1176> <RAM>
ST_7 : Operation 89 [2/2] (5.43ns)   --->   "%tmp_1 = fcmp ogt float %max_value_1, %input_load" [lenet/lenet_hls.cpp:48]   --->   Operation 89 'fcmp' 'tmp_1' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.10>
ST_8 : Operation 90 [1/1] (0.00ns)   --->   "%bitcast_ln48 = bitcast float %max_value_1 to i32" [lenet/lenet_hls.cpp:48]   --->   Operation 90 'bitcast' 'bitcast_ln48' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln48, i32 23, i32 30)" [lenet/lenet_hls.cpp:48]   --->   Operation 91 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 92 [1/1] (0.00ns)   --->   "%trunc_ln48_1 = trunc i32 %bitcast_ln48 to i23" [lenet/lenet_hls.cpp:48]   --->   Operation 92 'trunc' 'trunc_ln48_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "%bitcast_ln48_1 = bitcast float %input_load to i32" [lenet/lenet_hls.cpp:48]   --->   Operation 93 'bitcast' 'bitcast_ln48_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln48_1, i32 23, i32 30)" [lenet/lenet_hls.cpp:48]   --->   Operation 94 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 95 [1/1] (0.00ns)   --->   "%trunc_ln48_2 = trunc i32 %bitcast_ln48_1 to i23" [lenet/lenet_hls.cpp:48]   --->   Operation 95 'trunc' 'trunc_ln48_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 96 [1/1] (1.55ns)   --->   "%icmp_ln48 = icmp ne i8 %tmp, -1" [lenet/lenet_hls.cpp:48]   --->   Operation 96 'icmp' 'icmp_ln48' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 97 [1/1] (2.44ns)   --->   "%icmp_ln48_1 = icmp eq i23 %trunc_ln48_1, 0" [lenet/lenet_hls.cpp:48]   --->   Operation 97 'icmp' 'icmp_ln48_1' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node and_ln48_1)   --->   "%or_ln48 = or i1 %icmp_ln48_1, %icmp_ln48" [lenet/lenet_hls.cpp:48]   --->   Operation 98 'or' 'or_ln48' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 99 [1/1] (1.55ns)   --->   "%icmp_ln48_2 = icmp ne i8 %tmp_s, -1" [lenet/lenet_hls.cpp:48]   --->   Operation 99 'icmp' 'icmp_ln48_2' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 100 [1/1] (2.44ns)   --->   "%icmp_ln48_3 = icmp eq i23 %trunc_ln48_2, 0" [lenet/lenet_hls.cpp:48]   --->   Operation 100 'icmp' 'icmp_ln48_3' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node and_ln48_1)   --->   "%or_ln48_1 = or i1 %icmp_ln48_3, %icmp_ln48_2" [lenet/lenet_hls.cpp:48]   --->   Operation 101 'or' 'or_ln48_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node and_ln48_1)   --->   "%and_ln48 = and i1 %or_ln48, %or_ln48_1" [lenet/lenet_hls.cpp:48]   --->   Operation 102 'and' 'and_ln48' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 103 [1/2] (5.43ns)   --->   "%tmp_1 = fcmp ogt float %max_value_1, %input_load" [lenet/lenet_hls.cpp:48]   --->   Operation 103 'fcmp' 'tmp_1' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 104 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln48_1 = and i1 %and_ln48, %tmp_1" [lenet/lenet_hls.cpp:48]   --->   Operation 104 'and' 'and_ln48_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 105 [1/1] (0.69ns) (out node of the LUT)   --->   "%max_value = select i1 %and_ln48_1, float %max_value_1, float %input_load" [lenet/lenet_hls.cpp:48]   --->   Operation 105 'select' 'max_value' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "br label %.preheader" [lenet/lenet_hls.cpp:47]   --->   Operation 106 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('c') with incoming values : ('c', lenet/lenet_hls.cpp:40) [5]  (1.77 ns)

 <State 2>: 1.92ns
The critical path consists of the following:
	'phi' operation ('c') with incoming values : ('c', lenet/lenet_hls.cpp:40) [5]  (0 ns)
	'sub' operation ('sub_ln48', lenet/lenet_hls.cpp:48) [15]  (1.92 ns)

 <State 3>: 3.46ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', lenet/lenet_hls.cpp:41) [25]  (0 ns)
	'add' operation ('add_ln50', lenet/lenet_hls.cpp:50) [33]  (1.92 ns)
	'sub' operation ('sub_ln50_1', lenet/lenet_hls.cpp:50) [38]  (1.55 ns)

 <State 4>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_value_0', lenet/lenet_hls.cpp:48) with incoming values : ('max_value', lenet/lenet_hls.cpp:48) [50]  (1.77 ns)

 <State 5>: 5.41ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', lenet/lenet_hls.cpp:45) [51]  (0 ns)
	'add' operation ('add_ln48', lenet/lenet_hls.cpp:48) [58]  (1.78 ns)
	'add' operation ('add_ln48_2', lenet/lenet_hls.cpp:48) [60]  (1.82 ns)
	'sub' operation ('sub_ln48_1', lenet/lenet_hls.cpp:48) [65]  (1.81 ns)

 <State 6>: 6.85ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', lenet/lenet_hls.cpp:47) [69]  (0 ns)
	'add' operation ('add_ln48_1', lenet/lenet_hls.cpp:48) [76]  (1.78 ns)
	'add' operation ('add_ln48_3', lenet/lenet_hls.cpp:48) [78]  (1.81 ns)
	'getelementptr' operation ('input_addr', lenet/lenet_hls.cpp:48) [80]  (0 ns)
	'load' operation ('input_load', lenet/lenet_hls.cpp:48) on array 'input_r' [81]  (3.25 ns)

 <State 7>: 8.69ns
The critical path consists of the following:
	'load' operation ('input_load', lenet/lenet_hls.cpp:48) on array 'input_r' [81]  (3.25 ns)
	'fcmp' operation ('tmp_1', lenet/lenet_hls.cpp:48) [95]  (5.43 ns)

 <State 8>: 7.11ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1', lenet/lenet_hls.cpp:48) [95]  (5.43 ns)
	'and' operation ('and_ln48_1', lenet/lenet_hls.cpp:48) [96]  (0.978 ns)
	'select' operation ('max_value', lenet/lenet_hls.cpp:48) [97]  (0.698 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
