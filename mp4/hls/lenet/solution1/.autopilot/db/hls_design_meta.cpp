#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("input_r_address0", 10, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("input_r_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("input_r_q0", 32, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("weights1_address0", 8, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("weights1_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("weights1_q0", 32, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("bias1_address0", 3, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("bias1_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("bias1_q0", 32, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("weights3_address0", 12, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("weights3_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("weights3_q0", 32, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("bias3_address0", 4, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("bias3_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("bias3_q0", 32, hls_in, 4, "ap_memory", "mem_dout", 1),
	Port_Property("weights5_address0", 16, hls_out, 5, "ap_memory", "mem_address", 1),
	Port_Property("weights5_ce0", 1, hls_out, 5, "ap_memory", "mem_ce", 1),
	Port_Property("weights5_q0", 32, hls_in, 5, "ap_memory", "mem_dout", 1),
	Port_Property("bias5_address0", 7, hls_out, 6, "ap_memory", "mem_address", 1),
	Port_Property("bias5_ce0", 1, hls_out, 6, "ap_memory", "mem_ce", 1),
	Port_Property("bias5_q0", 32, hls_in, 6, "ap_memory", "mem_dout", 1),
	Port_Property("weights6_address0", 11, hls_out, 7, "ap_memory", "mem_address", 1),
	Port_Property("weights6_ce0", 1, hls_out, 7, "ap_memory", "mem_ce", 1),
	Port_Property("weights6_q0", 32, hls_in, 7, "ap_memory", "mem_dout", 1),
	Port_Property("bias6_address0", 4, hls_out, 8, "ap_memory", "mem_address", 1),
	Port_Property("bias6_ce0", 1, hls_out, 8, "ap_memory", "mem_ce", 1),
	Port_Property("bias6_q0", 32, hls_in, 8, "ap_memory", "mem_dout", 1),
	Port_Property("output_r_address0", 4, hls_out, 9, "ap_memory", "mem_address", 1),
	Port_Property("output_r_ce0", 1, hls_out, 9, "ap_memory", "mem_ce", 1),
	Port_Property("output_r_we0", 1, hls_out, 9, "ap_memory", "mem_we", 1),
	Port_Property("output_r_d0", 32, hls_out, 9, "ap_memory", "mem_din", 1),
	Port_Property("ap_return", 32, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "lenet_top";
