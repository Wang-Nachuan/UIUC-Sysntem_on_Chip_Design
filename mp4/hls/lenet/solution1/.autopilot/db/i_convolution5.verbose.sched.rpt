

================================================================
== Vivado HLS Report for 'i_convolution5'
================================================================
* Date:           Sun Oct 30 17:24:51 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        lenet
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.806|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  242281|  242281|  242281|  242281|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+--------+--------+----------+-----------+-----------+------+----------+
        |             |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  242280|  242280|      2019|          -|          -|   120|    no    |
        | + Loop 1.1  |    2007|    2007|        13|          5|          1|   400|    yes   |
        +-------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 5, depth = 13


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 25
* Pipeline : 1
  Pipeline-0 : II = 5, D = 13, States = { 3 4 5 6 7 8 9 10 11 12 13 14 15 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 16 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 3 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 26 [1/1] (1.76ns)   --->   "br label %1" [lenet/lenet_hls.cpp:97]   --->   Operation 26 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.87>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%co_0 = phi i7 [ 0, %0 ], [ %co, %2 ]"   --->   Operation 27 'phi' 'co_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.48ns)   --->   "%icmp_ln97 = icmp eq i7 %co_0, -8" [lenet/lenet_hls.cpp:97]   --->   Operation 28 'icmp' 'icmp_ln97' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 120, i64 120, i64 120)"   --->   Operation 29 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.87ns)   --->   "%co = add i7 %co_0, 1" [lenet/lenet_hls.cpp:97]   --->   Operation 30 'add' 'co' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %icmp_ln97, label %3, label %.preheader2.preheader" [lenet/lenet_hls.cpp:97]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln104 = zext i7 %co_0 to i64" [lenet/lenet_hls.cpp:104]   --->   Operation 32 'zext' 'zext_ln104' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_9 = call i11 @_ssdm_op_BitConcatenate.i11.i7.i4(i7 %co_0, i4 0)" [lenet/lenet_hls.cpp:104]   --->   Operation 33 'bitconcatenate' 'tmp_9' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln100 = zext i11 %tmp_9 to i12" [lenet/lenet_hls.cpp:100]   --->   Operation 34 'zext' 'zext_ln100' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.76ns)   --->   "br label %.preheader" [lenet/lenet_hls.cpp:100]   --->   Operation 35 'br' <Predicate = (!icmp_ln97)> <Delay = 1.76>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "ret void" [lenet/lenet_hls.cpp:113]   --->   Operation 36 'ret' <Predicate = (icmp_ln97)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.41>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%indvar_flatten15 = phi i9 [ 0, %.preheader2.preheader ], [ %add_ln100, %hls_label_4 ]" [lenet/lenet_hls.cpp:100]   --->   Operation 37 'phi' 'indvar_flatten15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %.preheader2.preheader ], [ %select_ln104_1, %hls_label_4 ]" [lenet/lenet_hls.cpp:104]   --->   Operation 38 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i8 [ 0, %.preheader2.preheader ], [ %select_ln101, %hls_label_4 ]" [lenet/lenet_hls.cpp:101]   --->   Operation 39 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%j_0 = phi i3 [ 0, %.preheader2.preheader ], [ %select_ln104_3, %hls_label_4 ]" [lenet/lenet_hls.cpp:104]   --->   Operation 40 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%sum_2 = phi float [ 0.000000e+00, %.preheader2.preheader ], [ %sum_3, %hls_label_4 ]"   --->   Operation 41 'phi' 'sum_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%ci_0 = phi i5 [ 0, %.preheader2.preheader ], [ %ci, %hls_label_4 ]"   --->   Operation 42 'phi' 'ci_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (1.66ns)   --->   "%icmp_ln100 = icmp eq i9 %indvar_flatten15, -112" [lenet/lenet_hls.cpp:100]   --->   Operation 43 'icmp' 'icmp_ln100' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (1.82ns)   --->   "%add_ln100 = add i9 %indvar_flatten15, 1" [lenet/lenet_hls.cpp:100]   --->   Operation 44 'add' 'add_ln100' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "br i1 %icmp_ln100, label %2, label %hls_label_4" [lenet/lenet_hls.cpp:100]   --->   Operation 45 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (1.65ns)   --->   "%i = add i3 1, %i_0" [lenet/lenet_hls.cpp:100]   --->   Operation 46 'add' 'i' <Predicate = (!icmp_ln100)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (1.55ns)   --->   "%icmp_ln101 = icmp eq i8 %indvar_flatten, 80" [lenet/lenet_hls.cpp:101]   --->   Operation 47 'icmp' 'icmp_ln101' <Predicate = (!icmp_ln100)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.98ns)   --->   "%select_ln104 = select i1 %icmp_ln101, i3 0, i3 %j_0" [lenet/lenet_hls.cpp:104]   --->   Operation 48 'select' 'select_ln104' <Predicate = (!icmp_ln100)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.98ns)   --->   "%select_ln104_1 = select i1 %icmp_ln101, i3 %i, i3 %i_0" [lenet/lenet_hls.cpp:104]   --->   Operation 49 'select' 'select_ln104_1' <Predicate = (!icmp_ln100)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln104_2 = zext i3 %select_ln104_1 to i8" [lenet/lenet_hls.cpp:104]   --->   Operation 50 'zext' 'zext_ln104_2' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node and_ln104)   --->   "%xor_ln104 = xor i1 %icmp_ln101, true" [lenet/lenet_hls.cpp:104]   --->   Operation 51 'xor' 'xor_ln104' <Predicate = (!icmp_ln100)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (1.36ns)   --->   "%icmp_ln102 = icmp eq i5 %ci_0, -16" [lenet/lenet_hls.cpp:102]   --->   Operation 52 'icmp' 'icmp_ln102' <Predicate = (!icmp_ln100)> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln104 = and i1 %icmp_ln102, %xor_ln104" [lenet/lenet_hls.cpp:104]   --->   Operation 53 'and' 'and_ln104' <Predicate = (!icmp_ln100)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (1.65ns)   --->   "%j = add i3 1, %select_ln104" [lenet/lenet_hls.cpp:101]   --->   Operation 54 'add' 'j' <Predicate = (!icmp_ln100)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node select_ln104_2)   --->   "%or_ln104 = or i1 %and_ln104, %icmp_ln101" [lenet/lenet_hls.cpp:104]   --->   Operation 55 'or' 'or_ln104' <Predicate = (!icmp_ln100)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (1.21ns) (out node of the LUT)   --->   "%select_ln104_2 = select i1 %or_ln104, i5 0, i5 %ci_0" [lenet/lenet_hls.cpp:104]   --->   Operation 56 'select' 'select_ln104_2' <Predicate = (!icmp_ln100)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.98ns)   --->   "%select_ln104_3 = select i1 %and_ln104, i3 %j, i3 %select_ln104" [lenet/lenet_hls.cpp:104]   --->   Operation 57 'select' 'select_ln104_3' <Predicate = (!icmp_ln100)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln104_5 = zext i5 %select_ln104_2 to i12" [lenet/lenet_hls.cpp:104]   --->   Operation 58 'zext' 'zext_ln104_5' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln104_6 = zext i5 %select_ln104_2 to i8" [lenet/lenet_hls.cpp:104]   --->   Operation 59 'zext' 'zext_ln104_6' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_10 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %select_ln104_2, i2 0)" [lenet/lenet_hls.cpp:104]   --->   Operation 60 'bitconcatenate' 'tmp_10' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln104_7 = zext i7 %tmp_10 to i8" [lenet/lenet_hls.cpp:104]   --->   Operation 61 'zext' 'zext_ln104_7' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln104 = add i8 %zext_ln104_7, %zext_ln104_6" [lenet/lenet_hls.cpp:104]   --->   Operation 62 'add' 'add_ln104' <Predicate = (!icmp_ln100)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.96> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 63 [1/1] (3.66ns) (root node of TernaryAdder)   --->   "%add_ln104_1 = add i8 %zext_ln104_2, %add_ln104" [lenet/lenet_hls.cpp:104]   --->   Operation 63 'add' 'add_ln104_1' <Predicate = (!icmp_ln100)> <Delay = 3.66> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.96> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 64 [1/1] (1.63ns)   --->   "%add_ln104_4 = add i12 %zext_ln104_5, %zext_ln100" [lenet/lenet_hls.cpp:104]   --->   Operation 64 'add' 'add_ln104_4' <Predicate = (!icmp_ln100)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (1.78ns)   --->   "%ci = add i5 1, %select_ln104_2" [lenet/lenet_hls.cpp:102]   --->   Operation 65 'add' 'ci' <Predicate = (!icmp_ln100)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (1.91ns)   --->   "%add_ln101_1 = add i8 1, %indvar_flatten" [lenet/lenet_hls.cpp:101]   --->   Operation 66 'add' 'add_ln101_1' <Predicate = (!icmp_ln100)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 7.80>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln104_1 = zext i3 %select_ln104_1 to i64" [lenet/lenet_hls.cpp:104]   --->   Operation 67 'zext' 'zext_ln104_1' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln104_3 = zext i3 %select_ln104_3 to i17" [lenet/lenet_hls.cpp:104]   --->   Operation 68 'zext' 'zext_ln104_3' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln104_4 = zext i3 %select_ln104_3 to i10" [lenet/lenet_hls.cpp:104]   --->   Operation 69 'zext' 'zext_ln104_4' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln104_8 = zext i8 %add_ln104_1 to i10" [lenet/lenet_hls.cpp:104]   --->   Operation 70 'zext' 'zext_ln104_8' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%p_shl5_cast = call i10 @_ssdm_op_BitConcatenate.i10.i8.i2(i8 %add_ln104_1, i2 0)" [lenet/lenet_hls.cpp:104]   --->   Operation 71 'bitconcatenate' 'p_shl5_cast' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln104_2 = add i10 %p_shl5_cast, %zext_ln104_8" [lenet/lenet_hls.cpp:104]   --->   Operation 72 'add' 'add_ln104_2' <Predicate = (!icmp_ln100)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.96> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 73 [1/1] (3.72ns) (root node of TernaryAdder)   --->   "%add_ln104_3 = add i10 %zext_ln104_4, %add_ln104_2" [lenet/lenet_hls.cpp:104]   --->   Operation 73 'add' 'add_ln104_3' <Predicate = (!icmp_ln100)> <Delay = 3.72> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.96> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln104_9 = zext i10 %add_ln104_3 to i64" [lenet/lenet_hls.cpp:104]   --->   Operation 74 'zext' 'zext_ln104_9' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%input_addr = getelementptr [400 x float]* %input_r, i64 0, i64 %zext_ln104_9" [lenet/lenet_hls.cpp:104]   --->   Operation 75 'getelementptr' 'input_addr' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln104_10 = zext i12 %add_ln104_4 to i64" [lenet/lenet_hls.cpp:104]   --->   Operation 76 'zext' 'zext_ln104_10' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_12 = call i14 @_ssdm_op_BitConcatenate.i14.i12.i2(i12 %add_ln104_4, i2 0)" [lenet/lenet_hls.cpp:104]   --->   Operation 77 'bitconcatenate' 'tmp_12' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln104_11 = zext i14 %tmp_12 to i64" [lenet/lenet_hls.cpp:104]   --->   Operation 78 'zext' 'zext_ln104_11' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln104_5 = add i64 %zext_ln104_11, %zext_ln104_10" [lenet/lenet_hls.cpp:104]   --->   Operation 79 'add' 'add_ln104_5' <Predicate = (!icmp_ln100)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.96> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 80 [1/1] (3.87ns) (root node of TernaryAdder)   --->   "%add_ln104_6 = add i64 %zext_ln104_1, %add_ln104_5" [lenet/lenet_hls.cpp:104]   --->   Operation 80 'add' 'add_ln104_6' <Predicate = (!icmp_ln100)> <Delay = 3.87> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.96> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%trunc_ln104 = trunc i64 %add_ln104_6 to i17" [lenet/lenet_hls.cpp:104]   --->   Operation 81 'trunc' 'trunc_ln104' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%trunc_ln104_1 = trunc i64 %add_ln104_6 to i15" [lenet/lenet_hls.cpp:104]   --->   Operation 82 'trunc' 'trunc_ln104_1' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%p_shl_cast = call i17 @_ssdm_op_BitConcatenate.i17.i15.i2(i15 %trunc_ln104_1, i2 0)" [lenet/lenet_hls.cpp:104]   --->   Operation 83 'bitconcatenate' 'p_shl_cast' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln104_7 = add i17 %p_shl_cast, %trunc_ln104" [lenet/lenet_hls.cpp:104]   --->   Operation 84 'add' 'add_ln104_7' <Predicate = (!icmp_ln100)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.96> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 85 [1/1] (3.93ns) (root node of TernaryAdder)   --->   "%add_ln104_8 = add i17 %zext_ln104_3, %add_ln104_7" [lenet/lenet_hls.cpp:104]   --->   Operation 85 'add' 'add_ln104_8' <Predicate = (!icmp_ln100)> <Delay = 3.93> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.96> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 86 [2/2] (3.25ns)   --->   "%input_load = load float* %input_addr, align 4" [lenet/lenet_hls.cpp:104]   --->   Operation 86 'load' 'input_load' <Predicate = (!icmp_ln100)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120> <RAM>

State 5 <SV = 4> <Delay = 3.25>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln104_12 = zext i17 %add_ln104_8 to i64" [lenet/lenet_hls.cpp:104]   --->   Operation 87 'zext' 'zext_ln104_12' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (0.00ns)   --->   "%weights_addr = getelementptr [48000 x float]* %weights, i64 0, i64 %zext_ln104_12" [lenet/lenet_hls.cpp:104]   --->   Operation 88 'getelementptr' 'weights_addr' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_5 : Operation 89 [2/2] (3.25ns)   --->   "%weights_load = load float* %weights_addr, align 4" [lenet/lenet_hls.cpp:104]   --->   Operation 89 'load' 'weights_load' <Predicate = (!icmp_ln100)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120> <RAM>
ST_5 : Operation 90 [1/2] (3.25ns)   --->   "%input_load = load float* %input_addr, align 4" [lenet/lenet_hls.cpp:104]   --->   Operation 90 'load' 'input_load' <Predicate = (!icmp_ln100)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120> <RAM>

State 6 <SV = 5> <Delay = 3.25>
ST_6 : Operation 91 [1/2] (3.25ns)   --->   "%weights_load = load float* %weights_addr, align 4" [lenet/lenet_hls.cpp:104]   --->   Operation 91 'load' 'weights_load' <Predicate = (!icmp_ln100)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120> <RAM>

State 7 <SV = 6> <Delay = 5.70>
ST_7 : Operation 92 [4/4] (5.70ns)   --->   "%tmp_6 = fmul float %weights_load, %input_load" [lenet/lenet_hls.cpp:104]   --->   Operation 92 'fmul' 'tmp_6' <Predicate = (!icmp_ln100)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (1.24ns)   --->   "%select_ln101 = select i1 %icmp_ln101, i8 1, i8 %add_ln101_1" [lenet/lenet_hls.cpp:101]   --->   Operation 93 'select' 'select_ln101' <Predicate = (!icmp_ln100)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.70>
ST_8 : Operation 94 [3/4] (5.70ns)   --->   "%tmp_6 = fmul float %weights_load, %input_load" [lenet/lenet_hls.cpp:104]   --->   Operation 94 'fmul' 'tmp_6' <Predicate = (!icmp_ln100)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 5.70>
ST_9 : Operation 95 [2/4] (5.70ns)   --->   "%tmp_6 = fmul float %weights_load, %input_load" [lenet/lenet_hls.cpp:104]   --->   Operation 95 'fmul' 'tmp_6' <Predicate = (!icmp_ln100)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 5.70>
ST_10 : Operation 96 [1/4] (5.70ns)   --->   "%tmp_6 = fmul float %weights_load, %input_load" [lenet/lenet_hls.cpp:104]   --->   Operation 96 'fmul' 'tmp_6' <Predicate = (!icmp_ln100)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.25>
ST_11 : Operation 97 [5/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_6" [lenet/lenet_hls.cpp:104]   --->   Operation 97 'fadd' 'sum_3' <Predicate = (!icmp_ln100)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.25>
ST_12 : Operation 98 [4/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_6" [lenet/lenet_hls.cpp:104]   --->   Operation 98 'fadd' 'sum_3' <Predicate = (!icmp_ln100)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 7.25>
ST_13 : Operation 99 [3/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_6" [lenet/lenet_hls.cpp:104]   --->   Operation 99 'fadd' 'sum_3' <Predicate = (!icmp_ln100)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 7.25>
ST_14 : Operation 100 [2/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_6" [lenet/lenet_hls.cpp:104]   --->   Operation 100 'fadd' 'sum_3' <Predicate = (!icmp_ln100)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 7.25>
ST_15 : Operation 101 [1/1] (0.00ns)   --->   "%empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 400, i64 400, i64 400)"   --->   Operation 101 'speclooptripcount' 'empty_20' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_15 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)" [lenet/lenet_hls.cpp:104]   --->   Operation 102 'specregionbegin' 'tmp_7' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_15 : Operation 103 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [lenet/lenet_hls.cpp:103]   --->   Operation 103 'specpipeline' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_15 : Operation 104 [1/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_6" [lenet/lenet_hls.cpp:104]   --->   Operation 104 'fadd' 'sum_3' <Predicate = (!icmp_ln100)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 105 [1/1] (0.00ns)   --->   "%empty_21 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_7)" [lenet/lenet_hls.cpp:104]   --->   Operation 105 'specregionend' 'empty_21' <Predicate = (!icmp_ln100)> <Delay = 0.00>
ST_15 : Operation 106 [1/1] (0.00ns)   --->   "br label %.preheader" [lenet/lenet_hls.cpp:102]   --->   Operation 106 'br' <Predicate = (!icmp_ln100)> <Delay = 0.00>

State 16 <SV = 3> <Delay = 3.25>
ST_16 : Operation 107 [1/1] (0.00ns)   --->   "%bias_addr = getelementptr [120 x float]* %bias, i64 0, i64 %zext_ln104" [lenet/lenet_hls.cpp:107]   --->   Operation 107 'getelementptr' 'bias_addr' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 108 [2/2] (3.25ns)   --->   "%bias_load = load float* %bias_addr, align 4" [lenet/lenet_hls.cpp:107]   --->   Operation 108 'load' 'bias_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120> <RAM>

State 17 <SV = 4> <Delay = 3.25>
ST_17 : Operation 109 [1/2] (3.25ns)   --->   "%bias_load = load float* %bias_addr, align 4" [lenet/lenet_hls.cpp:107]   --->   Operation 109 'load' 'bias_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120> <RAM>

State 18 <SV = 5> <Delay = 7.25>
ST_18 : Operation 110 [5/5] (7.25ns)   --->   "%sum = fadd float %sum_2, %bias_load" [lenet/lenet_hls.cpp:107]   --->   Operation 110 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 6> <Delay = 7.25>
ST_19 : Operation 111 [4/5] (7.25ns)   --->   "%sum = fadd float %sum_2, %bias_load" [lenet/lenet_hls.cpp:107]   --->   Operation 111 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 7> <Delay = 7.25>
ST_20 : Operation 112 [3/5] (7.25ns)   --->   "%sum = fadd float %sum_2, %bias_load" [lenet/lenet_hls.cpp:107]   --->   Operation 112 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 8> <Delay = 7.25>
ST_21 : Operation 113 [2/5] (7.25ns)   --->   "%sum = fadd float %sum_2, %bias_load" [lenet/lenet_hls.cpp:107]   --->   Operation 113 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 9> <Delay = 7.25>
ST_22 : Operation 114 [1/5] (7.25ns)   --->   "%sum = fadd float %sum_2, %bias_load" [lenet/lenet_hls.cpp:107]   --->   Operation 114 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 10> <Delay = 5.43>
ST_23 : Operation 115 [2/2] (5.43ns)   --->   "%tmp_s = fcmp olt float %sum, 0.000000e+00" [lenet/lenet_hls.cpp:108]   --->   Operation 115 'fcmp' 'tmp_s' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 11> <Delay = 6.40>
ST_24 : Operation 116 [1/1] (0.00ns)   --->   "%bitcast_ln108 = bitcast float %sum to i32" [lenet/lenet_hls.cpp:108]   --->   Operation 116 'bitcast' 'bitcast_ln108' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 117 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln108, i32 23, i32 30)" [lenet/lenet_hls.cpp:108]   --->   Operation 117 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 118 [1/1] (0.00ns)   --->   "%trunc_ln108 = trunc i32 %bitcast_ln108 to i23" [lenet/lenet_hls.cpp:108]   --->   Operation 118 'trunc' 'trunc_ln108' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 119 [1/1] (1.55ns)   --->   "%icmp_ln108 = icmp ne i8 %tmp, -1" [lenet/lenet_hls.cpp:108]   --->   Operation 119 'icmp' 'icmp_ln108' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 120 [1/1] (2.44ns)   --->   "%icmp_ln108_1 = icmp eq i23 %trunc_ln108, 0" [lenet/lenet_hls.cpp:108]   --->   Operation 120 'icmp' 'icmp_ln108_1' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node sum_1)   --->   "%or_ln108 = or i1 %icmp_ln108_1, %icmp_ln108" [lenet/lenet_hls.cpp:108]   --->   Operation 121 'or' 'or_ln108' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 122 [1/2] (5.43ns)   --->   "%tmp_s = fcmp olt float %sum, 0.000000e+00" [lenet/lenet_hls.cpp:108]   --->   Operation 122 'fcmp' 'tmp_s' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node sum_1)   --->   "%and_ln108 = and i1 %or_ln108, %tmp_s" [lenet/lenet_hls.cpp:108]   --->   Operation 123 'and' 'and_ln108' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 124 [1/1] (0.97ns) (out node of the LUT)   --->   "%sum_1 = select i1 %and_ln108, float 0.000000e+00, float %sum" [lenet/lenet_hls.cpp:108]   --->   Operation 124 'select' 'sum_1' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 25 <SV = 12> <Delay = 3.25>
ST_25 : Operation 125 [1/1] (0.00ns)   --->   "%output_0_0_addr = getelementptr [120 x float]* %output_0_0, i64 0, i64 %zext_ln104" [lenet/lenet_hls.cpp:109]   --->   Operation 125 'getelementptr' 'output_0_0_addr' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 126 [1/1] (3.25ns)   --->   "store float %sum_1, float* %output_0_0_addr, align 4" [lenet/lenet_hls.cpp:109]   --->   Operation 126 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120> <RAM>
ST_25 : Operation 127 [1/1] (0.00ns)   --->   "br label %1" [lenet/lenet_hls.cpp:97]   --->   Operation 127 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('co') with incoming values : ('co', lenet/lenet_hls.cpp:97) [7]  (1.77 ns)

 <State 2>: 1.87ns
The critical path consists of the following:
	'phi' operation ('co') with incoming values : ('co', lenet/lenet_hls.cpp:97) [7]  (0 ns)
	'add' operation ('co', lenet/lenet_hls.cpp:97) [10]  (1.87 ns)

 <State 3>: 7.41ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten', lenet/lenet_hls.cpp:101) with incoming values : ('select_ln101', lenet/lenet_hls.cpp:101) [20]  (0 ns)
	'icmp' operation ('icmp_ln101', lenet/lenet_hls.cpp:101) [30]  (1.55 ns)
	'xor' operation ('xor_ln104', lenet/lenet_hls.cpp:104) [35]  (0 ns)
	'and' operation ('and_ln104', lenet/lenet_hls.cpp:104) [37]  (0.978 ns)
	'or' operation ('or_ln104', lenet/lenet_hls.cpp:104) [39]  (0 ns)
	'select' operation ('select_ln104_2', lenet/lenet_hls.cpp:104) [40]  (1.22 ns)
	'add' operation ('add_ln104', lenet/lenet_hls.cpp:104) [50]  (0 ns)
	'add' operation ('add_ln104_1', lenet/lenet_hls.cpp:104) [51]  (3.67 ns)

 <State 4>: 7.81ns
The critical path consists of the following:
	'add' operation ('add_ln104_6', lenet/lenet_hls.cpp:104) [63]  (3.87 ns)
	'add' operation ('add_ln104_7', lenet/lenet_hls.cpp:104) [67]  (0 ns)
	'add' operation ('add_ln104_8', lenet/lenet_hls.cpp:104) [68]  (3.93 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('weights_addr', lenet/lenet_hls.cpp:104) [70]  (0 ns)
	'load' operation ('weights_load', lenet/lenet_hls.cpp:104) on array 'weights' [71]  (3.25 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	'load' operation ('weights_load', lenet/lenet_hls.cpp:104) on array 'weights' [71]  (3.25 ns)

 <State 7>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_6', lenet/lenet_hls.cpp:104) [73]  (5.7 ns)

 <State 8>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_6', lenet/lenet_hls.cpp:104) [73]  (5.7 ns)

 <State 9>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_6', lenet/lenet_hls.cpp:104) [73]  (5.7 ns)

 <State 10>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_6', lenet/lenet_hls.cpp:104) [73]  (5.7 ns)

 <State 11>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:104) [74]  (7.26 ns)

 <State 12>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:104) [74]  (7.26 ns)

 <State 13>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:104) [74]  (7.26 ns)

 <State 14>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:104) [74]  (7.26 ns)

 <State 15>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:104) [74]  (7.26 ns)

 <State 16>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('bias_addr', lenet/lenet_hls.cpp:107) [81]  (0 ns)
	'load' operation ('bias_load', lenet/lenet_hls.cpp:107) on array 'bias' [82]  (3.25 ns)

 <State 17>: 3.25ns
The critical path consists of the following:
	'load' operation ('bias_load', lenet/lenet_hls.cpp:107) on array 'bias' [82]  (3.25 ns)

 <State 18>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:107) [83]  (7.26 ns)

 <State 19>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:107) [83]  (7.26 ns)

 <State 20>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:107) [83]  (7.26 ns)

 <State 21>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:107) [83]  (7.26 ns)

 <State 22>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:107) [83]  (7.26 ns)

 <State 23>: 5.43ns
The critical path consists of the following:
	'fcmp' operation ('tmp_s', lenet/lenet_hls.cpp:108) [90]  (5.43 ns)

 <State 24>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_s', lenet/lenet_hls.cpp:108) [90]  (5.43 ns)
	'and' operation ('and_ln108', lenet/lenet_hls.cpp:108) [91]  (0 ns)
	'select' operation ('sum', lenet/lenet_hls.cpp:108) [93]  (0.978 ns)

 <State 25>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('output_0_0_addr', lenet/lenet_hls.cpp:109) [92]  (0 ns)
	'store' operation ('store_ln109', lenet/lenet_hls.cpp:109) of variable 'sum', lenet/lenet_hls.cpp:108 on array 'output_0_0' [94]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
