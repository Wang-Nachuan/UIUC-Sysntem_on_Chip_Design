

================================================================
== Vivado HLS Report for 'i_convolution3'
================================================================
* Date:           Sun Oct 30 00:20:23 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        lenet
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.571|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  2990753|  2990753|  2990753|  2990753|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                             |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |          Loop Name          |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1                     |  2990752|  2990752|    186922|          -|          -|    16|    no    |
        | + Loop 1.1                  |   186920|   186920|     18692|          -|          -|    10|    no    |
        |  ++ Loop 1.1.1              |    18690|    18690|      1869|          -|          -|    10|    no    |
        |   +++ Loop 1.1.1.1          |     1860|     1860|       372|          -|          -|     5|    no    |
        |    ++++ Loop 1.1.1.1.1      |      370|      370|        74|          -|          -|     5|    no    |
        |     +++++ Loop 1.1.1.1.1.1  |       72|       72|        12|          -|          -|     6|    no    |
        +-----------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 25
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 19 6 
6 --> 7 5 
7 --> 8 6 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 7 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 26 [1/1] (1.76ns)   --->   "br label %.loopexit" [lenet/lenet_hls.cpp:68]   --->   Operation 26 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.91>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%co_0 = phi i5 [ 0, %0 ], [ %co, %.loopexit.loopexit ]"   --->   Operation 27 'phi' 'co_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.36ns)   --->   "%icmp_ln68 = icmp eq i5 %co_0, -16" [lenet/lenet_hls.cpp:68]   --->   Operation 28 'icmp' 'icmp_ln68' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 29 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.78ns)   --->   "%co = add i5 %co_0, 1" [lenet/lenet_hls.cpp:68]   --->   Operation 30 'add' 'co' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %icmp_ln68, label %3, label %.preheader4.preheader" [lenet/lenet_hls.cpp:68]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln77 = zext i5 %co_0 to i64" [lenet/lenet_hls.cpp:77]   --->   Operation 32 'zext' 'zext_ln77' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_s = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %co_0, i3 0)" [lenet/lenet_hls.cpp:77]   --->   Operation 33 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln77_2 = zext i8 %tmp_s to i9" [lenet/lenet_hls.cpp:77]   --->   Operation 34 'zext' 'zext_ln77_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_11 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %co_0, i1 false)" [lenet/lenet_hls.cpp:77]   --->   Operation 35 'bitconcatenate' 'tmp_11' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln77_3 = zext i6 %tmp_11 to i9" [lenet/lenet_hls.cpp:77]   --->   Operation 36 'zext' 'zext_ln77_3' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (1.91ns)   --->   "%sub_ln77 = sub i9 %zext_ln77_2, %zext_ln77_3" [lenet/lenet_hls.cpp:77]   --->   Operation 37 'sub' 'sub_ln77' <Predicate = (!icmp_ln68)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%sext_ln77 = sext i9 %sub_ln77 to i10" [lenet/lenet_hls.cpp:77]   --->   Operation 38 'sext' 'sext_ln77' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.91ns)   --->   "%add_ln79 = add i9 %zext_ln77_3, %zext_ln77_2" [lenet/lenet_hls.cpp:79]   --->   Operation 39 'add' 'add_ln79' <Predicate = (!icmp_ln68)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%bias_addr = getelementptr [16 x float]* %bias, i64 0, i64 %zext_ln77" [lenet/lenet_hls.cpp:79]   --->   Operation 40 'getelementptr' 'bias_addr' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (1.76ns)   --->   "br label %.preheader4" [lenet/lenet_hls.cpp:69]   --->   Operation 41 'br' <Predicate = (!icmp_ln68)> <Delay = 1.76>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "ret void" [lenet/lenet_hls.cpp:81]   --->   Operation 42 'ret' <Predicate = (icmp_ln68)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.37>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%h_0 = phi i4 [ 0, %.preheader4.preheader ], [ %h, %.preheader4.loopexit ]"   --->   Operation 43 'phi' 'h_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (1.30ns)   --->   "%icmp_ln69 = icmp eq i4 %h_0, -6" [lenet/lenet_hls.cpp:69]   --->   Operation 44 'icmp' 'icmp_ln69' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%empty_45 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 45 'speclooptripcount' 'empty_45' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (1.73ns)   --->   "%h = add i4 %h_0, 1" [lenet/lenet_hls.cpp:69]   --->   Operation 46 'add' 'h' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "br i1 %icmp_ln69, label %.loopexit.loopexit, label %.preheader3.preheader" [lenet/lenet_hls.cpp:69]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln79 = zext i4 %h_0 to i9" [lenet/lenet_hls.cpp:79]   --->   Operation 48 'zext' 'zext_ln79' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (1.82ns)   --->   "%add_ln79_1 = add i9 %zext_ln79, %add_ln79" [lenet/lenet_hls.cpp:79]   --->   Operation 49 'add' 'add_ln79_1' <Predicate = (!icmp_ln69)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%p_shl4_cast = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %add_ln79_1, i3 0)" [lenet/lenet_hls.cpp:79]   --->   Operation 50 'bitconcatenate' 'p_shl4_cast' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_13 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %add_ln79_1, i1 false)" [lenet/lenet_hls.cpp:79]   --->   Operation 51 'bitconcatenate' 'tmp_13' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln79_1 = zext i10 %tmp_13 to i12" [lenet/lenet_hls.cpp:79]   --->   Operation 52 'zext' 'zext_ln79_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (1.54ns)   --->   "%add_ln79_2 = add i12 %p_shl4_cast, %zext_ln79_1" [lenet/lenet_hls.cpp:79]   --->   Operation 53 'add' 'add_ln79_2' <Predicate = (!icmp_ln69)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (1.76ns)   --->   "br label %.preheader3" [lenet/lenet_hls.cpp:70]   --->   Operation 54 'br' <Predicate = (!icmp_ln69)> <Delay = 1.76>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 55 'br' <Predicate = (icmp_ln69)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.76>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%w_0 = phi i4 [ %w, %2 ], [ 0, %.preheader3.preheader ]"   --->   Operation 56 'phi' 'w_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (1.30ns)   --->   "%icmp_ln70 = icmp eq i4 %w_0, -6" [lenet/lenet_hls.cpp:70]   --->   Operation 57 'icmp' 'icmp_ln70' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%empty_46 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 58 'speclooptripcount' 'empty_46' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (1.73ns)   --->   "%w = add i4 %w_0, 1" [lenet/lenet_hls.cpp:70]   --->   Operation 59 'add' 'w' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "br i1 %icmp_ln70, label %.preheader4.loopexit, label %.preheader2.preheader" [lenet/lenet_hls.cpp:70]   --->   Operation 60 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (1.76ns)   --->   "br label %.preheader2" [lenet/lenet_hls.cpp:73]   --->   Operation 61 'br' <Predicate = (!icmp_ln70)> <Delay = 1.76>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "br label %.preheader4"   --->   Operation 62 'br' <Predicate = (icmp_ln70)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.32>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%sum_0 = phi float [ %sum_1, %.preheader2.loopexit ], [ 0.000000e+00, %.preheader2.preheader ]" [lenet/lenet_hls.cpp:77]   --->   Operation 63 'phi' 'sum_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%m_0 = phi i3 [ %m, %.preheader2.loopexit ], [ 0, %.preheader2.preheader ]"   --->   Operation 64 'phi' 'm_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i3 %m_0 to i4" [lenet/lenet_hls.cpp:73]   --->   Operation 65 'zext' 'zext_ln73' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (1.13ns)   --->   "%icmp_ln73 = icmp eq i3 %m_0, -3" [lenet/lenet_hls.cpp:73]   --->   Operation 66 'icmp' 'icmp_ln73' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%empty_47 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"   --->   Operation 67 'speclooptripcount' 'empty_47' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (1.65ns)   --->   "%m = add i3 %m_0, 1" [lenet/lenet_hls.cpp:73]   --->   Operation 68 'add' 'm' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "br i1 %icmp_ln73, label %2, label %.preheader1.preheader" [lenet/lenet_hls.cpp:73]   --->   Operation 69 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln77_1 = zext i3 %m_0 to i64" [lenet/lenet_hls.cpp:77]   --->   Operation 70 'zext' 'zext_ln77_1' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (1.73ns)   --->   "%add_ln77 = add i4 %zext_ln73, %h_0" [lenet/lenet_hls.cpp:77]   --->   Operation 71 'add' 'add_ln77' <Predicate = (!icmp_ln73)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln75_1 = zext i4 %add_ln77 to i9" [lenet/lenet_hls.cpp:75]   --->   Operation 72 'zext' 'zext_ln75_1' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (1.76ns)   --->   "br label %.preheader1" [lenet/lenet_hls.cpp:75]   --->   Operation 73 'br' <Predicate = (!icmp_ln73)> <Delay = 1.76>
ST_5 : Operation 74 [2/2] (2.32ns)   --->   "%bias_load = load float* %bias_addr, align 4" [lenet/lenet_hls.cpp:79]   --->   Operation 74 'load' 'bias_load' <Predicate = (icmp_ln73)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>

State 6 <SV = 5> <Delay = 1.76>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%sum_1 = phi float [ %sum_0, %.preheader1.preheader ], [ %sum_2, %.preheader1.loopexit ]" [lenet/lenet_hls.cpp:77]   --->   Operation 75 'phi' 'sum_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%n_0 = phi i3 [ 0, %.preheader1.preheader ], [ %n, %.preheader1.loopexit ]"   --->   Operation 76 'phi' 'n_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i3 %n_0 to i4" [lenet/lenet_hls.cpp:75]   --->   Operation 77 'zext' 'zext_ln75' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (1.13ns)   --->   "%icmp_ln75 = icmp eq i3 %n_0, -3" [lenet/lenet_hls.cpp:75]   --->   Operation 78 'icmp' 'icmp_ln75' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "%empty_48 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"   --->   Operation 79 'speclooptripcount' 'empty_48' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (1.65ns)   --->   "%n = add i3 %n_0, 1" [lenet/lenet_hls.cpp:75]   --->   Operation 80 'add' 'n' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "br i1 %icmp_ln75, label %.preheader2.loopexit, label %.preheader.preheader" [lenet/lenet_hls.cpp:75]   --->   Operation 81 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln77_4 = zext i3 %n_0 to i13" [lenet/lenet_hls.cpp:77]   --->   Operation 82 'zext' 'zext_ln77_4' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (1.73ns)   --->   "%add_ln77_1 = add i4 %zext_ln75, %w_0" [lenet/lenet_hls.cpp:77]   --->   Operation 83 'add' 'add_ln77_1' <Predicate = (!icmp_ln75)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i4 %add_ln77_1 to i12" [lenet/lenet_hls.cpp:76]   --->   Operation 84 'zext' 'zext_ln76' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (1.76ns)   --->   "br label %.preheader" [lenet/lenet_hls.cpp:76]   --->   Operation 85 'br' <Predicate = (!icmp_ln75)> <Delay = 1.76>
ST_6 : Operation 86 [1/1] (0.00ns)   --->   "br label %.preheader2"   --->   Operation 86 'br' <Predicate = (icmp_ln75)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 7.57>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "%sum_2 = phi float [ %sum, %1 ], [ %sum_1, %.preheader.preheader ]"   --->   Operation 87 'phi' 'sum_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%ci_0 = phi i3 [ %ci, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 88 'phi' 'ci_0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 89 [1/1] (1.13ns)   --->   "%icmp_ln76 = icmp eq i3 %ci_0, -2" [lenet/lenet_hls.cpp:76]   --->   Operation 89 'icmp' 'icmp_ln76' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 90 [1/1] (0.00ns)   --->   "%empty_49 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)"   --->   Operation 90 'speclooptripcount' 'empty_49' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 91 [1/1] (1.65ns)   --->   "%ci = add i3 %ci_0, 1" [lenet/lenet_hls.cpp:76]   --->   Operation 91 'add' 'ci' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 92 [1/1] (0.00ns)   --->   "br i1 %icmp_ln76, label %.preheader1.loopexit, label %1" [lenet/lenet_hls.cpp:76]   --->   Operation 92 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln77_5 = zext i3 %ci_0 to i10" [lenet/lenet_hls.cpp:77]   --->   Operation 93 'zext' 'zext_ln77_5' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_12 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %ci_0, i4 0)" [lenet/lenet_hls.cpp:77]   --->   Operation 94 'bitconcatenate' 'tmp_12' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln77_6 = zext i7 %tmp_12 to i8" [lenet/lenet_hls.cpp:77]   --->   Operation 95 'zext' 'zext_ln77_6' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_14 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %ci_0, i1 false)" [lenet/lenet_hls.cpp:77]   --->   Operation 96 'bitconcatenate' 'tmp_14' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln77_7 = zext i4 %tmp_14 to i8" [lenet/lenet_hls.cpp:77]   --->   Operation 97 'zext' 'zext_ln77_7' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 98 [1/1] (1.87ns)   --->   "%sub_ln77_1 = sub i8 %zext_ln77_6, %zext_ln77_7" [lenet/lenet_hls.cpp:77]   --->   Operation 98 'sub' 'sub_ln77_1' <Predicate = (!icmp_ln76)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 99 [1/1] (0.00ns)   --->   "%sext_ln77_1 = sext i8 %sub_ln77_1 to i9" [lenet/lenet_hls.cpp:77]   --->   Operation 99 'sext' 'sext_ln77_1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 100 [1/1] (1.91ns)   --->   "%add_ln77_2 = add i9 %sext_ln77_1, %zext_ln75_1" [lenet/lenet_hls.cpp:77]   --->   Operation 100 'add' 'add_ln77_2' <Predicate = (!icmp_ln76)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 101 [1/1] (0.00ns)   --->   "%trunc_ln77 = trunc i9 %add_ln77_2 to i8" [lenet/lenet_hls.cpp:77]   --->   Operation 101 'trunc' 'trunc_ln77' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 102 [1/1] (0.00ns)   --->   "%p_shl8_cast = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %trunc_ln77, i4 0)" [lenet/lenet_hls.cpp:77]   --->   Operation 102 'bitconcatenate' 'p_shl8_cast' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_15 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %add_ln77_2, i1 false)" [lenet/lenet_hls.cpp:77]   --->   Operation 103 'bitconcatenate' 'tmp_15' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 104 [1/1] (0.00ns)   --->   "%sext_ln77_2 = sext i10 %tmp_15 to i12" [lenet/lenet_hls.cpp:77]   --->   Operation 104 'sext' 'sext_ln77_2' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 105 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln77_2 = sub i12 %p_shl8_cast, %sext_ln77_2" [lenet/lenet_hls.cpp:77]   --->   Operation 105 'sub' 'sub_ln77_2' <Predicate = (!icmp_ln76)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 106 [1/1] (3.78ns) (root node of TernaryAdder)   --->   "%add_ln77_3 = add i12 %sub_ln77_2, %zext_ln76" [lenet/lenet_hls.cpp:77]   --->   Operation 106 'add' 'add_ln77_3' <Predicate = (!icmp_ln76)> <Delay = 3.78> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 107 [1/1] (1.82ns)   --->   "%add_ln77_4 = add i10 %sext_ln77, %zext_ln77_5" [lenet/lenet_hls.cpp:77]   --->   Operation 107 'add' 'add_ln77_4' <Predicate = (!icmp_ln76)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "%sext_ln77_3 = sext i10 %add_ln77_4 to i64" [lenet/lenet_hls.cpp:77]   --->   Operation 108 'sext' 'sext_ln77_3' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_16 = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %add_ln77_4, i2 0)" [lenet/lenet_hls.cpp:77]   --->   Operation 109 'bitconcatenate' 'tmp_16' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 110 [1/1] (0.00ns)   --->   "%sext_ln77_4 = sext i12 %tmp_16 to i64" [lenet/lenet_hls.cpp:77]   --->   Operation 110 'sext' 'sext_ln77_4' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 111 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln77_5 = add i64 %sext_ln77_3, %sext_ln77_4" [lenet/lenet_hls.cpp:77]   --->   Operation 111 'add' 'add_ln77_5' <Predicate = (!icmp_ln76)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 112 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln77_6 = add i64 %add_ln77_5, %zext_ln77_1" [lenet/lenet_hls.cpp:77]   --->   Operation 112 'add' 'add_ln77_6' <Predicate = (!icmp_ln76)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 113 [1/1] (0.00ns)   --->   "%trunc_ln77_1 = trunc i64 %add_ln77_6 to i13" [lenet/lenet_hls.cpp:77]   --->   Operation 113 'trunc' 'trunc_ln77_1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 114 [1/1] (0.00ns)   --->   "%trunc_ln77_2 = trunc i64 %add_ln77_6 to i11" [lenet/lenet_hls.cpp:77]   --->   Operation 114 'trunc' 'trunc_ln77_2' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_7 : Operation 115 [1/1] (0.00ns)   --->   "br label %.preheader1"   --->   Operation 115 'br' <Predicate = (icmp_ln76)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 7.06>
ST_8 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln77_8 = zext i12 %add_ln77_3 to i64" [lenet/lenet_hls.cpp:77]   --->   Operation 116 'zext' 'zext_ln77_8' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 117 [1/1] (0.00ns)   --->   "%input_addr = getelementptr [1176 x float]* %input_r, i64 0, i64 %zext_ln77_8" [lenet/lenet_hls.cpp:77]   --->   Operation 117 'getelementptr' 'input_addr' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 118 [1/1] (0.00ns)   --->   "%p_shl6_cast = call i13 @_ssdm_op_BitConcatenate.i13.i11.i2(i11 %trunc_ln77_2, i2 0)" [lenet/lenet_hls.cpp:77]   --->   Operation 118 'bitconcatenate' 'p_shl6_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 119 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln77_7 = add i13 %trunc_ln77_1, %p_shl6_cast" [lenet/lenet_hls.cpp:77]   --->   Operation 119 'add' 'add_ln77_7' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 120 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln77_8 = add i13 %add_ln77_7, %zext_ln77_4" [lenet/lenet_hls.cpp:77]   --->   Operation 120 'add' 'add_ln77_8' <Predicate = true> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln77_9 = zext i13 %add_ln77_8 to i64" [lenet/lenet_hls.cpp:77]   --->   Operation 121 'zext' 'zext_ln77_9' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 122 [1/1] (0.00ns)   --->   "%weights_addr = getelementptr [2400 x float]* %weights, i64 0, i64 %zext_ln77_9" [lenet/lenet_hls.cpp:77]   --->   Operation 122 'getelementptr' 'weights_addr' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 123 [2/2] (3.25ns)   --->   "%weights_load = load float* %weights_addr, align 4" [lenet/lenet_hls.cpp:77]   --->   Operation 123 'load' 'weights_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_8 : Operation 124 [2/2] (3.25ns)   --->   "%input_load = load float* %input_addr, align 4" [lenet/lenet_hls.cpp:77]   --->   Operation 124 'load' 'input_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>

State 9 <SV = 8> <Delay = 3.25>
ST_9 : Operation 125 [1/2] (3.25ns)   --->   "%weights_load = load float* %weights_addr, align 4" [lenet/lenet_hls.cpp:77]   --->   Operation 125 'load' 'weights_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_9 : Operation 126 [1/2] (3.25ns)   --->   "%input_load = load float* %input_addr, align 4" [lenet/lenet_hls.cpp:77]   --->   Operation 126 'load' 'input_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>

State 10 <SV = 9> <Delay = 5.70>
ST_10 : Operation 127 [4/4] (5.70ns)   --->   "%tmp_5 = fmul float %weights_load, %input_load" [lenet/lenet_hls.cpp:77]   --->   Operation 127 'fmul' 'tmp_5' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 5.70>
ST_11 : Operation 128 [3/4] (5.70ns)   --->   "%tmp_5 = fmul float %weights_load, %input_load" [lenet/lenet_hls.cpp:77]   --->   Operation 128 'fmul' 'tmp_5' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 5.70>
ST_12 : Operation 129 [2/4] (5.70ns)   --->   "%tmp_5 = fmul float %weights_load, %input_load" [lenet/lenet_hls.cpp:77]   --->   Operation 129 'fmul' 'tmp_5' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 5.70>
ST_13 : Operation 130 [1/4] (5.70ns)   --->   "%tmp_5 = fmul float %weights_load, %input_load" [lenet/lenet_hls.cpp:77]   --->   Operation 130 'fmul' 'tmp_5' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 7.25>
ST_14 : Operation 131 [5/5] (7.25ns)   --->   "%sum = fadd float %sum_2, %tmp_5" [lenet/lenet_hls.cpp:77]   --->   Operation 131 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 7.25>
ST_15 : Operation 132 [4/5] (7.25ns)   --->   "%sum = fadd float %sum_2, %tmp_5" [lenet/lenet_hls.cpp:77]   --->   Operation 132 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.25>
ST_16 : Operation 133 [3/5] (7.25ns)   --->   "%sum = fadd float %sum_2, %tmp_5" [lenet/lenet_hls.cpp:77]   --->   Operation 133 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 7.25>
ST_17 : Operation 134 [2/5] (7.25ns)   --->   "%sum = fadd float %sum_2, %tmp_5" [lenet/lenet_hls.cpp:77]   --->   Operation 134 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 7.25>
ST_18 : Operation 135 [1/5] (7.25ns)   --->   "%sum = fadd float %sum_2, %tmp_5" [lenet/lenet_hls.cpp:77]   --->   Operation 135 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 136 [1/1] (0.00ns)   --->   "br label %.preheader" [lenet/lenet_hls.cpp:76]   --->   Operation 136 'br' <Predicate = true> <Delay = 0.00>

State 19 <SV = 5> <Delay = 2.32>
ST_19 : Operation 137 [1/2] (2.32ns)   --->   "%bias_load = load float* %bias_addr, align 4" [lenet/lenet_hls.cpp:79]   --->   Operation 137 'load' 'bias_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_19 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln79_2 = zext i4 %w_0 to i12" [lenet/lenet_hls.cpp:79]   --->   Operation 138 'zext' 'zext_ln79_2' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 139 [1/1] (1.54ns)   --->   "%add_ln79_3 = add i12 %add_ln79_2, %zext_ln79_2" [lenet/lenet_hls.cpp:79]   --->   Operation 139 'add' 'add_ln79_3' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 6> <Delay = 7.25>
ST_20 : Operation 140 [5/5] (7.25ns)   --->   "%tmp = fadd float %sum_0, %bias_load" [lenet/lenet_hls.cpp:79]   --->   Operation 140 'fadd' 'tmp' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 7> <Delay = 7.25>
ST_21 : Operation 141 [4/5] (7.25ns)   --->   "%tmp = fadd float %sum_0, %bias_load" [lenet/lenet_hls.cpp:79]   --->   Operation 141 'fadd' 'tmp' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 8> <Delay = 7.25>
ST_22 : Operation 142 [3/5] (7.25ns)   --->   "%tmp = fadd float %sum_0, %bias_load" [lenet/lenet_hls.cpp:79]   --->   Operation 142 'fadd' 'tmp' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 9> <Delay = 7.25>
ST_23 : Operation 143 [2/5] (7.25ns)   --->   "%tmp = fadd float %sum_0, %bias_load" [lenet/lenet_hls.cpp:79]   --->   Operation 143 'fadd' 'tmp' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 10> <Delay = 7.25>
ST_24 : Operation 144 [1/5] (7.25ns)   --->   "%tmp = fadd float %sum_0, %bias_load" [lenet/lenet_hls.cpp:79]   --->   Operation 144 'fadd' 'tmp' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 11> <Delay = 3.25>
ST_25 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln79_3 = zext i12 %add_ln79_3 to i64" [lenet/lenet_hls.cpp:79]   --->   Operation 145 'zext' 'zext_ln79_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 146 [1/1] (0.00ns)   --->   "%output_addr = getelementptr [1600 x float]* %output_r, i64 0, i64 %zext_ln79_3" [lenet/lenet_hls.cpp:79]   --->   Operation 146 'getelementptr' 'output_addr' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 147 [1/1] (3.25ns)   --->   "store float %tmp, float* %output_addr, align 4" [lenet/lenet_hls.cpp:79]   --->   Operation 147 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_25 : Operation 148 [1/1] (0.00ns)   --->   "br label %.preheader3" [lenet/lenet_hls.cpp:70]   --->   Operation 148 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('co') with incoming values : ('co', lenet/lenet_hls.cpp:68) [7]  (1.77 ns)

 <State 2>: 1.92ns
The critical path consists of the following:
	'phi' operation ('co') with incoming values : ('co', lenet/lenet_hls.cpp:68) [7]  (0 ns)
	'sub' operation ('sub_ln77', lenet/lenet_hls.cpp:77) [18]  (1.92 ns)

 <State 3>: 3.37ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', lenet/lenet_hls.cpp:69) [24]  (0 ns)
	'add' operation ('add_ln79_1', lenet/lenet_hls.cpp:79) [31]  (1.82 ns)
	'add' operation ('add_ln79_2', lenet/lenet_hls.cpp:79) [35]  (1.55 ns)

 <State 4>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('sum_0', lenet/lenet_hls.cpp:77) with incoming values : ('sum', lenet/lenet_hls.cpp:77) [46]  (1.77 ns)

 <State 5>: 2.32ns
The critical path consists of the following:
	'load' operation ('bias_load', lenet/lenet_hls.cpp:79) on array 'bias' [118]  (2.32 ns)

 <State 6>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('sum') with incoming values : ('sum', lenet/lenet_hls.cpp:77) [72]  (1.77 ns)

 <State 7>: 7.57ns
The critical path consists of the following:
	'phi' operation ('ci') with incoming values : ('ci', lenet/lenet_hls.cpp:76) [73]  (0 ns)
	'sub' operation ('sub_ln77_1', lenet/lenet_hls.cpp:77) [84]  (1.87 ns)
	'add' operation ('add_ln77_2', lenet/lenet_hls.cpp:77) [86]  (1.92 ns)
	'sub' operation ('sub_ln77_2', lenet/lenet_hls.cpp:77) [91]  (0 ns)
	'add' operation ('add_ln77_3', lenet/lenet_hls.cpp:77) [92]  (3.79 ns)

 <State 8>: 7.07ns
The critical path consists of the following:
	'add' operation ('add_ln77_7', lenet/lenet_hls.cpp:77) [104]  (0 ns)
	'add' operation ('add_ln77_8', lenet/lenet_hls.cpp:77) [105]  (3.82 ns)
	'getelementptr' operation ('weights_addr', lenet/lenet_hls.cpp:77) [107]  (0 ns)
	'load' operation ('weights_load', lenet/lenet_hls.cpp:77) on array 'weights' [108]  (3.25 ns)

 <State 9>: 3.25ns
The critical path consists of the following:
	'load' operation ('weights_load', lenet/lenet_hls.cpp:77) on array 'weights' [108]  (3.25 ns)

 <State 10>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_5', lenet/lenet_hls.cpp:77) [110]  (5.7 ns)

 <State 11>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_5', lenet/lenet_hls.cpp:77) [110]  (5.7 ns)

 <State 12>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_5', lenet/lenet_hls.cpp:77) [110]  (5.7 ns)

 <State 13>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_5', lenet/lenet_hls.cpp:77) [110]  (5.7 ns)

 <State 14>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:77) [111]  (7.26 ns)

 <State 15>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:77) [111]  (7.26 ns)

 <State 16>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:77) [111]  (7.26 ns)

 <State 17>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:77) [111]  (7.26 ns)

 <State 18>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', lenet/lenet_hls.cpp:77) [111]  (7.26 ns)

 <State 19>: 2.32ns
The critical path consists of the following:
	'load' operation ('bias_load', lenet/lenet_hls.cpp:79) on array 'bias' [118]  (2.32 ns)

 <State 20>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', lenet/lenet_hls.cpp:79) [119]  (7.26 ns)

 <State 21>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', lenet/lenet_hls.cpp:79) [119]  (7.26 ns)

 <State 22>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', lenet/lenet_hls.cpp:79) [119]  (7.26 ns)

 <State 23>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', lenet/lenet_hls.cpp:79) [119]  (7.26 ns)

 <State 24>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp', lenet/lenet_hls.cpp:79) [119]  (7.26 ns)

 <State 25>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('output_addr', lenet/lenet_hls.cpp:79) [123]  (0 ns)
	'store' operation ('store_ln79', lenet/lenet_hls.cpp:79) of variable 'tmp', lenet/lenet_hls.cpp:79 on array 'output_r' [124]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
