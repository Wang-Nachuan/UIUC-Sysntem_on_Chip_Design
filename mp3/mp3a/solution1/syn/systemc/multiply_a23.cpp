// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "multiply_a23.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic multiply_a23::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic multiply_a23::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> multiply_a23::ap_ST_fsm_state1 = "1";
const sc_lv<16> multiply_a23::ap_ST_fsm_state2 = "10";
const sc_lv<16> multiply_a23::ap_ST_fsm_state3 = "100";
const sc_lv<16> multiply_a23::ap_ST_fsm_state4 = "1000";
const sc_lv<16> multiply_a23::ap_ST_fsm_state5 = "10000";
const sc_lv<16> multiply_a23::ap_ST_fsm_state6 = "100000";
const sc_lv<16> multiply_a23::ap_ST_fsm_state7 = "1000000";
const sc_lv<16> multiply_a23::ap_ST_fsm_state8 = "10000000";
const sc_lv<16> multiply_a23::ap_ST_fsm_state9 = "100000000";
const sc_lv<16> multiply_a23::ap_ST_fsm_state10 = "1000000000";
const sc_lv<16> multiply_a23::ap_ST_fsm_state11 = "10000000000";
const sc_lv<16> multiply_a23::ap_ST_fsm_state12 = "100000000000";
const sc_lv<16> multiply_a23::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<16> multiply_a23::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<16> multiply_a23::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<16> multiply_a23::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> multiply_a23::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> multiply_a23::ap_const_lv32_4 = "100";
const sc_lv<32> multiply_a23::ap_const_lv32_7 = "111";
const sc_lv<32> multiply_a23::ap_const_lv32_A = "1010";
const sc_lv<32> multiply_a23::ap_const_lv32_D = "1101";
const sc_lv<32> multiply_a23::ap_const_lv32_1 = "1";
const sc_lv<1> multiply_a23::ap_const_lv1_0 = "0";
const sc_lv<32> multiply_a23::ap_const_lv32_2 = "10";
const sc_lv<32> multiply_a23::ap_const_lv32_3 = "11";
const sc_lv<1> multiply_a23::ap_const_lv1_1 = "1";
const sc_lv<32> multiply_a23::ap_const_lv32_5 = "101";
const sc_lv<32> multiply_a23::ap_const_lv32_6 = "110";
const sc_lv<32> multiply_a23::ap_const_lv32_8 = "1000";
const sc_lv<32> multiply_a23::ap_const_lv32_9 = "1001";
const sc_lv<32> multiply_a23::ap_const_lv32_B = "1011";
const sc_lv<32> multiply_a23::ap_const_lv32_C = "1100";
const sc_lv<32> multiply_a23::ap_const_lv32_E = "1110";
const sc_lv<32> multiply_a23::ap_const_lv32_F = "1111";
const sc_lv<7> multiply_a23::ap_const_lv7_0 = "0000000";
const sc_lv<14> multiply_a23::ap_const_lv14_0 = "00000000000000";
const sc_lv<14> multiply_a23::ap_const_lv14_64 = "1100100";
const sc_lv<7> multiply_a23::ap_const_lv7_64 = "1100100";
const sc_lv<7> multiply_a23::ap_const_lv7_1 = "1";
const sc_lv<7> multiply_a23::ap_const_lv7_2 = "10";
const sc_lv<7> multiply_a23::ap_const_lv7_3 = "11";
const sc_lv<7> multiply_a23::ap_const_lv7_4 = "100";
const bool multiply_a23::ap_const_boolean_1 = true;

multiply_a23::multiply_a23(sc_module_name name) : sc_module(name), mVcdFile(0) {
    multiply_a23_mac_bkb_U1 = new multiply_a23_mac_bkb<1,1,7,8,7,14>("multiply_a23_mac_bkb_U1");
    multiply_a23_mac_bkb_U1->din0(grp_fu_545_p0);
    multiply_a23_mac_bkb_U1->din1(grp_fu_545_p1);
    multiply_a23_mac_bkb_U1->din2(grp_fu_545_p2);
    multiply_a23_mac_bkb_U1->dout(grp_fu_545_p3);
    multiply_a23_mac_bkb_U2 = new multiply_a23_mac_bkb<1,1,7,8,7,14>("multiply_a23_mac_bkb_U2");
    multiply_a23_mac_bkb_U2->din0(grp_fu_553_p0);
    multiply_a23_mac_bkb_U2->din1(grp_fu_553_p1);
    multiply_a23_mac_bkb_U2->din2(grp_fu_553_p2);
    multiply_a23_mac_bkb_U2->dout(grp_fu_553_p3);
    multiply_a23_mac_bkb_U3 = new multiply_a23_mac_bkb<1,1,7,8,7,14>("multiply_a23_mac_bkb_U3");
    multiply_a23_mac_bkb_U3->din0(grp_fu_561_p0);
    multiply_a23_mac_bkb_U3->din1(grp_fu_561_p1);
    multiply_a23_mac_bkb_U3->din2(grp_fu_561_p2);
    multiply_a23_mac_bkb_U3->dout(grp_fu_561_p3);
    multiply_a23_mac_bkb_U4 = new multiply_a23_mac_bkb<1,1,7,8,7,14>("multiply_a23_mac_bkb_U4");
    multiply_a23_mac_bkb_U4->din0(grp_fu_569_p0);
    multiply_a23_mac_bkb_U4->din1(grp_fu_569_p1);
    multiply_a23_mac_bkb_U4->din2(grp_fu_569_p2);
    multiply_a23_mac_bkb_U4->dout(grp_fu_569_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( zext_ln18_3_fu_381_p1 );
    sensitive << ( zext_ln18_7_fu_429_p1 );
    sensitive << ( zext_ln18_11_fu_477_p1 );
    sensitive << ( zext_ln18_15_fu_525_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_B_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( zext_ln18_4_fu_386_p1 );
    sensitive << ( zext_ln18_8_fu_434_p1 );
    sensitive << ( zext_ln18_12_fu_482_p1 );
    sensitive << ( zext_ln18_16_fu_530_p1 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_C_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( C_addr_1_reg_638 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_C_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( add_ln18_fu_390_p2 );
    sensitive << ( add_ln18_1_fu_438_p2 );
    sensitive << ( add_ln18_2_fu_486_p2 );
    sensitive << ( add_ln18_3_fu_534_p2 );

    SC_METHOD(thread_C_we0);
    sensitive << ( and_ln17_1_reg_654 );
    sensitive << ( and_ln17_2_reg_678 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( and_ln17_3_reg_702 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( and_ln17_4_reg_726 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_add_ln13_fu_539_p2);
    sensitive << ( k_0_0_reg_236 );

    SC_METHOD(thread_add_ln18_11_fu_519_p2);
    sensitive << ( phi_mul1_reg_202 );
    sensitive << ( zext_ln18_14_fu_515_p1 );

    SC_METHOD(thread_add_ln18_1_fu_438_p2);
    sensitive << ( mul_ln18_1_reg_692 );
    sensitive << ( C_load_1_reg_697 );

    SC_METHOD(thread_add_ln18_2_fu_486_p2);
    sensitive << ( mul_ln18_2_reg_716 );
    sensitive << ( C_load_2_reg_721 );

    SC_METHOD(thread_add_ln18_3_fu_534_p2);
    sensitive << ( mul_ln18_3_reg_740 );
    sensitive << ( C_load_3_reg_745 );

    SC_METHOD(thread_add_ln18_4_fu_326_p2);
    sensitive << ( zext_ln11_fu_322_p1 );
    sensitive << ( phi_mul1_reg_202 );

    SC_METHOD(thread_add_ln18_5_fu_375_p2);
    sensitive << ( phi_mul1_reg_202 );
    sensitive << ( zext_ln18_2_fu_371_p1 );

    SC_METHOD(thread_add_ln18_7_fu_423_p2);
    sensitive << ( phi_mul1_reg_202 );
    sensitive << ( zext_ln18_6_fu_419_p1 );

    SC_METHOD(thread_add_ln18_9_fu_471_p2);
    sensitive << ( phi_mul1_reg_202 );
    sensitive << ( zext_ln18_10_fu_467_p1 );

    SC_METHOD(thread_add_ln18_fu_390_p2);
    sensitive << ( mul_ln18_reg_668 );
    sensitive << ( C_load_reg_673 );

    SC_METHOD(thread_add_ln4_fu_268_p2);
    sensitive << ( phi_mul1_reg_202 );

    SC_METHOD(thread_add_ln8_fu_300_p2);
    sensitive << ( phi_mul_reg_225 );

    SC_METHOD(thread_and_ln17_1_fu_362_p2);
    sensitive << ( and_ln17_reg_643 );
    sensitive << ( icmp_ln17_2_fu_357_p2 );

    SC_METHOD(thread_and_ln17_2_fu_410_p2);
    sensitive << ( and_ln17_reg_643 );
    sensitive << ( icmp_ln17_3_fu_405_p2 );

    SC_METHOD(thread_and_ln17_3_fu_458_p2);
    sensitive << ( and_ln17_reg_643 );
    sensitive << ( icmp_ln17_4_fu_453_p2 );

    SC_METHOD(thread_and_ln17_4_fu_506_p2);
    sensitive << ( and_ln17_reg_643 );
    sensitive << ( icmp_ln17_5_fu_501_p2 );

    SC_METHOD(thread_and_ln17_fu_342_p2);
    sensitive << ( icmp_ln17_reg_612 );
    sensitive << ( icmp_ln17_1_fu_337_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln4_fu_278_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln4_fu_278_p2 );

    SC_METHOD(thread_grp_fu_256_p2);
    sensitive << ( reg_248 );
    sensitive << ( reg_252 );

    SC_METHOD(thread_grp_fu_545_p0);
    sensitive << ( and_ln17_1_fu_362_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln13_fu_351_p2 );
    sensitive << ( grp_fu_545_p00 );

    SC_METHOD(thread_grp_fu_545_p00);
    sensitive << ( k_0_0_reg_236 );

    SC_METHOD(thread_grp_fu_545_p1);
    sensitive << ( and_ln17_1_fu_362_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln13_fu_351_p2 );

    SC_METHOD(thread_grp_fu_545_p2);
    sensitive << ( zext_ln11_reg_630 );
    sensitive << ( and_ln17_1_fu_362_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln13_fu_351_p2 );

    SC_METHOD(thread_grp_fu_553_p0);
    sensitive << ( and_ln17_2_fu_410_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_fu_553_p00 );

    SC_METHOD(thread_grp_fu_553_p00);
    sensitive << ( or_ln13_fu_395_p2 );

    SC_METHOD(thread_grp_fu_553_p1);
    sensitive << ( and_ln17_2_fu_410_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_553_p2);
    sensitive << ( zext_ln11_reg_630 );
    sensitive << ( and_ln17_2_fu_410_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_561_p0);
    sensitive << ( and_ln17_3_fu_458_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_fu_561_p00 );

    SC_METHOD(thread_grp_fu_561_p00);
    sensitive << ( or_ln13_1_fu_443_p2 );

    SC_METHOD(thread_grp_fu_561_p1);
    sensitive << ( and_ln17_3_fu_458_p2 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_561_p2);
    sensitive << ( zext_ln11_reg_630 );
    sensitive << ( and_ln17_3_fu_458_p2 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_569_p0);
    sensitive << ( and_ln17_4_fu_506_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( grp_fu_569_p00 );

    SC_METHOD(thread_grp_fu_569_p00);
    sensitive << ( or_ln13_2_fu_491_p2 );

    SC_METHOD(thread_grp_fu_569_p1);
    sensitive << ( and_ln17_4_fu_506_p2 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_569_p2);
    sensitive << ( zext_ln11_reg_630 );
    sensitive << ( and_ln17_4_fu_506_p2 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_i_fu_284_p2);
    sensitive << ( i_0_reg_191 );

    SC_METHOD(thread_icmp_ln13_fu_351_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_0_reg_236 );

    SC_METHOD(thread_icmp_ln17_1_fu_337_p2);
    sensitive << ( nC );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln8_fu_310_p2 );
    sensitive << ( zext_ln8_fu_306_p1 );

    SC_METHOD(thread_icmp_ln17_2_fu_357_p2);
    sensitive << ( nA );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln13_fu_351_p2 );
    sensitive << ( k_0_0_cast_fu_347_p1 );

    SC_METHOD(thread_icmp_ln17_3_fu_405_p2);
    sensitive << ( nA );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln13_fu_401_p1 );

    SC_METHOD(thread_icmp_ln17_4_fu_453_p2);
    sensitive << ( nA );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln13_1_fu_449_p1 );

    SC_METHOD(thread_icmp_ln17_5_fu_501_p2);
    sensitive << ( nA );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( zext_ln13_2_fu_497_p1 );

    SC_METHOD(thread_icmp_ln17_fu_290_p2);
    sensitive << ( mC );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln4_fu_278_p2 );
    sensitive << ( zext_ln4_fu_274_p1 );

    SC_METHOD(thread_icmp_ln4_fu_278_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_191 );

    SC_METHOD(thread_icmp_ln8_fu_310_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_214 );

    SC_METHOD(thread_j_fu_316_p2);
    sensitive << ( j_0_reg_214 );

    SC_METHOD(thread_k_0_0_cast_fu_347_p1);
    sensitive << ( k_0_0_reg_236 );

    SC_METHOD(thread_or_ln13_1_fu_443_p2);
    sensitive << ( k_0_0_reg_236 );

    SC_METHOD(thread_or_ln13_2_fu_491_p2);
    sensitive << ( k_0_0_reg_236 );

    SC_METHOD(thread_or_ln13_fu_395_p2);
    sensitive << ( k_0_0_reg_236 );

    SC_METHOD(thread_zext_ln11_fu_322_p1);
    sensitive << ( j_0_reg_214 );

    SC_METHOD(thread_zext_ln13_1_fu_449_p1);
    sensitive << ( or_ln13_1_fu_443_p2 );

    SC_METHOD(thread_zext_ln13_2_fu_497_p1);
    sensitive << ( or_ln13_2_fu_491_p2 );

    SC_METHOD(thread_zext_ln13_fu_401_p1);
    sensitive << ( or_ln13_fu_395_p2 );

    SC_METHOD(thread_zext_ln18_10_fu_467_p1);
    sensitive << ( or_ln13_1_fu_443_p2 );

    SC_METHOD(thread_zext_ln18_11_fu_477_p1);
    sensitive << ( add_ln18_9_fu_471_p2 );

    SC_METHOD(thread_zext_ln18_12_fu_482_p1);
    sensitive << ( grp_fu_561_p3 );

    SC_METHOD(thread_zext_ln18_14_fu_515_p1);
    sensitive << ( or_ln13_2_fu_491_p2 );

    SC_METHOD(thread_zext_ln18_15_fu_525_p1);
    sensitive << ( add_ln18_11_fu_519_p2 );

    SC_METHOD(thread_zext_ln18_16_fu_530_p1);
    sensitive << ( grp_fu_569_p3 );

    SC_METHOD(thread_zext_ln18_2_fu_371_p1);
    sensitive << ( k_0_0_reg_236 );

    SC_METHOD(thread_zext_ln18_3_fu_381_p1);
    sensitive << ( add_ln18_5_fu_375_p2 );

    SC_METHOD(thread_zext_ln18_4_fu_386_p1);
    sensitive << ( grp_fu_545_p3 );

    SC_METHOD(thread_zext_ln18_6_fu_419_p1);
    sensitive << ( or_ln13_fu_395_p2 );

    SC_METHOD(thread_zext_ln18_7_fu_429_p1);
    sensitive << ( add_ln18_7_fu_423_p2 );

    SC_METHOD(thread_zext_ln18_8_fu_434_p1);
    sensitive << ( grp_fu_553_p3 );

    SC_METHOD(thread_zext_ln18_fu_332_p1);
    sensitive << ( add_ln18_4_fu_326_p2 );

    SC_METHOD(thread_zext_ln4_fu_274_p1);
    sensitive << ( i_0_reg_191 );

    SC_METHOD(thread_zext_ln8_fu_306_p1);
    sensitive << ( j_0_reg_214 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln4_fu_278_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln8_fu_310_p2 );
    sensitive << ( and_ln17_1_fu_362_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln13_fu_351_p2 );
    sensitive << ( and_ln17_2_fu_410_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( and_ln17_3_fu_458_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( and_ln17_4_fu_506_p2 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "multiply_a23_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
    sc_trace(mVcdFile, C_address0, "(port)C_address0");
    sc_trace(mVcdFile, C_ce0, "(port)C_ce0");
    sc_trace(mVcdFile, C_we0, "(port)C_we0");
    sc_trace(mVcdFile, C_d0, "(port)C_d0");
    sc_trace(mVcdFile, C_q0, "(port)C_q0");
    sc_trace(mVcdFile, mA, "(port)mA");
    sc_trace(mVcdFile, nA, "(port)nA");
    sc_trace(mVcdFile, mB, "(port)mB");
    sc_trace(mVcdFile, nB, "(port)nB");
    sc_trace(mVcdFile, mC, "(port)mC");
    sc_trace(mVcdFile, nC, "(port)nC");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_248, "reg_248");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, reg_252, "reg_252");
    sc_trace(mVcdFile, add_ln4_fu_268_p2, "add_ln4_fu_268_p2");
    sc_trace(mVcdFile, add_ln4_reg_595, "add_ln4_reg_595");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_284_p2, "i_fu_284_p2");
    sc_trace(mVcdFile, i_reg_603, "i_reg_603");
    sc_trace(mVcdFile, icmp_ln4_fu_278_p2, "icmp_ln4_fu_278_p2");
    sc_trace(mVcdFile, icmp_ln17_fu_290_p2, "icmp_ln17_fu_290_p2");
    sc_trace(mVcdFile, icmp_ln17_reg_612, "icmp_ln17_reg_612");
    sc_trace(mVcdFile, add_ln8_fu_300_p2, "add_ln8_fu_300_p2");
    sc_trace(mVcdFile, add_ln8_reg_617, "add_ln8_reg_617");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_fu_316_p2, "j_fu_316_p2");
    sc_trace(mVcdFile, j_reg_625, "j_reg_625");
    sc_trace(mVcdFile, zext_ln11_fu_322_p1, "zext_ln11_fu_322_p1");
    sc_trace(mVcdFile, zext_ln11_reg_630, "zext_ln11_reg_630");
    sc_trace(mVcdFile, icmp_ln8_fu_310_p2, "icmp_ln8_fu_310_p2");
    sc_trace(mVcdFile, C_addr_1_reg_638, "C_addr_1_reg_638");
    sc_trace(mVcdFile, and_ln17_fu_342_p2, "and_ln17_fu_342_p2");
    sc_trace(mVcdFile, and_ln17_reg_643, "and_ln17_reg_643");
    sc_trace(mVcdFile, and_ln17_1_fu_362_p2, "and_ln17_1_fu_362_p2");
    sc_trace(mVcdFile, and_ln17_1_reg_654, "and_ln17_1_reg_654");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln13_fu_351_p2, "icmp_ln13_fu_351_p2");
    sc_trace(mVcdFile, grp_fu_256_p2, "grp_fu_256_p2");
    sc_trace(mVcdFile, mul_ln18_reg_668, "mul_ln18_reg_668");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, C_load_reg_673, "C_load_reg_673");
    sc_trace(mVcdFile, and_ln17_2_fu_410_p2, "and_ln17_2_fu_410_p2");
    sc_trace(mVcdFile, and_ln17_2_reg_678, "and_ln17_2_reg_678");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, mul_ln18_1_reg_692, "mul_ln18_1_reg_692");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, C_load_1_reg_697, "C_load_1_reg_697");
    sc_trace(mVcdFile, and_ln17_3_fu_458_p2, "and_ln17_3_fu_458_p2");
    sc_trace(mVcdFile, and_ln17_3_reg_702, "and_ln17_3_reg_702");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, mul_ln18_2_reg_716, "mul_ln18_2_reg_716");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, C_load_2_reg_721, "C_load_2_reg_721");
    sc_trace(mVcdFile, and_ln17_4_fu_506_p2, "and_ln17_4_fu_506_p2");
    sc_trace(mVcdFile, and_ln17_4_reg_726, "and_ln17_4_reg_726");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, mul_ln18_3_reg_740, "mul_ln18_3_reg_740");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, C_load_3_reg_745, "C_load_3_reg_745");
    sc_trace(mVcdFile, add_ln13_fu_539_p2, "add_ln13_fu_539_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, i_0_reg_191, "i_0_reg_191");
    sc_trace(mVcdFile, phi_mul1_reg_202, "phi_mul1_reg_202");
    sc_trace(mVcdFile, j_0_reg_214, "j_0_reg_214");
    sc_trace(mVcdFile, phi_mul_reg_225, "phi_mul_reg_225");
    sc_trace(mVcdFile, k_0_0_reg_236, "k_0_0_reg_236");
    sc_trace(mVcdFile, zext_ln18_fu_332_p1, "zext_ln18_fu_332_p1");
    sc_trace(mVcdFile, zext_ln18_3_fu_381_p1, "zext_ln18_3_fu_381_p1");
    sc_trace(mVcdFile, zext_ln18_4_fu_386_p1, "zext_ln18_4_fu_386_p1");
    sc_trace(mVcdFile, zext_ln18_7_fu_429_p1, "zext_ln18_7_fu_429_p1");
    sc_trace(mVcdFile, zext_ln18_8_fu_434_p1, "zext_ln18_8_fu_434_p1");
    sc_trace(mVcdFile, zext_ln18_11_fu_477_p1, "zext_ln18_11_fu_477_p1");
    sc_trace(mVcdFile, zext_ln18_12_fu_482_p1, "zext_ln18_12_fu_482_p1");
    sc_trace(mVcdFile, zext_ln18_15_fu_525_p1, "zext_ln18_15_fu_525_p1");
    sc_trace(mVcdFile, zext_ln18_16_fu_530_p1, "zext_ln18_16_fu_530_p1");
    sc_trace(mVcdFile, add_ln18_fu_390_p2, "add_ln18_fu_390_p2");
    sc_trace(mVcdFile, add_ln18_1_fu_438_p2, "add_ln18_1_fu_438_p2");
    sc_trace(mVcdFile, add_ln18_2_fu_486_p2, "add_ln18_2_fu_486_p2");
    sc_trace(mVcdFile, add_ln18_3_fu_534_p2, "add_ln18_3_fu_534_p2");
    sc_trace(mVcdFile, zext_ln4_fu_274_p1, "zext_ln4_fu_274_p1");
    sc_trace(mVcdFile, add_ln18_4_fu_326_p2, "add_ln18_4_fu_326_p2");
    sc_trace(mVcdFile, zext_ln8_fu_306_p1, "zext_ln8_fu_306_p1");
    sc_trace(mVcdFile, icmp_ln17_1_fu_337_p2, "icmp_ln17_1_fu_337_p2");
    sc_trace(mVcdFile, k_0_0_cast_fu_347_p1, "k_0_0_cast_fu_347_p1");
    sc_trace(mVcdFile, icmp_ln17_2_fu_357_p2, "icmp_ln17_2_fu_357_p2");
    sc_trace(mVcdFile, zext_ln18_2_fu_371_p1, "zext_ln18_2_fu_371_p1");
    sc_trace(mVcdFile, add_ln18_5_fu_375_p2, "add_ln18_5_fu_375_p2");
    sc_trace(mVcdFile, grp_fu_545_p3, "grp_fu_545_p3");
    sc_trace(mVcdFile, or_ln13_fu_395_p2, "or_ln13_fu_395_p2");
    sc_trace(mVcdFile, zext_ln13_fu_401_p1, "zext_ln13_fu_401_p1");
    sc_trace(mVcdFile, icmp_ln17_3_fu_405_p2, "icmp_ln17_3_fu_405_p2");
    sc_trace(mVcdFile, zext_ln18_6_fu_419_p1, "zext_ln18_6_fu_419_p1");
    sc_trace(mVcdFile, add_ln18_7_fu_423_p2, "add_ln18_7_fu_423_p2");
    sc_trace(mVcdFile, grp_fu_553_p3, "grp_fu_553_p3");
    sc_trace(mVcdFile, or_ln13_1_fu_443_p2, "or_ln13_1_fu_443_p2");
    sc_trace(mVcdFile, zext_ln13_1_fu_449_p1, "zext_ln13_1_fu_449_p1");
    sc_trace(mVcdFile, icmp_ln17_4_fu_453_p2, "icmp_ln17_4_fu_453_p2");
    sc_trace(mVcdFile, zext_ln18_10_fu_467_p1, "zext_ln18_10_fu_467_p1");
    sc_trace(mVcdFile, add_ln18_9_fu_471_p2, "add_ln18_9_fu_471_p2");
    sc_trace(mVcdFile, grp_fu_561_p3, "grp_fu_561_p3");
    sc_trace(mVcdFile, or_ln13_2_fu_491_p2, "or_ln13_2_fu_491_p2");
    sc_trace(mVcdFile, zext_ln13_2_fu_497_p1, "zext_ln13_2_fu_497_p1");
    sc_trace(mVcdFile, icmp_ln17_5_fu_501_p2, "icmp_ln17_5_fu_501_p2");
    sc_trace(mVcdFile, zext_ln18_14_fu_515_p1, "zext_ln18_14_fu_515_p1");
    sc_trace(mVcdFile, add_ln18_11_fu_519_p2, "add_ln18_11_fu_519_p2");
    sc_trace(mVcdFile, grp_fu_569_p3, "grp_fu_569_p3");
    sc_trace(mVcdFile, grp_fu_545_p0, "grp_fu_545_p0");
    sc_trace(mVcdFile, grp_fu_545_p1, "grp_fu_545_p1");
    sc_trace(mVcdFile, grp_fu_545_p2, "grp_fu_545_p2");
    sc_trace(mVcdFile, grp_fu_553_p0, "grp_fu_553_p0");
    sc_trace(mVcdFile, grp_fu_553_p1, "grp_fu_553_p1");
    sc_trace(mVcdFile, grp_fu_553_p2, "grp_fu_553_p2");
    sc_trace(mVcdFile, grp_fu_561_p0, "grp_fu_561_p0");
    sc_trace(mVcdFile, grp_fu_561_p1, "grp_fu_561_p1");
    sc_trace(mVcdFile, grp_fu_561_p2, "grp_fu_561_p2");
    sc_trace(mVcdFile, grp_fu_569_p0, "grp_fu_569_p0");
    sc_trace(mVcdFile, grp_fu_569_p1, "grp_fu_569_p1");
    sc_trace(mVcdFile, grp_fu_569_p2, "grp_fu_569_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_545_p00, "grp_fu_545_p00");
    sc_trace(mVcdFile, grp_fu_553_p00, "grp_fu_553_p00");
    sc_trace(mVcdFile, grp_fu_561_p00, "grp_fu_561_p00");
    sc_trace(mVcdFile, grp_fu_569_p00, "grp_fu_569_p00");
#endif

    }
    mHdltvinHandle.open("multiply_a23.hdltvin.dat");
    mHdltvoutHandle.open("multiply_a23.hdltvout.dat");
}

multiply_a23::~multiply_a23() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete multiply_a23_mac_bkb_U1;
    delete multiply_a23_mac_bkb_U2;
    delete multiply_a23_mac_bkb_U3;
    delete multiply_a23_mac_bkb_U4;
}

void multiply_a23::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln8_fu_310_p2.read(), ap_const_lv1_1))) {
        i_0_reg_191 = i_reg_603.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_191 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_351_p2.read(), ap_const_lv1_1))) {
        j_0_reg_214 = j_reg_625.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln4_fu_278_p2.read(), ap_const_lv1_0))) {
        j_0_reg_214 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        k_0_0_reg_236 = add_ln13_fu_539_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_fu_310_p2.read()))) {
        k_0_0_reg_236 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln8_fu_310_p2.read(), ap_const_lv1_1))) {
        phi_mul1_reg_202 = add_ln4_reg_595.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul1_reg_202 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_351_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_225 = add_ln8_reg_617.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln4_fu_278_p2.read(), ap_const_lv1_0))) {
        phi_mul_reg_225 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_fu_310_p2.read()))) {
        C_addr_1_reg_638 =  (sc_lv<14>) (zext_ln18_fu_332_p1.read());
        and_ln17_reg_643 = and_ln17_fu_342_p2.read();
        zext_ln11_reg_630 = zext_ln11_fu_322_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        C_load_1_reg_697 = C_q0.read();
        mul_ln18_1_reg_692 = grp_fu_256_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        C_load_2_reg_721 = C_q0.read();
        mul_ln18_2_reg_716 = grp_fu_256_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        C_load_3_reg_745 = C_q0.read();
        mul_ln18_3_reg_740 = grp_fu_256_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_load_reg_673 = C_q0.read();
        mul_ln18_reg_668 = grp_fu_256_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln4_reg_595 = add_ln4_fu_268_p2.read();
        i_reg_603 = i_fu_284_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        add_ln8_reg_617 = add_ln8_fu_300_p2.read();
        j_reg_625 = j_fu_316_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_351_p2.read()))) {
        and_ln17_1_reg_654 = and_ln17_1_fu_362_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        and_ln17_2_reg_678 = and_ln17_2_fu_410_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        and_ln17_3_reg_702 = and_ln17_3_fu_458_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        and_ln17_4_reg_726 = and_ln17_4_fu_506_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln4_fu_278_p2.read(), ap_const_lv1_0))) {
        icmp_ln17_reg_612 = icmp_ln17_fu_290_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        reg_248 = A_q0.read();
        reg_252 = B_q0.read();
    }
}

void multiply_a23::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        A_address0 =  (sc_lv<14>) (zext_ln18_15_fu_525_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        A_address0 =  (sc_lv<14>) (zext_ln18_11_fu_477_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        A_address0 =  (sc_lv<14>) (zext_ln18_7_fu_429_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_address0 =  (sc_lv<14>) (zext_ln18_3_fu_381_p1.read());
    } else {
        A_address0 = "XXXXXXXXXXXXXX";
    }
}

void multiply_a23::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void multiply_a23::thread_B_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        B_address0 =  (sc_lv<14>) (zext_ln18_16_fu_530_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        B_address0 =  (sc_lv<14>) (zext_ln18_12_fu_482_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        B_address0 =  (sc_lv<14>) (zext_ln18_8_fu_434_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        B_address0 =  (sc_lv<14>) (zext_ln18_4_fu_386_p1.read());
    } else {
        B_address0 = "XXXXXXXXXXXXXX";
    }
}

void multiply_a23::thread_B_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void multiply_a23::thread_C_address0() {
    C_address0 = C_addr_1_reg_638.read();
}

void multiply_a23::thread_C_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void multiply_a23::thread_C_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        C_d0 = add_ln18_3_fu_534_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        C_d0 = add_ln18_2_fu_486_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        C_d0 = add_ln18_1_fu_438_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        C_d0 = add_ln18_fu_390_p2.read();
    } else {
        C_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void multiply_a23::thread_C_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(and_ln17_1_reg_654.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln17_2_reg_678.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln17_3_reg_702.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln17_4_reg_726.read())))) {
        C_we0 = ap_const_logic_1;
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void multiply_a23::thread_add_ln13_fu_539_p2() {
    add_ln13_fu_539_p2 = (!k_0_0_reg_236.read().is_01() || !ap_const_lv7_4.is_01())? sc_lv<7>(): (sc_biguint<7>(k_0_0_reg_236.read()) + sc_biguint<7>(ap_const_lv7_4));
}

void multiply_a23::thread_add_ln18_11_fu_519_p2() {
    add_ln18_11_fu_519_p2 = (!phi_mul1_reg_202.read().is_01() || !zext_ln18_14_fu_515_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_202.read()) + sc_biguint<14>(zext_ln18_14_fu_515_p1.read()));
}

void multiply_a23::thread_add_ln18_1_fu_438_p2() {
    add_ln18_1_fu_438_p2 = (!mul_ln18_1_reg_692.read().is_01() || !C_load_1_reg_697.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln18_1_reg_692.read()) + sc_biguint<32>(C_load_1_reg_697.read()));
}

void multiply_a23::thread_add_ln18_2_fu_486_p2() {
    add_ln18_2_fu_486_p2 = (!mul_ln18_2_reg_716.read().is_01() || !C_load_2_reg_721.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln18_2_reg_716.read()) + sc_biguint<32>(C_load_2_reg_721.read()));
}

void multiply_a23::thread_add_ln18_3_fu_534_p2() {
    add_ln18_3_fu_534_p2 = (!mul_ln18_3_reg_740.read().is_01() || !C_load_3_reg_745.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln18_3_reg_740.read()) + sc_biguint<32>(C_load_3_reg_745.read()));
}

void multiply_a23::thread_add_ln18_4_fu_326_p2() {
    add_ln18_4_fu_326_p2 = (!phi_mul1_reg_202.read().is_01() || !zext_ln11_fu_322_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_202.read()) + sc_biguint<14>(zext_ln11_fu_322_p1.read()));
}

void multiply_a23::thread_add_ln18_5_fu_375_p2() {
    add_ln18_5_fu_375_p2 = (!phi_mul1_reg_202.read().is_01() || !zext_ln18_2_fu_371_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_202.read()) + sc_biguint<14>(zext_ln18_2_fu_371_p1.read()));
}

void multiply_a23::thread_add_ln18_7_fu_423_p2() {
    add_ln18_7_fu_423_p2 = (!phi_mul1_reg_202.read().is_01() || !zext_ln18_6_fu_419_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_202.read()) + sc_biguint<14>(zext_ln18_6_fu_419_p1.read()));
}

void multiply_a23::thread_add_ln18_9_fu_471_p2() {
    add_ln18_9_fu_471_p2 = (!phi_mul1_reg_202.read().is_01() || !zext_ln18_10_fu_467_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_202.read()) + sc_biguint<14>(zext_ln18_10_fu_467_p1.read()));
}

void multiply_a23::thread_add_ln18_fu_390_p2() {
    add_ln18_fu_390_p2 = (!mul_ln18_reg_668.read().is_01() || !C_load_reg_673.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln18_reg_668.read()) + sc_biguint<32>(C_load_reg_673.read()));
}

void multiply_a23::thread_add_ln4_fu_268_p2() {
    add_ln4_fu_268_p2 = (!phi_mul1_reg_202.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_202.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void multiply_a23::thread_add_ln8_fu_300_p2() {
    add_ln8_fu_300_p2 = (!phi_mul_reg_225.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_225.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void multiply_a23::thread_and_ln17_1_fu_362_p2() {
    and_ln17_1_fu_362_p2 = (and_ln17_reg_643.read() & icmp_ln17_2_fu_357_p2.read());
}

void multiply_a23::thread_and_ln17_2_fu_410_p2() {
    and_ln17_2_fu_410_p2 = (and_ln17_reg_643.read() & icmp_ln17_3_fu_405_p2.read());
}

void multiply_a23::thread_and_ln17_3_fu_458_p2() {
    and_ln17_3_fu_458_p2 = (and_ln17_reg_643.read() & icmp_ln17_4_fu_453_p2.read());
}

void multiply_a23::thread_and_ln17_4_fu_506_p2() {
    and_ln17_4_fu_506_p2 = (and_ln17_reg_643.read() & icmp_ln17_5_fu_501_p2.read());
}

void multiply_a23::thread_and_ln17_fu_342_p2() {
    and_ln17_fu_342_p2 = (icmp_ln17_reg_612.read() & icmp_ln17_1_fu_337_p2.read());
}

void multiply_a23::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void multiply_a23::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void multiply_a23::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void multiply_a23::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void multiply_a23::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void multiply_a23::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void multiply_a23::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void multiply_a23::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void multiply_a23::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void multiply_a23::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void multiply_a23::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void multiply_a23::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void multiply_a23::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void multiply_a23::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void multiply_a23::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void multiply_a23::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void multiply_a23::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln4_fu_278_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void multiply_a23::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void multiply_a23::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln4_fu_278_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void multiply_a23::thread_grp_fu_256_p2() {
    grp_fu_256_p2 = (!reg_252.read().is_01() || !reg_248.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_252.read()) * sc_bigint<32>(reg_248.read());
}

void multiply_a23::thread_grp_fu_545_p0() {
    grp_fu_545_p0 =  (sc_lv<7>) (grp_fu_545_p00.read());
}

void multiply_a23::thread_grp_fu_545_p00() {
    grp_fu_545_p00 = esl_zext<14,7>(k_0_0_reg_236.read());
}

void multiply_a23::thread_grp_fu_545_p1() {
    grp_fu_545_p1 =  (sc_lv<8>) (ap_const_lv14_64);
}

void multiply_a23::thread_grp_fu_545_p2() {
    grp_fu_545_p2 =  (sc_lv<7>) (zext_ln11_reg_630.read());
}

void multiply_a23::thread_grp_fu_553_p0() {
    grp_fu_553_p0 =  (sc_lv<7>) (grp_fu_553_p00.read());
}

void multiply_a23::thread_grp_fu_553_p00() {
    grp_fu_553_p00 = esl_zext<14,7>(or_ln13_fu_395_p2.read());
}

void multiply_a23::thread_grp_fu_553_p1() {
    grp_fu_553_p1 =  (sc_lv<8>) (ap_const_lv14_64);
}

void multiply_a23::thread_grp_fu_553_p2() {
    grp_fu_553_p2 =  (sc_lv<7>) (zext_ln11_reg_630.read());
}

void multiply_a23::thread_grp_fu_561_p0() {
    grp_fu_561_p0 =  (sc_lv<7>) (grp_fu_561_p00.read());
}

void multiply_a23::thread_grp_fu_561_p00() {
    grp_fu_561_p00 = esl_zext<14,7>(or_ln13_1_fu_443_p2.read());
}

void multiply_a23::thread_grp_fu_561_p1() {
    grp_fu_561_p1 =  (sc_lv<8>) (ap_const_lv14_64);
}

void multiply_a23::thread_grp_fu_561_p2() {
    grp_fu_561_p2 =  (sc_lv<7>) (zext_ln11_reg_630.read());
}

void multiply_a23::thread_grp_fu_569_p0() {
    grp_fu_569_p0 =  (sc_lv<7>) (grp_fu_569_p00.read());
}

void multiply_a23::thread_grp_fu_569_p00() {
    grp_fu_569_p00 = esl_zext<14,7>(or_ln13_2_fu_491_p2.read());
}

void multiply_a23::thread_grp_fu_569_p1() {
    grp_fu_569_p1 =  (sc_lv<8>) (ap_const_lv14_64);
}

void multiply_a23::thread_grp_fu_569_p2() {
    grp_fu_569_p2 =  (sc_lv<7>) (zext_ln11_reg_630.read());
}

void multiply_a23::thread_i_fu_284_p2() {
    i_fu_284_p2 = (!i_0_reg_191.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_191.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void multiply_a23::thread_icmp_ln13_fu_351_p2() {
    icmp_ln13_fu_351_p2 = (!k_0_0_reg_236.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(k_0_0_reg_236.read() == ap_const_lv7_64);
}

void multiply_a23::thread_icmp_ln17_1_fu_337_p2() {
    icmp_ln17_1_fu_337_p2 = (!zext_ln8_fu_306_p1.read().is_01() || !nC.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln8_fu_306_p1.read()) < sc_bigint<32>(nC.read()));
}

void multiply_a23::thread_icmp_ln17_2_fu_357_p2() {
    icmp_ln17_2_fu_357_p2 = (!k_0_0_cast_fu_347_p1.read().is_01() || !nA.read().is_01())? sc_lv<1>(): (sc_bigint<32>(k_0_0_cast_fu_347_p1.read()) < sc_bigint<32>(nA.read()));
}

void multiply_a23::thread_icmp_ln17_3_fu_405_p2() {
    icmp_ln17_3_fu_405_p2 = (!zext_ln13_fu_401_p1.read().is_01() || !nA.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln13_fu_401_p1.read()) < sc_bigint<32>(nA.read()));
}

void multiply_a23::thread_icmp_ln17_4_fu_453_p2() {
    icmp_ln17_4_fu_453_p2 = (!zext_ln13_1_fu_449_p1.read().is_01() || !nA.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln13_1_fu_449_p1.read()) < sc_bigint<32>(nA.read()));
}

void multiply_a23::thread_icmp_ln17_5_fu_501_p2() {
    icmp_ln17_5_fu_501_p2 = (!zext_ln13_2_fu_497_p1.read().is_01() || !nA.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln13_2_fu_497_p1.read()) < sc_bigint<32>(nA.read()));
}

void multiply_a23::thread_icmp_ln17_fu_290_p2() {
    icmp_ln17_fu_290_p2 = (!zext_ln4_fu_274_p1.read().is_01() || !mC.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln4_fu_274_p1.read()) < sc_bigint<32>(mC.read()));
}

void multiply_a23::thread_icmp_ln4_fu_278_p2() {
    icmp_ln4_fu_278_p2 = (!i_0_reg_191.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_191.read() == ap_const_lv7_64);
}

void multiply_a23::thread_icmp_ln8_fu_310_p2() {
    icmp_ln8_fu_310_p2 = (!j_0_reg_214.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_214.read() == ap_const_lv7_64);
}

void multiply_a23::thread_j_fu_316_p2() {
    j_fu_316_p2 = (!j_0_reg_214.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_214.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void multiply_a23::thread_k_0_0_cast_fu_347_p1() {
    k_0_0_cast_fu_347_p1 = esl_zext<32,7>(k_0_0_reg_236.read());
}

void multiply_a23::thread_or_ln13_1_fu_443_p2() {
    or_ln13_1_fu_443_p2 = (k_0_0_reg_236.read() | ap_const_lv7_2);
}

void multiply_a23::thread_or_ln13_2_fu_491_p2() {
    or_ln13_2_fu_491_p2 = (k_0_0_reg_236.read() | ap_const_lv7_3);
}

void multiply_a23::thread_or_ln13_fu_395_p2() {
    or_ln13_fu_395_p2 = (k_0_0_reg_236.read() | ap_const_lv7_1);
}

void multiply_a23::thread_zext_ln11_fu_322_p1() {
    zext_ln11_fu_322_p1 = esl_zext<14,7>(j_0_reg_214.read());
}

void multiply_a23::thread_zext_ln13_1_fu_449_p1() {
    zext_ln13_1_fu_449_p1 = esl_zext<32,7>(or_ln13_1_fu_443_p2.read());
}

void multiply_a23::thread_zext_ln13_2_fu_497_p1() {
    zext_ln13_2_fu_497_p1 = esl_zext<32,7>(or_ln13_2_fu_491_p2.read());
}

void multiply_a23::thread_zext_ln13_fu_401_p1() {
    zext_ln13_fu_401_p1 = esl_zext<32,7>(or_ln13_fu_395_p2.read());
}

void multiply_a23::thread_zext_ln18_10_fu_467_p1() {
    zext_ln18_10_fu_467_p1 = esl_zext<14,7>(or_ln13_1_fu_443_p2.read());
}

void multiply_a23::thread_zext_ln18_11_fu_477_p1() {
    zext_ln18_11_fu_477_p1 = esl_zext<64,14>(add_ln18_9_fu_471_p2.read());
}

void multiply_a23::thread_zext_ln18_12_fu_482_p1() {
    zext_ln18_12_fu_482_p1 = esl_zext<64,14>(grp_fu_561_p3.read());
}

void multiply_a23::thread_zext_ln18_14_fu_515_p1() {
    zext_ln18_14_fu_515_p1 = esl_zext<14,7>(or_ln13_2_fu_491_p2.read());
}

void multiply_a23::thread_zext_ln18_15_fu_525_p1() {
    zext_ln18_15_fu_525_p1 = esl_zext<64,14>(add_ln18_11_fu_519_p2.read());
}

void multiply_a23::thread_zext_ln18_16_fu_530_p1() {
    zext_ln18_16_fu_530_p1 = esl_zext<64,14>(grp_fu_569_p3.read());
}

void multiply_a23::thread_zext_ln18_2_fu_371_p1() {
    zext_ln18_2_fu_371_p1 = esl_zext<14,7>(k_0_0_reg_236.read());
}

void multiply_a23::thread_zext_ln18_3_fu_381_p1() {
    zext_ln18_3_fu_381_p1 = esl_zext<64,14>(add_ln18_5_fu_375_p2.read());
}

void multiply_a23::thread_zext_ln18_4_fu_386_p1() {
    zext_ln18_4_fu_386_p1 = esl_zext<64,14>(grp_fu_545_p3.read());
}

void multiply_a23::thread_zext_ln18_6_fu_419_p1() {
    zext_ln18_6_fu_419_p1 = esl_zext<14,7>(or_ln13_fu_395_p2.read());
}

void multiply_a23::thread_zext_ln18_7_fu_429_p1() {
    zext_ln18_7_fu_429_p1 = esl_zext<64,14>(add_ln18_7_fu_423_p2.read());
}

void multiply_a23::thread_zext_ln18_8_fu_434_p1() {
    zext_ln18_8_fu_434_p1 = esl_zext<64,14>(grp_fu_553_p3.read());
}

void multiply_a23::thread_zext_ln18_fu_332_p1() {
    zext_ln18_fu_332_p1 = esl_zext<64,14>(add_ln18_4_fu_326_p2.read());
}

void multiply_a23::thread_zext_ln4_fu_274_p1() {
    zext_ln4_fu_274_p1 = esl_zext<32,7>(i_0_reg_191.read());
}

void multiply_a23::thread_zext_ln8_fu_306_p1() {
    zext_ln8_fu_306_p1 = esl_zext<32,7>(j_0_reg_214.read());
}

void multiply_a23::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln4_fu_278_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln8_fu_310_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_351_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_351_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln17_1_fu_362_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln17_2_fu_410_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln17_3_fu_458_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln17_4_fu_506_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
            break;
    }
}

void multiply_a23::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_address0\" :  \"" << B_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_ce0\" :  \"" << B_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_q0\" :  \"" << B_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_address0\" :  \"" << C_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_ce0\" :  \"" << C_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_we0\" :  \"" << C_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_d0\" :  \"" << C_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_q0\" :  \"" << C_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mA\" :  \"" << mA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nA\" :  \"" << nA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mB\" :  \"" << mB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nB\" :  \"" << nB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mC\" :  \"" << mC.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nC\" :  \"" << nC.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

