// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _multiply_a23_HH_
#define _multiply_a23_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "multiply_a23_mac_bkb.h"

namespace ap_rtl {

struct multiply_a23 : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<14> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_in< sc_lv<32> > B_q0;
    sc_out< sc_lv<14> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<32> > C_d0;
    sc_in< sc_lv<32> > C_q0;
    sc_in< sc_lv<32> > mA;
    sc_in< sc_lv<32> > nA;
    sc_in< sc_lv<32> > mB;
    sc_in< sc_lv<32> > nB;
    sc_in< sc_lv<32> > mC;
    sc_in< sc_lv<32> > nC;


    // Module declarations
    multiply_a23(sc_module_name name);
    SC_HAS_PROCESS(multiply_a23);

    ~multiply_a23();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    multiply_a23_mac_bkb<1,1,7,8,7,14>* multiply_a23_mac_bkb_U1;
    multiply_a23_mac_bkb<1,1,7,8,7,14>* multiply_a23_mac_bkb_U2;
    multiply_a23_mac_bkb<1,1,7,8,7,14>* multiply_a23_mac_bkb_U3;
    multiply_a23_mac_bkb<1,1,7,8,7,14>* multiply_a23_mac_bkb_U4;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_221;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<32> > reg_225;
    sc_signal< sc_lv<14> > add_ln4_fu_240_p2;
    sc_signal< sc_lv<14> > add_ln4_reg_556;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > i_fu_256_p2;
    sc_signal< sc_lv<7> > i_reg_564;
    sc_signal< sc_lv<1> > icmp_ln13_fu_262_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_569;
    sc_signal< sc_lv<1> > icmp_ln4_fu_250_p2;
    sc_signal< sc_lv<7> > j_fu_277_p2;
    sc_signal< sc_lv<7> > j_reg_577;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > and_ln13_fu_288_p2;
    sc_signal< sc_lv<1> > and_ln13_reg_582;
    sc_signal< sc_lv<1> > icmp_ln8_fu_271_p2;
    sc_signal< sc_lv<14> > zext_ln14_fu_293_p1;
    sc_signal< sc_lv<14> > zext_ln14_reg_590;
    sc_signal< sc_lv<14> > C_addr_1_reg_598;
    sc_signal< sc_lv<1> > and_ln13_1_fu_323_p2;
    sc_signal< sc_lv<1> > and_ln13_1_reg_606;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln9_fu_312_p2;
    sc_signal< sc_lv<32> > grp_fu_229_p2;
    sc_signal< sc_lv<32> > mul_ln14_reg_620;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > C_load_reg_625;
    sc_signal< sc_lv<1> > and_ln13_2_fu_371_p2;
    sc_signal< sc_lv<1> > and_ln13_2_reg_630;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > mul_ln14_1_reg_644;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > C_load_1_reg_649;
    sc_signal< sc_lv<1> > and_ln13_3_fu_419_p2;
    sc_signal< sc_lv<1> > and_ln13_3_reg_654;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > mul_ln14_2_reg_668;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > C_load_2_reg_673;
    sc_signal< sc_lv<1> > and_ln13_4_fu_467_p2;
    sc_signal< sc_lv<1> > and_ln13_4_reg_678;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > mul_ln14_3_reg_692;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<32> > C_load_3_reg_697;
    sc_signal< sc_lv<7> > add_ln9_fu_500_p2;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<7> > i_0_reg_175;
    sc_signal< sc_lv<14> > phi_mul_reg_186;
    sc_signal< sc_lv<7> > j_0_reg_198;
    sc_signal< sc_lv<7> > k_0_0_reg_209;
    sc_signal< sc_lv<64> > zext_ln14_1_fu_303_p1;
    sc_signal< sc_lv<64> > zext_ln14_4_fu_342_p1;
    sc_signal< sc_lv<64> > zext_ln14_5_fu_347_p1;
    sc_signal< sc_lv<64> > zext_ln14_8_fu_390_p1;
    sc_signal< sc_lv<64> > zext_ln14_9_fu_395_p1;
    sc_signal< sc_lv<64> > zext_ln14_12_fu_438_p1;
    sc_signal< sc_lv<64> > zext_ln14_13_fu_443_p1;
    sc_signal< sc_lv<64> > zext_ln14_16_fu_486_p1;
    sc_signal< sc_lv<64> > zext_ln14_17_fu_491_p1;
    sc_signal< sc_lv<32> > add_ln14_fu_351_p2;
    sc_signal< sc_lv<32> > add_ln14_1_fu_399_p2;
    sc_signal< sc_lv<32> > add_ln14_2_fu_447_p2;
    sc_signal< sc_lv<32> > add_ln14_3_fu_495_p2;
    sc_signal< sc_lv<32> > zext_ln4_fu_246_p1;
    sc_signal< sc_lv<32> > zext_ln8_fu_267_p1;
    sc_signal< sc_lv<1> > icmp_ln13_1_fu_283_p2;
    sc_signal< sc_lv<14> > add_ln14_4_fu_297_p2;
    sc_signal< sc_lv<32> > k_0_0_cast_fu_308_p1;
    sc_signal< sc_lv<1> > icmp_ln13_2_fu_318_p2;
    sc_signal< sc_lv<14> > zext_ln14_3_fu_332_p1;
    sc_signal< sc_lv<14> > add_ln14_5_fu_336_p2;
    sc_signal< sc_lv<14> > grp_fu_506_p3;
    sc_signal< sc_lv<7> > or_ln9_fu_356_p2;
    sc_signal< sc_lv<32> > zext_ln9_fu_362_p1;
    sc_signal< sc_lv<1> > icmp_ln13_3_fu_366_p2;
    sc_signal< sc_lv<14> > zext_ln14_7_fu_380_p1;
    sc_signal< sc_lv<14> > add_ln14_7_fu_384_p2;
    sc_signal< sc_lv<14> > grp_fu_514_p3;
    sc_signal< sc_lv<7> > or_ln9_1_fu_404_p2;
    sc_signal< sc_lv<32> > zext_ln9_1_fu_410_p1;
    sc_signal< sc_lv<1> > icmp_ln13_4_fu_414_p2;
    sc_signal< sc_lv<14> > zext_ln14_11_fu_428_p1;
    sc_signal< sc_lv<14> > add_ln14_9_fu_432_p2;
    sc_signal< sc_lv<14> > grp_fu_522_p3;
    sc_signal< sc_lv<7> > or_ln9_2_fu_452_p2;
    sc_signal< sc_lv<32> > zext_ln9_2_fu_458_p1;
    sc_signal< sc_lv<1> > icmp_ln13_5_fu_462_p2;
    sc_signal< sc_lv<14> > zext_ln14_15_fu_476_p1;
    sc_signal< sc_lv<14> > add_ln14_11_fu_480_p2;
    sc_signal< sc_lv<14> > grp_fu_530_p3;
    sc_signal< sc_lv<7> > grp_fu_506_p0;
    sc_signal< sc_lv<8> > grp_fu_506_p1;
    sc_signal< sc_lv<7> > grp_fu_506_p2;
    sc_signal< sc_lv<7> > grp_fu_514_p0;
    sc_signal< sc_lv<8> > grp_fu_514_p1;
    sc_signal< sc_lv<7> > grp_fu_514_p2;
    sc_signal< sc_lv<7> > grp_fu_522_p0;
    sc_signal< sc_lv<8> > grp_fu_522_p1;
    sc_signal< sc_lv<7> > grp_fu_522_p2;
    sc_signal< sc_lv<7> > grp_fu_530_p0;
    sc_signal< sc_lv<8> > grp_fu_530_p1;
    sc_signal< sc_lv<7> > grp_fu_530_p2;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    sc_signal< sc_lv<14> > grp_fu_506_p00;
    sc_signal< sc_lv<14> > grp_fu_514_p00;
    sc_signal< sc_lv<14> > grp_fu_522_p00;
    sc_signal< sc_lv<14> > grp_fu_530_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_state9;
    static const sc_lv<16> ap_ST_fsm_state10;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_state15;
    static const sc_lv<16> ap_ST_fsm_state16;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<14> ap_const_lv14_64;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_2;
    static const sc_lv<7> ap_const_lv7_3;
    static const sc_lv<7> ap_const_lv7_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_C_address0();
    void thread_C_ce0();
    void thread_C_d0();
    void thread_C_we0();
    void thread_add_ln14_11_fu_480_p2();
    void thread_add_ln14_1_fu_399_p2();
    void thread_add_ln14_2_fu_447_p2();
    void thread_add_ln14_3_fu_495_p2();
    void thread_add_ln14_4_fu_297_p2();
    void thread_add_ln14_5_fu_336_p2();
    void thread_add_ln14_7_fu_384_p2();
    void thread_add_ln14_9_fu_432_p2();
    void thread_add_ln14_fu_351_p2();
    void thread_add_ln4_fu_240_p2();
    void thread_add_ln9_fu_500_p2();
    void thread_and_ln13_1_fu_323_p2();
    void thread_and_ln13_2_fu_371_p2();
    void thread_and_ln13_3_fu_419_p2();
    void thread_and_ln13_4_fu_467_p2();
    void thread_and_ln13_fu_288_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_229_p2();
    void thread_grp_fu_506_p0();
    void thread_grp_fu_506_p00();
    void thread_grp_fu_506_p1();
    void thread_grp_fu_506_p2();
    void thread_grp_fu_514_p0();
    void thread_grp_fu_514_p00();
    void thread_grp_fu_514_p1();
    void thread_grp_fu_514_p2();
    void thread_grp_fu_522_p0();
    void thread_grp_fu_522_p00();
    void thread_grp_fu_522_p1();
    void thread_grp_fu_522_p2();
    void thread_grp_fu_530_p0();
    void thread_grp_fu_530_p00();
    void thread_grp_fu_530_p1();
    void thread_grp_fu_530_p2();
    void thread_i_fu_256_p2();
    void thread_icmp_ln13_1_fu_283_p2();
    void thread_icmp_ln13_2_fu_318_p2();
    void thread_icmp_ln13_3_fu_366_p2();
    void thread_icmp_ln13_4_fu_414_p2();
    void thread_icmp_ln13_5_fu_462_p2();
    void thread_icmp_ln13_fu_262_p2();
    void thread_icmp_ln4_fu_250_p2();
    void thread_icmp_ln8_fu_271_p2();
    void thread_icmp_ln9_fu_312_p2();
    void thread_j_fu_277_p2();
    void thread_k_0_0_cast_fu_308_p1();
    void thread_or_ln9_1_fu_404_p2();
    void thread_or_ln9_2_fu_452_p2();
    void thread_or_ln9_fu_356_p2();
    void thread_zext_ln14_11_fu_428_p1();
    void thread_zext_ln14_12_fu_438_p1();
    void thread_zext_ln14_13_fu_443_p1();
    void thread_zext_ln14_15_fu_476_p1();
    void thread_zext_ln14_16_fu_486_p1();
    void thread_zext_ln14_17_fu_491_p1();
    void thread_zext_ln14_1_fu_303_p1();
    void thread_zext_ln14_3_fu_332_p1();
    void thread_zext_ln14_4_fu_342_p1();
    void thread_zext_ln14_5_fu_347_p1();
    void thread_zext_ln14_7_fu_380_p1();
    void thread_zext_ln14_8_fu_390_p1();
    void thread_zext_ln14_9_fu_395_p1();
    void thread_zext_ln14_fu_293_p1();
    void thread_zext_ln4_fu_246_p1();
    void thread_zext_ln8_fu_267_p1();
    void thread_zext_ln9_1_fu_410_p1();
    void thread_zext_ln9_2_fu_458_p1();
    void thread_zext_ln9_fu_362_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
