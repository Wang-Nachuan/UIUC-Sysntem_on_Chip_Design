

================================================================
== Vivado HLS Report for 'multiply_a23'
================================================================
* Date:           Tue Oct 11 02:47:06 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        mp3a
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     9.634|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  1270201|  3270201|  1270201|  3270201|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+---------------+-----------+-----------+------+----------+
        |                 |      Latency      |   Iteration   |  Initiation Interval  | Trip |          |
        |    Loop Name    |   min   |   max   |    Latency    |  achieved |   target  | Count| Pipelined|
        +-----------------+---------+---------+---------------+-----------+-----------+------+----------+
        |- Loop 1         |  1270200|  3270200| 12702 ~ 32702 |          -|          -|   100|    no    |
        | + Loop 1.1      |    12700|    32700|   127 ~ 327   |          -|          -|   100|    no    |
        |  ++ Loop 1.1.1  |      125|      325|     5 ~ 13    |          -|          -|    25|    no    |
        +-----------------+---------+---------+---------------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 16
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 7 3 
5 --> 6 
6 --> 7 
7 --> 8 10 
8 --> 9 
9 --> 10 
10 --> 11 13 
11 --> 12 
12 --> 13 
13 --> 14 16 
14 --> 15 
15 --> 16 
16 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %A) nounwind, !map !7"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %B) nounwind, !map !13"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %C) nounwind, !map !17"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %mA) nounwind, !map !21"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %nA) nounwind, !map !27"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %mB) nounwind, !map !31"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %nB) nounwind, !map !35"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %mC) nounwind, !map !39"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %nC) nounwind, !map !43"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @multiply_a23_str) nounwind"   --->   Operation 26 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%nC_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nC) nounwind" [mp3a/multiply_partA2-3.c:3]   --->   Operation 27 'read' 'nC_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%mC_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mC) nounwind" [mp3a/multiply_partA2-3.c:3]   --->   Operation 28 'read' 'mC_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%nA_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nA) nounwind" [mp3a/multiply_partA2-3.c:3]   --->   Operation 29 'read' 'nA_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.76ns)   --->   "br label %1" [mp3a/multiply_partA2-3.c:4]   --->   Operation 30 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.47>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%i_0 = phi i7 [ 0, %0 ], [ %i, %hls_label_0_end ]"   --->   Operation 31 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%phi_mul = phi i14 [ 0, %0 ], [ %add_ln4, %hls_label_0_end ]" [mp3a/multiply_partA2-3.c:4]   --->   Operation 32 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln4_1 = zext i14 %phi_mul to i64" [mp3a/multiply_partA2-3.c:4]   --->   Operation 33 'zext' 'zext_ln4_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (1.81ns)   --->   "%add_ln4 = add i14 %phi_mul, 100" [mp3a/multiply_partA2-3.c:4]   --->   Operation 34 'add' 'add_ln4' <Predicate = true> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln4 = zext i7 %i_0 to i32" [mp3a/multiply_partA2-3.c:4]   --->   Operation 35 'zext' 'zext_ln4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (1.48ns)   --->   "%icmp_ln4 = icmp eq i7 %i_0, -28" [mp3a/multiply_partA2-3.c:4]   --->   Operation 36 'icmp' 'icmp_ln4' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 37 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (1.87ns)   --->   "%i = add i7 %i_0, 1" [mp3a/multiply_partA2-3.c:4]   --->   Operation 38 'add' 'i' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "br i1 %icmp_ln4, label %7, label %hls_label_0_begin" [mp3a/multiply_partA2-3.c:4]   --->   Operation 39 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str) nounwind" [mp3a/multiply_partA2-3.c:4]   --->   Operation 40 'specregionbegin' 'tmp' <Predicate = (!icmp_ln4)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%C_addr = getelementptr [10000 x i32]* %C, i64 0, i64 %zext_ln4_1" [mp3a/multiply_partA2-3.c:6]   --->   Operation 41 'getelementptr' 'C_addr' <Predicate = (!icmp_ln4)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %C_addr, [8 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mp3a/multiply_partA2-3.c:6]   --->   Operation 42 'specinterface' <Predicate = (!icmp_ln4)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (2.47ns)   --->   "%icmp_ln13 = icmp slt i32 %zext_ln4, %mC_read" [mp3a/multiply_partA2-3.c:13]   --->   Operation 43 'icmp' 'icmp_ln13' <Predicate = (!icmp_ln4)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (1.76ns)   --->   "br label %.loopexit" [mp3a/multiply_partA2-3.c:8]   --->   Operation 44 'br' <Predicate = (!icmp_ln4)> <Delay = 1.76>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "ret void" [mp3a/multiply_partA2-3.c:19]   --->   Operation 45 'ret' <Predicate = (icmp_ln4)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.45>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%j_0 = phi i7 [ 0, %hls_label_0_begin ], [ %j, %.loopexit.loopexit ]"   --->   Operation 46 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln8 = zext i7 %j_0 to i32" [mp3a/multiply_partA2-3.c:8]   --->   Operation 47 'zext' 'zext_ln8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (1.48ns)   --->   "%icmp_ln8 = icmp eq i7 %j_0, -28" [mp3a/multiply_partA2-3.c:8]   --->   Operation 48 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 49 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (1.87ns)   --->   "%j = add i7 %j_0, 1" [mp3a/multiply_partA2-3.c:8]   --->   Operation 50 'add' 'j' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "br i1 %icmp_ln8, label %hls_label_0_end, label %.preheader.preheader" [mp3a/multiply_partA2-3.c:8]   --->   Operation 51 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (2.47ns)   --->   "%icmp_ln13_1 = icmp slt i32 %zext_ln8, %nC_read" [mp3a/multiply_partA2-3.c:13]   --->   Operation 52 'icmp' 'icmp_ln13_1' <Predicate = (!icmp_ln8)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.97ns)   --->   "%and_ln13 = and i1 %icmp_ln13, %icmp_ln13_1" [mp3a/multiply_partA2-3.c:13]   --->   Operation 53 'and' 'and_ln13' <Predicate = (!icmp_ln8)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i7 %j_0 to i14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 54 'zext' 'zext_ln14' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (1.81ns)   --->   "%add_ln14_4 = add i14 %phi_mul, %zext_ln14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 55 'add' 'add_ln14_4' <Predicate = (!icmp_ln8)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln14_1 = zext i14 %add_ln14_4 to i64" [mp3a/multiply_partA2-3.c:14]   --->   Operation 56 'zext' 'zext_ln14_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%C_addr_1 = getelementptr [10000 x i32]* %C, i64 0, i64 %zext_ln14_1" [mp3a/multiply_partA2-3.c:14]   --->   Operation 57 'getelementptr' 'C_addr_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (1.76ns)   --->   "br label %.preheader.0" [mp3a/multiply_partA2-3.c:9]   --->   Operation 58 'br' <Predicate = (!icmp_ln8)> <Delay = 1.76>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str, i32 %tmp) nounwind" [mp3a/multiply_partA2-3.c:18]   --->   Operation 59 'specregionend' 'empty_4' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "br label %1" [mp3a/multiply_partA2-3.c:4]   --->   Operation 60 'br' <Predicate = (icmp_ln8)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 9.63>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%k_0_0 = phi i7 [ %add_ln9, %._crit_edge.3 ], [ 0, %.preheader.preheader ]" [mp3a/multiply_partA2-3.c:9]   --->   Operation 61 'phi' 'k_0_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%k_0_0_cast = zext i7 %k_0_0 to i32" [mp3a/multiply_partA2-3.c:9]   --->   Operation 62 'zext' 'k_0_0_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 25, i64 25, i64 25) nounwind"   --->   Operation 63 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (1.48ns)   --->   "%icmp_ln9 = icmp eq i7 %k_0_0, -28" [mp3a/multiply_partA2-3.c:9]   --->   Operation 64 'icmp' 'icmp_ln9' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "br i1 %icmp_ln9, label %.loopexit.loopexit, label %2" [mp3a/multiply_partA2-3.c:9]   --->   Operation 65 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (2.47ns)   --->   "%icmp_ln13_2 = icmp slt i32 %k_0_0_cast, %nA_read" [mp3a/multiply_partA2-3.c:13]   --->   Operation 66 'icmp' 'icmp_ln13_2' <Predicate = (!icmp_ln9)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.97ns)   --->   "%and_ln13_1 = and i1 %and_ln13, %icmp_ln13_2" [mp3a/multiply_partA2-3.c:13]   --->   Operation 67 'and' 'and_ln13_1' <Predicate = (!icmp_ln9)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "br i1 %and_ln13_1, label %3, label %._crit_edge.0" [mp3a/multiply_partA2-3.c:13]   --->   Operation 68 'br' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln14_2 = zext i7 %k_0_0 to i14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 69 'zext' 'zext_ln14_2' <Predicate = (!icmp_ln9 & and_ln13_1)> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln14_3 = zext i7 %k_0_0 to i14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 70 'zext' 'zext_ln14_3' <Predicate = (!icmp_ln9 & and_ln13_1)> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (1.81ns)   --->   "%add_ln14_5 = add i14 %phi_mul, %zext_ln14_3" [mp3a/multiply_partA2-3.c:14]   --->   Operation 71 'add' 'add_ln14_5' <Predicate = (!icmp_ln9 & and_ln13_1)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln14_4 = zext i14 %add_ln14_5 to i64" [mp3a/multiply_partA2-3.c:14]   --->   Operation 72 'zext' 'zext_ln14_4' <Predicate = (!icmp_ln9 & and_ln13_1)> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [10000 x i32]* %A, i64 0, i64 %zext_ln14_4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 73 'getelementptr' 'A_addr' <Predicate = (!icmp_ln9 & and_ln13_1)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (3.36ns) (grouped into DSP with root node add_ln14_6)   --->   "%mul_ln14_4 = mul i14 %zext_ln14_2, 100" [mp3a/multiply_partA2-3.c:14]   --->   Operation 74 'mul' 'mul_ln14_4' <Predicate = (!icmp_ln9 & and_ln13_1)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 75 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln14_6 = add i14 %mul_ln14_4, %zext_ln14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 75 'add' 'add_ln14_6' <Predicate = (!icmp_ln9 & and_ln13_1)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln14_5 = zext i14 %add_ln14_6 to i64" [mp3a/multiply_partA2-3.c:14]   --->   Operation 76 'zext' 'zext_ln14_5' <Predicate = (!icmp_ln9 & and_ln13_1)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [10000 x i32]* %B, i64 0, i64 %zext_ln14_5" [mp3a/multiply_partA2-3.c:14]   --->   Operation 77 'getelementptr' 'B_addr' <Predicate = (!icmp_ln9 & and_ln13_1)> <Delay = 0.00>
ST_4 : Operation 78 [2/2] (3.25ns)   --->   "%A_load = load i32* %A_addr, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 78 'load' 'A_load' <Predicate = (!icmp_ln9 & and_ln13_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_4 : Operation 79 [2/2] (3.25ns)   --->   "%B_load = load i32* %B_addr, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 79 'load' 'B_load' <Predicate = (!icmp_ln9 & and_ln13_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 80 'br' <Predicate = (icmp_ln9)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 3.25>
ST_5 : Operation 81 [1/2] (3.25ns)   --->   "%A_load = load i32* %A_addr, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 81 'load' 'A_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_5 : Operation 82 [1/2] (3.25ns)   --->   "%B_load = load i32* %B_addr, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 82 'load' 'B_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_5 : Operation 83 [2/2] (3.25ns)   --->   "%C_load = load i32* %C_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 83 'load' 'C_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 6 <SV = 5> <Delay = 8.51>
ST_6 : Operation 84 [1/1] (8.51ns)   --->   "%mul_ln14 = mul nsw i32 %B_load, %A_load" [mp3a/multiply_partA2-3.c:14]   --->   Operation 84 'mul' 'mul_ln14' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 85 [1/2] (3.25ns)   --->   "%C_load = load i32* %C_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 85 'load' 'C_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 7 <SV = 6> <Delay = 9.63>
ST_7 : Operation 86 [1/1] (2.55ns)   --->   "%add_ln14 = add nsw i32 %mul_ln14, %C_load" [mp3a/multiply_partA2-3.c:14]   --->   Operation 86 'add' 'add_ln14' <Predicate = (and_ln13_1)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 87 [1/1] (3.25ns)   --->   "store i32 %add_ln14, i32* %C_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 87 'store' <Predicate = (and_ln13_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "br label %._crit_edge.0" [mp3a/multiply_partA2-3.c:15]   --->   Operation 88 'br' <Predicate = (and_ln13_1)> <Delay = 0.00>
ST_7 : Operation 89 [1/1] (0.00ns)   --->   "%or_ln9 = or i7 %k_0_0, 1" [mp3a/multiply_partA2-3.c:9]   --->   Operation 89 'or' 'or_ln9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln9 = zext i7 %or_ln9 to i32" [mp3a/multiply_partA2-3.c:9]   --->   Operation 90 'zext' 'zext_ln9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 91 [1/1] (2.47ns)   --->   "%icmp_ln13_3 = icmp slt i32 %zext_ln9, %nA_read" [mp3a/multiply_partA2-3.c:13]   --->   Operation 91 'icmp' 'icmp_ln13_3' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 92 [1/1] (0.97ns)   --->   "%and_ln13_2 = and i1 %and_ln13, %icmp_ln13_3" [mp3a/multiply_partA2-3.c:13]   --->   Operation 92 'and' 'and_ln13_2' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "br i1 %and_ln13_2, label %4, label %._crit_edge.1" [mp3a/multiply_partA2-3.c:13]   --->   Operation 93 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (0.00ns)   --->   "%zext_ln14_6 = zext i7 %or_ln9 to i14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 94 'zext' 'zext_ln14_6' <Predicate = (and_ln13_2)> <Delay = 0.00>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln14_7 = zext i7 %or_ln9 to i14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 95 'zext' 'zext_ln14_7' <Predicate = (and_ln13_2)> <Delay = 0.00>
ST_7 : Operation 96 [1/1] (1.81ns)   --->   "%add_ln14_7 = add i14 %phi_mul, %zext_ln14_7" [mp3a/multiply_partA2-3.c:14]   --->   Operation 96 'add' 'add_ln14_7' <Predicate = (and_ln13_2)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln14_8 = zext i14 %add_ln14_7 to i64" [mp3a/multiply_partA2-3.c:14]   --->   Operation 97 'zext' 'zext_ln14_8' <Predicate = (and_ln13_2)> <Delay = 0.00>
ST_7 : Operation 98 [1/1] (0.00ns)   --->   "%A_addr_1 = getelementptr [10000 x i32]* %A, i64 0, i64 %zext_ln14_8" [mp3a/multiply_partA2-3.c:14]   --->   Operation 98 'getelementptr' 'A_addr_1' <Predicate = (and_ln13_2)> <Delay = 0.00>
ST_7 : Operation 99 [1/1] (3.36ns) (grouped into DSP with root node add_ln14_8)   --->   "%mul_ln14_5 = mul i14 %zext_ln14_6, 100" [mp3a/multiply_partA2-3.c:14]   --->   Operation 99 'mul' 'mul_ln14_5' <Predicate = (and_ln13_2)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 100 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln14_8 = add i14 %mul_ln14_5, %zext_ln14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 100 'add' 'add_ln14_8' <Predicate = (and_ln13_2)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln14_9 = zext i14 %add_ln14_8 to i64" [mp3a/multiply_partA2-3.c:14]   --->   Operation 101 'zext' 'zext_ln14_9' <Predicate = (and_ln13_2)> <Delay = 0.00>
ST_7 : Operation 102 [1/1] (0.00ns)   --->   "%B_addr_1 = getelementptr [10000 x i32]* %B, i64 0, i64 %zext_ln14_9" [mp3a/multiply_partA2-3.c:14]   --->   Operation 102 'getelementptr' 'B_addr_1' <Predicate = (and_ln13_2)> <Delay = 0.00>
ST_7 : Operation 103 [2/2] (3.25ns)   --->   "%A_load_1 = load i32* %A_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 103 'load' 'A_load_1' <Predicate = (and_ln13_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_7 : Operation 104 [2/2] (3.25ns)   --->   "%B_load_1 = load i32* %B_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 104 'load' 'B_load_1' <Predicate = (and_ln13_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 8 <SV = 7> <Delay = 3.25>
ST_8 : Operation 105 [1/2] (3.25ns)   --->   "%A_load_1 = load i32* %A_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 105 'load' 'A_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_8 : Operation 106 [1/2] (3.25ns)   --->   "%B_load_1 = load i32* %B_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 106 'load' 'B_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_8 : Operation 107 [2/2] (3.25ns)   --->   "%C_load_1 = load i32* %C_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 107 'load' 'C_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 9 <SV = 8> <Delay = 8.51>
ST_9 : Operation 108 [1/1] (8.51ns)   --->   "%mul_ln14_1 = mul nsw i32 %B_load_1, %A_load_1" [mp3a/multiply_partA2-3.c:14]   --->   Operation 108 'mul' 'mul_ln14_1' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 109 [1/2] (3.25ns)   --->   "%C_load_1 = load i32* %C_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 109 'load' 'C_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 10 <SV = 9> <Delay = 9.63>
ST_10 : Operation 110 [1/1] (2.55ns)   --->   "%add_ln14_1 = add nsw i32 %mul_ln14_1, %C_load_1" [mp3a/multiply_partA2-3.c:14]   --->   Operation 110 'add' 'add_ln14_1' <Predicate = (and_ln13_2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 111 [1/1] (3.25ns)   --->   "store i32 %add_ln14_1, i32* %C_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 111 'store' <Predicate = (and_ln13_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_10 : Operation 112 [1/1] (0.00ns)   --->   "br label %._crit_edge.1" [mp3a/multiply_partA2-3.c:15]   --->   Operation 112 'br' <Predicate = (and_ln13_2)> <Delay = 0.00>
ST_10 : Operation 113 [1/1] (0.00ns)   --->   "%or_ln9_1 = or i7 %k_0_0, 2" [mp3a/multiply_partA2-3.c:9]   --->   Operation 113 'or' 'or_ln9_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln9_1 = zext i7 %or_ln9_1 to i32" [mp3a/multiply_partA2-3.c:9]   --->   Operation 114 'zext' 'zext_ln9_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 115 [1/1] (2.47ns)   --->   "%icmp_ln13_4 = icmp slt i32 %zext_ln9_1, %nA_read" [mp3a/multiply_partA2-3.c:13]   --->   Operation 115 'icmp' 'icmp_ln13_4' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 116 [1/1] (0.97ns)   --->   "%and_ln13_3 = and i1 %and_ln13, %icmp_ln13_4" [mp3a/multiply_partA2-3.c:13]   --->   Operation 116 'and' 'and_ln13_3' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 117 [1/1] (0.00ns)   --->   "br i1 %and_ln13_3, label %5, label %._crit_edge.2" [mp3a/multiply_partA2-3.c:13]   --->   Operation 117 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 118 [1/1] (0.00ns)   --->   "%zext_ln14_10 = zext i7 %or_ln9_1 to i14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 118 'zext' 'zext_ln14_10' <Predicate = (and_ln13_3)> <Delay = 0.00>
ST_10 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln14_11 = zext i7 %or_ln9_1 to i14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 119 'zext' 'zext_ln14_11' <Predicate = (and_ln13_3)> <Delay = 0.00>
ST_10 : Operation 120 [1/1] (1.81ns)   --->   "%add_ln14_9 = add i14 %phi_mul, %zext_ln14_11" [mp3a/multiply_partA2-3.c:14]   --->   Operation 120 'add' 'add_ln14_9' <Predicate = (and_ln13_3)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln14_12 = zext i14 %add_ln14_9 to i64" [mp3a/multiply_partA2-3.c:14]   --->   Operation 121 'zext' 'zext_ln14_12' <Predicate = (and_ln13_3)> <Delay = 0.00>
ST_10 : Operation 122 [1/1] (0.00ns)   --->   "%A_addr_2 = getelementptr [10000 x i32]* %A, i64 0, i64 %zext_ln14_12" [mp3a/multiply_partA2-3.c:14]   --->   Operation 122 'getelementptr' 'A_addr_2' <Predicate = (and_ln13_3)> <Delay = 0.00>
ST_10 : Operation 123 [1/1] (3.36ns) (grouped into DSP with root node add_ln14_10)   --->   "%mul_ln14_6 = mul i14 %zext_ln14_10, 100" [mp3a/multiply_partA2-3.c:14]   --->   Operation 123 'mul' 'mul_ln14_6' <Predicate = (and_ln13_3)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 124 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln14_10 = add i14 %mul_ln14_6, %zext_ln14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 124 'add' 'add_ln14_10' <Predicate = (and_ln13_3)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln14_13 = zext i14 %add_ln14_10 to i64" [mp3a/multiply_partA2-3.c:14]   --->   Operation 125 'zext' 'zext_ln14_13' <Predicate = (and_ln13_3)> <Delay = 0.00>
ST_10 : Operation 126 [1/1] (0.00ns)   --->   "%B_addr_2 = getelementptr [10000 x i32]* %B, i64 0, i64 %zext_ln14_13" [mp3a/multiply_partA2-3.c:14]   --->   Operation 126 'getelementptr' 'B_addr_2' <Predicate = (and_ln13_3)> <Delay = 0.00>
ST_10 : Operation 127 [2/2] (3.25ns)   --->   "%A_load_2 = load i32* %A_addr_2, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 127 'load' 'A_load_2' <Predicate = (and_ln13_3)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_10 : Operation 128 [2/2] (3.25ns)   --->   "%B_load_2 = load i32* %B_addr_2, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 128 'load' 'B_load_2' <Predicate = (and_ln13_3)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 11 <SV = 10> <Delay = 3.25>
ST_11 : Operation 129 [1/2] (3.25ns)   --->   "%A_load_2 = load i32* %A_addr_2, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 129 'load' 'A_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_11 : Operation 130 [1/2] (3.25ns)   --->   "%B_load_2 = load i32* %B_addr_2, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 130 'load' 'B_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_11 : Operation 131 [2/2] (3.25ns)   --->   "%C_load_2 = load i32* %C_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 131 'load' 'C_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 12 <SV = 11> <Delay = 8.51>
ST_12 : Operation 132 [1/1] (8.51ns)   --->   "%mul_ln14_2 = mul nsw i32 %B_load_2, %A_load_2" [mp3a/multiply_partA2-3.c:14]   --->   Operation 132 'mul' 'mul_ln14_2' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 133 [1/2] (3.25ns)   --->   "%C_load_2 = load i32* %C_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 133 'load' 'C_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 13 <SV = 12> <Delay = 9.63>
ST_13 : Operation 134 [1/1] (2.55ns)   --->   "%add_ln14_2 = add nsw i32 %mul_ln14_2, %C_load_2" [mp3a/multiply_partA2-3.c:14]   --->   Operation 134 'add' 'add_ln14_2' <Predicate = (and_ln13_3)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 135 [1/1] (3.25ns)   --->   "store i32 %add_ln14_2, i32* %C_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 135 'store' <Predicate = (and_ln13_3)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_13 : Operation 136 [1/1] (0.00ns)   --->   "br label %._crit_edge.2" [mp3a/multiply_partA2-3.c:15]   --->   Operation 136 'br' <Predicate = (and_ln13_3)> <Delay = 0.00>
ST_13 : Operation 137 [1/1] (0.00ns)   --->   "%or_ln9_2 = or i7 %k_0_0, 3" [mp3a/multiply_partA2-3.c:9]   --->   Operation 137 'or' 'or_ln9_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln9_2 = zext i7 %or_ln9_2 to i32" [mp3a/multiply_partA2-3.c:9]   --->   Operation 138 'zext' 'zext_ln9_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 139 [1/1] (2.47ns)   --->   "%icmp_ln13_5 = icmp slt i32 %zext_ln9_2, %nA_read" [mp3a/multiply_partA2-3.c:13]   --->   Operation 139 'icmp' 'icmp_ln13_5' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 140 [1/1] (0.97ns)   --->   "%and_ln13_4 = and i1 %and_ln13, %icmp_ln13_5" [mp3a/multiply_partA2-3.c:13]   --->   Operation 140 'and' 'and_ln13_4' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 141 [1/1] (0.00ns)   --->   "br i1 %and_ln13_4, label %6, label %._crit_edge.3" [mp3a/multiply_partA2-3.c:13]   --->   Operation 141 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln14_14 = zext i7 %or_ln9_2 to i14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 142 'zext' 'zext_ln14_14' <Predicate = (and_ln13_4)> <Delay = 0.00>
ST_13 : Operation 143 [1/1] (0.00ns)   --->   "%zext_ln14_15 = zext i7 %or_ln9_2 to i14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 143 'zext' 'zext_ln14_15' <Predicate = (and_ln13_4)> <Delay = 0.00>
ST_13 : Operation 144 [1/1] (1.81ns)   --->   "%add_ln14_11 = add i14 %phi_mul, %zext_ln14_15" [mp3a/multiply_partA2-3.c:14]   --->   Operation 144 'add' 'add_ln14_11' <Predicate = (and_ln13_4)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln14_16 = zext i14 %add_ln14_11 to i64" [mp3a/multiply_partA2-3.c:14]   --->   Operation 145 'zext' 'zext_ln14_16' <Predicate = (and_ln13_4)> <Delay = 0.00>
ST_13 : Operation 146 [1/1] (0.00ns)   --->   "%A_addr_3 = getelementptr [10000 x i32]* %A, i64 0, i64 %zext_ln14_16" [mp3a/multiply_partA2-3.c:14]   --->   Operation 146 'getelementptr' 'A_addr_3' <Predicate = (and_ln13_4)> <Delay = 0.00>
ST_13 : Operation 147 [1/1] (3.36ns) (grouped into DSP with root node add_ln14_12)   --->   "%mul_ln14_7 = mul i14 %zext_ln14_14, 100" [mp3a/multiply_partA2-3.c:14]   --->   Operation 147 'mul' 'mul_ln14_7' <Predicate = (and_ln13_4)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 148 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln14_12 = add i14 %mul_ln14_7, %zext_ln14" [mp3a/multiply_partA2-3.c:14]   --->   Operation 148 'add' 'add_ln14_12' <Predicate = (and_ln13_4)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 149 [1/1] (0.00ns)   --->   "%zext_ln14_17 = zext i14 %add_ln14_12 to i64" [mp3a/multiply_partA2-3.c:14]   --->   Operation 149 'zext' 'zext_ln14_17' <Predicate = (and_ln13_4)> <Delay = 0.00>
ST_13 : Operation 150 [1/1] (0.00ns)   --->   "%B_addr_3 = getelementptr [10000 x i32]* %B, i64 0, i64 %zext_ln14_17" [mp3a/multiply_partA2-3.c:14]   --->   Operation 150 'getelementptr' 'B_addr_3' <Predicate = (and_ln13_4)> <Delay = 0.00>
ST_13 : Operation 151 [2/2] (3.25ns)   --->   "%A_load_3 = load i32* %A_addr_3, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 151 'load' 'A_load_3' <Predicate = (and_ln13_4)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_13 : Operation 152 [2/2] (3.25ns)   --->   "%B_load_3 = load i32* %B_addr_3, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 152 'load' 'B_load_3' <Predicate = (and_ln13_4)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 14 <SV = 13> <Delay = 3.25>
ST_14 : Operation 153 [1/2] (3.25ns)   --->   "%A_load_3 = load i32* %A_addr_3, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 153 'load' 'A_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_14 : Operation 154 [1/2] (3.25ns)   --->   "%B_load_3 = load i32* %B_addr_3, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 154 'load' 'B_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_14 : Operation 155 [2/2] (3.25ns)   --->   "%C_load_3 = load i32* %C_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 155 'load' 'C_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 15 <SV = 14> <Delay = 8.51>
ST_15 : Operation 156 [1/1] (8.51ns)   --->   "%mul_ln14_3 = mul nsw i32 %B_load_3, %A_load_3" [mp3a/multiply_partA2-3.c:14]   --->   Operation 156 'mul' 'mul_ln14_3' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 157 [1/2] (3.25ns)   --->   "%C_load_3 = load i32* %C_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 157 'load' 'C_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 16 <SV = 15> <Delay = 5.80>
ST_16 : Operation 158 [1/1] (2.55ns)   --->   "%add_ln14_3 = add nsw i32 %mul_ln14_3, %C_load_3" [mp3a/multiply_partA2-3.c:14]   --->   Operation 158 'add' 'add_ln14_3' <Predicate = (and_ln13_4)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 159 [1/1] (3.25ns)   --->   "store i32 %add_ln14_3, i32* %C_addr_1, align 4" [mp3a/multiply_partA2-3.c:14]   --->   Operation 159 'store' <Predicate = (and_ln13_4)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_16 : Operation 160 [1/1] (0.00ns)   --->   "br label %._crit_edge.3" [mp3a/multiply_partA2-3.c:15]   --->   Operation 160 'br' <Predicate = (and_ln13_4)> <Delay = 0.00>
ST_16 : Operation 161 [1/1] (1.87ns)   --->   "%add_ln9 = add i7 %k_0_0, 4" [mp3a/multiply_partA2-3.c:9]   --->   Operation 161 'add' 'add_ln9' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 162 [1/1] (0.00ns)   --->   "br label %.preheader.0" [mp3a/multiply_partA2-3.c:9]   --->   Operation 162 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', mp3a/multiply_partA2-3.c:4) [25]  (1.77 ns)

 <State 2>: 2.47ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', mp3a/multiply_partA2-3.c:4) [25]  (0 ns)
	'icmp' operation ('icmp_ln13', mp3a/multiply_partA2-3.c:13) [38]  (2.47 ns)

 <State 3>: 3.45ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', mp3a/multiply_partA2-3.c:8) [41]  (0 ns)
	'icmp' operation ('icmp_ln13_1', mp3a/multiply_partA2-3.c:13) [48]  (2.47 ns)
	'and' operation ('and_ln13', mp3a/multiply_partA2-3.c:13) [49]  (0.978 ns)

 <State 4>: 9.63ns
The critical path consists of the following:
	'phi' operation ('k_0_0', mp3a/multiply_partA2-3.c:9) with incoming values : ('add_ln9', mp3a/multiply_partA2-3.c:9) [56]  (0 ns)
	'mul' operation of DSP[72] ('mul_ln14_4', mp3a/multiply_partA2-3.c:14) [71]  (3.36 ns)
	'add' operation of DSP[72] ('add_ln14_6', mp3a/multiply_partA2-3.c:14) [72]  (3.02 ns)
	'getelementptr' operation ('B_addr', mp3a/multiply_partA2-3.c:14) [74]  (0 ns)
	'load' operation ('B_load', mp3a/multiply_partA2-3.c:14) on array 'B' [76]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'load' operation ('A_load', mp3a/multiply_partA2-3.c:14) on array 'A' [75]  (3.25 ns)

 <State 6>: 8.51ns
The critical path consists of the following:
	'mul' operation ('mul_ln14', mp3a/multiply_partA2-3.c:14) [77]  (8.51 ns)

 <State 7>: 9.63ns
The critical path consists of the following:
	'or' operation ('or_ln9', mp3a/multiply_partA2-3.c:9) [83]  (0 ns)
	'mul' operation of DSP[95] ('mul_ln14_5', mp3a/multiply_partA2-3.c:14) [94]  (3.36 ns)
	'add' operation of DSP[95] ('add_ln14_8', mp3a/multiply_partA2-3.c:14) [95]  (3.02 ns)
	'getelementptr' operation ('B_addr_1', mp3a/multiply_partA2-3.c:14) [97]  (0 ns)
	'load' operation ('B_load_1', mp3a/multiply_partA2-3.c:14) on array 'B' [99]  (3.25 ns)

 <State 8>: 3.25ns
The critical path consists of the following:
	'load' operation ('A_load_1', mp3a/multiply_partA2-3.c:14) on array 'A' [98]  (3.25 ns)

 <State 9>: 8.51ns
The critical path consists of the following:
	'mul' operation ('mul_ln14_1', mp3a/multiply_partA2-3.c:14) [100]  (8.51 ns)

 <State 10>: 9.63ns
The critical path consists of the following:
	'or' operation ('or_ln9_1', mp3a/multiply_partA2-3.c:9) [106]  (0 ns)
	'mul' operation of DSP[118] ('mul_ln14_6', mp3a/multiply_partA2-3.c:14) [117]  (3.36 ns)
	'add' operation of DSP[118] ('add_ln14_10', mp3a/multiply_partA2-3.c:14) [118]  (3.02 ns)
	'getelementptr' operation ('B_addr_2', mp3a/multiply_partA2-3.c:14) [120]  (0 ns)
	'load' operation ('B_load_2', mp3a/multiply_partA2-3.c:14) on array 'B' [122]  (3.25 ns)

 <State 11>: 3.25ns
The critical path consists of the following:
	'load' operation ('A_load_2', mp3a/multiply_partA2-3.c:14) on array 'A' [121]  (3.25 ns)

 <State 12>: 8.51ns
The critical path consists of the following:
	'mul' operation ('mul_ln14_2', mp3a/multiply_partA2-3.c:14) [123]  (8.51 ns)

 <State 13>: 9.63ns
The critical path consists of the following:
	'or' operation ('or_ln9_2', mp3a/multiply_partA2-3.c:9) [129]  (0 ns)
	'mul' operation of DSP[141] ('mul_ln14_7', mp3a/multiply_partA2-3.c:14) [140]  (3.36 ns)
	'add' operation of DSP[141] ('add_ln14_12', mp3a/multiply_partA2-3.c:14) [141]  (3.02 ns)
	'getelementptr' operation ('B_addr_3', mp3a/multiply_partA2-3.c:14) [143]  (0 ns)
	'load' operation ('B_load_3', mp3a/multiply_partA2-3.c:14) on array 'B' [145]  (3.25 ns)

 <State 14>: 3.25ns
The critical path consists of the following:
	'load' operation ('A_load_3', mp3a/multiply_partA2-3.c:14) on array 'A' [144]  (3.25 ns)

 <State 15>: 8.51ns
The critical path consists of the following:
	'mul' operation ('mul_ln14_3', mp3a/multiply_partA2-3.c:14) [146]  (8.51 ns)

 <State 16>: 5.81ns
The critical path consists of the following:
	'add' operation ('add_ln14_3', mp3a/multiply_partA2-3.c:14) [148]  (2.55 ns)
	'store' operation ('store_ln14', mp3a/multiply_partA2-3.c:14) of variable 'add_ln14_3', mp3a/multiply_partA2-3.c:14 on array 'C' [149]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
