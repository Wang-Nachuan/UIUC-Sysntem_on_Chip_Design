// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "multiply_partB_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic multiply_partB_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic multiply_partB_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state1 = "1";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state2 = "10";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state3 = "100";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state4 = "1000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state5 = "10000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state6 = "100000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state7 = "1000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state8 = "10000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state9 = "100000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<21> multiply_partB_2::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<32> multiply_partB_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool multiply_partB_2::ap_const_boolean_1 = true;
const sc_lv<32> multiply_partB_2::ap_const_lv32_2 = "10";
const sc_lv<1> multiply_partB_2::ap_const_lv1_0 = "0";
const sc_lv<1> multiply_partB_2::ap_const_lv1_1 = "1";
const sc_lv<32> multiply_partB_2::ap_const_lv32_14 = "10100";
const sc_lv<32> multiply_partB_2::ap_const_lv32_6 = "110";
const sc_lv<32> multiply_partB_2::ap_const_lv32_9 = "1001";
const sc_lv<32> multiply_partB_2::ap_const_lv32_C = "1100";
const sc_lv<32> multiply_partB_2::ap_const_lv32_F = "1111";
const sc_lv<32> multiply_partB_2::ap_const_lv32_1 = "1";
const sc_lv<32> multiply_partB_2::ap_const_lv32_3 = "11";
const sc_lv<32> multiply_partB_2::ap_const_lv32_4 = "100";
const sc_lv<32> multiply_partB_2::ap_const_lv32_5 = "101";
const sc_lv<32> multiply_partB_2::ap_const_lv32_7 = "111";
const sc_lv<32> multiply_partB_2::ap_const_lv32_8 = "1000";
const sc_lv<32> multiply_partB_2::ap_const_lv32_A = "1010";
const sc_lv<32> multiply_partB_2::ap_const_lv32_B = "1011";
const sc_lv<32> multiply_partB_2::ap_const_lv32_D = "1101";
const sc_lv<32> multiply_partB_2::ap_const_lv32_E = "1110";
const sc_lv<32> multiply_partB_2::ap_const_lv32_10 = "10000";
const sc_lv<32> multiply_partB_2::ap_const_lv32_11 = "10001";
const sc_lv<32> multiply_partB_2::ap_const_lv32_12 = "10010";
const sc_lv<32> multiply_partB_2::ap_const_lv32_13 = "10011";
const sc_lv<7> multiply_partB_2::ap_const_lv7_0 = "0000000";
const sc_lv<14> multiply_partB_2::ap_const_lv14_0 = "00000000000000";
const sc_lv<14> multiply_partB_2::ap_const_lv14_64 = "1100100";
const sc_lv<7> multiply_partB_2::ap_const_lv7_64 = "1100100";
const sc_lv<7> multiply_partB_2::ap_const_lv7_1 = "1";
const sc_lv<7> multiply_partB_2::ap_const_lv7_2 = "10";
const sc_lv<7> multiply_partB_2::ap_const_lv7_3 = "11";
const sc_lv<7> multiply_partB_2::ap_const_lv7_4 = "100";

multiply_partB_2::multiply_partB_2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    arrayA_U = new multiply_partB_2_bkb("arrayA_U");
    arrayA_U->clk(ap_clk);
    arrayA_U->reset(ap_rst);
    arrayA_U->address0(arrayA_address0);
    arrayA_U->ce0(arrayA_ce0);
    arrayA_U->we0(arrayA_we0);
    arrayA_U->d0(A_dout);
    arrayA_U->q0(arrayA_q0);
    arrayB_U = new multiply_partB_2_bkb("arrayB_U");
    arrayB_U->clk(ap_clk);
    arrayB_U->reset(ap_rst);
    arrayB_U->address0(arrayB_address0);
    arrayB_U->ce0(arrayB_ce0);
    arrayB_U->we0(arrayB_we0);
    arrayB_U->d0(B_dout);
    arrayB_U->q0(arrayB_q0);
    arrayC_U = new multiply_partB_2_bkb("arrayC_U");
    arrayC_U->clk(ap_clk);
    arrayC_U->reset(ap_rst);
    arrayC_U->address0(arrayC_address0);
    arrayC_U->ce0(arrayC_ce0);
    arrayC_U->we0(arrayC_we0);
    arrayC_U->d0(arrayC_d0);
    arrayC_U->q0(arrayC_q0);
    multiply_partB_2_eOg_U1 = new multiply_partB_2_eOg<1,1,7,8,7,14>("multiply_partB_2_eOg_U1");
    multiply_partB_2_eOg_U1->din0(grp_fu_766_p0);
    multiply_partB_2_eOg_U1->din1(grp_fu_766_p1);
    multiply_partB_2_eOg_U1->din2(grp_fu_766_p2);
    multiply_partB_2_eOg_U1->dout(grp_fu_766_p3);
    multiply_partB_2_eOg_U2 = new multiply_partB_2_eOg<1,1,7,8,7,14>("multiply_partB_2_eOg_U2");
    multiply_partB_2_eOg_U2->din0(grp_fu_774_p0);
    multiply_partB_2_eOg_U2->din1(grp_fu_774_p1);
    multiply_partB_2_eOg_U2->din2(grp_fu_774_p2);
    multiply_partB_2_eOg_U2->dout(grp_fu_774_p3);
    multiply_partB_2_eOg_U3 = new multiply_partB_2_eOg<1,1,7,8,7,14>("multiply_partB_2_eOg_U3");
    multiply_partB_2_eOg_U3->din0(grp_fu_782_p0);
    multiply_partB_2_eOg_U3->din1(grp_fu_782_p1);
    multiply_partB_2_eOg_U3->din2(grp_fu_782_p2);
    multiply_partB_2_eOg_U3->dout(grp_fu_782_p3);
    multiply_partB_2_eOg_U4 = new multiply_partB_2_eOg<1,1,7,8,7,14>("multiply_partB_2_eOg_U4");
    multiply_partB_2_eOg_U4->din0(grp_fu_790_p0);
    multiply_partB_2_eOg_U4->din1(grp_fu_790_p1);
    multiply_partB_2_eOg_U4->din2(grp_fu_790_p2);
    multiply_partB_2_eOg_U4->dout(grp_fu_790_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_blk_n);
    sensitive << ( A_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_393_p2 );
    sensitive << ( and_ln17_fu_410_p2 );

    SC_METHOD(thread_A_read);
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_predicate_op70_read_state3 );
    sensitive << ( ap_predicate_op72_read_state3 );

    SC_METHOD(thread_B_blk_n);
    sensitive << ( B_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_393_p2 );
    sensitive << ( and_ln17_fu_410_p2 );

    SC_METHOD(thread_B_read);
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_predicate_op70_read_state3 );
    sensitive << ( ap_predicate_op72_read_state3 );

    SC_METHOD(thread_C_blk_n);
    sensitive << ( C_full_n );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( and_ln47_reg_1026 );

    SC_METHOD(thread_C_din);
    sensitive << ( C_full_n );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( and_ln47_reg_1026 );
    sensitive << ( arrayC_q0 );

    SC_METHOD(thread_C_write);
    sensitive << ( C_full_n );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( and_ln47_reg_1026 );

    SC_METHOD(thread_add_ln11_fu_362_p2);
    sensitive << ( phi_mul_reg_245 );

    SC_METHOD(thread_add_ln18_fu_419_p2);
    sensitive << ( phi_mul_reg_245 );
    sensitive << ( zext_ln18_fu_415_p1 );

    SC_METHOD(thread_add_ln27_fu_432_p2);
    sensitive << ( phi_mul1_reg_279 );

    SC_METHOD(thread_add_ln31_fu_692_p2);
    sensitive << ( k_0_0_reg_302 );

    SC_METHOD(thread_add_ln36_11_fu_672_p2);
    sensitive << ( phi_mul1_reg_279 );
    sensitive << ( zext_ln36_15_fu_668_p1 );

    SC_METHOD(thread_add_ln36_1_fu_591_p2);
    sensitive << ( mul_ln36_1_reg_937 );
    sensitive << ( arrayC_load_2_reg_942 );

    SC_METHOD(thread_add_ln36_2_fu_639_p2);
    sensitive << ( mul_ln36_2_reg_961 );
    sensitive << ( arrayC_load_3_reg_966 );

    SC_METHOD(thread_add_ln36_3_fu_687_p2);
    sensitive << ( mul_ln36_3_reg_985 );
    sensitive << ( arrayC_load_4_reg_990 );

    SC_METHOD(thread_add_ln36_4_fu_489_p2);
    sensitive << ( zext_ln36_fu_485_p1 );
    sensitive << ( phi_mul1_reg_279 );

    SC_METHOD(thread_add_ln36_5_fu_528_p2);
    sensitive << ( phi_mul1_reg_279 );
    sensitive << ( zext_ln36_3_fu_524_p1 );

    SC_METHOD(thread_add_ln36_7_fu_576_p2);
    sensitive << ( phi_mul1_reg_279 );
    sensitive << ( zext_ln36_7_fu_572_p1 );

    SC_METHOD(thread_add_ln36_9_fu_624_p2);
    sensitive << ( phi_mul1_reg_279 );
    sensitive << ( zext_ln36_11_fu_620_p1 );

    SC_METHOD(thread_add_ln36_fu_543_p2);
    sensitive << ( mul_ln36_reg_913 );
    sensitive << ( arrayC_load_1_reg_918 );

    SC_METHOD(thread_add_ln42_fu_698_p2);
    sensitive << ( phi_mul3_reg_325 );

    SC_METHOD(thread_add_ln48_fu_755_p2);
    sensitive << ( phi_mul3_reg_325 );
    sensitive << ( zext_ln48_fu_751_p1 );

    SC_METHOD(thread_and_ln17_fu_410_p2);
    sensitive << ( icmp_ln17_reg_833 );
    sensitive << ( icmp_ln17_1_fu_405_p2 );

    SC_METHOD(thread_and_ln35_1_fu_515_p2);
    sensitive << ( and_ln35_reg_875 );
    sensitive << ( icmp_ln35_2_fu_510_p2 );

    SC_METHOD(thread_and_ln35_2_fu_563_p2);
    sensitive << ( and_ln35_reg_875 );
    sensitive << ( icmp_ln35_3_fu_558_p2 );

    SC_METHOD(thread_and_ln35_3_fu_611_p2);
    sensitive << ( and_ln35_reg_875 );
    sensitive << ( icmp_ln35_4_fu_606_p2 );

    SC_METHOD(thread_and_ln35_4_fu_659_p2);
    sensitive << ( and_ln35_reg_875 );
    sensitive << ( icmp_ln35_5_fu_654_p2 );

    SC_METHOD(thread_and_ln35_fu_480_p2);
    sensitive << ( icmp_ln35_reg_862 );
    sensitive << ( icmp_ln35_1_fu_475_p2 );

    SC_METHOD(thread_and_ln47_fu_746_p2);
    sensitive << ( icmp_ln47_reg_1013 );
    sensitive << ( icmp_ln47_1_fu_741_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state21);
    sensitive << ( C_full_n );
    sensitive << ( and_ln47_reg_1026 );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( ap_predicate_op70_read_state3 );
    sensitive << ( ap_predicate_op72_read_state3 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln42_fu_708_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_predicate_op70_read_state3);
    sensitive << ( icmp_ln13_fu_393_p2 );
    sensitive << ( and_ln17_fu_410_p2 );

    SC_METHOD(thread_ap_predicate_op72_read_state3);
    sensitive << ( icmp_ln13_fu_393_p2 );
    sensitive << ( and_ln17_fu_410_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln42_fu_708_p2 );

    SC_METHOD(thread_arrayA_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln18_1_fu_425_p1 );
    sensitive << ( zext_ln36_4_fu_534_p1 );
    sensitive << ( zext_ln36_8_fu_582_p1 );
    sensitive << ( zext_ln36_12_fu_630_p1 );
    sensitive << ( zext_ln36_16_fu_678_p1 );

    SC_METHOD(thread_arrayA_ce0);
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_predicate_op70_read_state3 );
    sensitive << ( ap_predicate_op72_read_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_arrayA_we0);
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_393_p2 );
    sensitive << ( and_ln17_fu_410_p2 );
    sensitive << ( ap_predicate_op70_read_state3 );
    sensitive << ( ap_predicate_op72_read_state3 );

    SC_METHOD(thread_arrayB_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln18_1_fu_425_p1 );
    sensitive << ( zext_ln36_5_fu_539_p1 );
    sensitive << ( zext_ln36_9_fu_587_p1 );
    sensitive << ( zext_ln36_13_fu_635_p1 );
    sensitive << ( zext_ln36_17_fu_683_p1 );

    SC_METHOD(thread_arrayB_ce0);
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_predicate_op70_read_state3 );
    sensitive << ( ap_predicate_op72_read_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_arrayB_we0);
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_393_p2 );
    sensitive << ( and_ln17_fu_410_p2 );
    sensitive << ( ap_predicate_op70_read_state3 );
    sensitive << ( ap_predicate_op72_read_state3 );

    SC_METHOD(thread_arrayC_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( arrayC_addr_1_reg_891 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln18_1_fu_425_p1 );
    sensitive << ( zext_ln48_1_fu_761_p1 );

    SC_METHOD(thread_arrayC_ce0);
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_predicate_op70_read_state3 );
    sensitive << ( ap_predicate_op72_read_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_arrayC_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( add_ln36_fu_543_p2 );
    sensitive << ( add_ln36_1_fu_591_p2 );
    sensitive << ( add_ln36_2_fu_639_p2 );
    sensitive << ( add_ln36_3_fu_687_p2 );

    SC_METHOD(thread_arrayC_we0);
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_393_p2 );
    sensitive << ( and_ln17_fu_410_p2 );
    sensitive << ( ap_predicate_op70_read_state3 );
    sensitive << ( ap_predicate_op72_read_state3 );
    sensitive << ( and_ln35_1_reg_899 );
    sensitive << ( and_ln35_2_reg_923 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( and_ln35_3_reg_947 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( and_ln35_4_reg_971 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_356_p2);
    sensitive << ( reg_348 );
    sensitive << ( reg_352 );

    SC_METHOD(thread_grp_fu_766_p0);
    sensitive << ( and_ln35_1_fu_515_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln31_fu_504_p2 );
    sensitive << ( grp_fu_766_p00 );

    SC_METHOD(thread_grp_fu_766_p00);
    sensitive << ( k_0_0_reg_302 );

    SC_METHOD(thread_grp_fu_766_p1);
    sensitive << ( and_ln35_1_fu_515_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln31_fu_504_p2 );

    SC_METHOD(thread_grp_fu_766_p2);
    sensitive << ( zext_ln36_reg_883 );
    sensitive << ( and_ln35_1_fu_515_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln31_fu_504_p2 );

    SC_METHOD(thread_grp_fu_774_p0);
    sensitive << ( and_ln35_2_fu_563_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_fu_774_p00 );

    SC_METHOD(thread_grp_fu_774_p00);
    sensitive << ( or_ln31_fu_548_p2 );

    SC_METHOD(thread_grp_fu_774_p1);
    sensitive << ( and_ln35_2_fu_563_p2 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_774_p2);
    sensitive << ( zext_ln36_reg_883 );
    sensitive << ( and_ln35_2_fu_563_p2 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_782_p0);
    sensitive << ( and_ln35_3_fu_611_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_fu_782_p00 );

    SC_METHOD(thread_grp_fu_782_p00);
    sensitive << ( or_ln31_1_fu_596_p2 );

    SC_METHOD(thread_grp_fu_782_p1);
    sensitive << ( and_ln35_3_fu_611_p2 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_fu_782_p2);
    sensitive << ( zext_ln36_reg_883 );
    sensitive << ( and_ln35_3_fu_611_p2 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_fu_790_p0);
    sensitive << ( and_ln35_4_fu_659_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( grp_fu_790_p00 );

    SC_METHOD(thread_grp_fu_790_p00);
    sensitive << ( or_ln31_2_fu_644_p2 );

    SC_METHOD(thread_grp_fu_790_p1);
    sensitive << ( and_ln35_4_fu_659_p2 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_790_p2);
    sensitive << ( zext_ln36_reg_883 );
    sensitive << ( and_ln35_4_fu_659_p2 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_i_3_fu_448_p2);
    sensitive << ( i_1_reg_268 );

    SC_METHOD(thread_i_4_fu_714_p2);
    sensitive << ( i_2_reg_314 );

    SC_METHOD(thread_i_fu_378_p2);
    sensitive << ( i_0_reg_234 );

    SC_METHOD(thread_icmp_ln11_fu_372_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_234 );

    SC_METHOD(thread_icmp_ln13_fu_393_p2);
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_predicate_op70_read_state3 );
    sensitive << ( ap_predicate_op72_read_state3 );
    sensitive << ( j_0_reg_257 );

    SC_METHOD(thread_icmp_ln17_1_fu_405_p2);
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( nC );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_393_p2 );
    sensitive << ( ap_predicate_op70_read_state3 );
    sensitive << ( ap_predicate_op72_read_state3 );
    sensitive << ( zext_ln13_fu_389_p1 );

    SC_METHOD(thread_icmp_ln17_fu_384_p2);
    sensitive << ( mC );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln11_fu_372_p2 );
    sensitive << ( zext_ln11_fu_368_p1 );

    SC_METHOD(thread_icmp_ln27_fu_442_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_reg_268 );

    SC_METHOD(thread_icmp_ln29_fu_463_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_1_reg_291 );

    SC_METHOD(thread_icmp_ln31_fu_504_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( k_0_0_reg_302 );

    SC_METHOD(thread_icmp_ln35_1_fu_475_p2);
    sensitive << ( nC );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln29_fu_463_p2 );
    sensitive << ( zext_ln29_fu_459_p1 );

    SC_METHOD(thread_icmp_ln35_2_fu_510_p2);
    sensitive << ( nA );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln31_fu_504_p2 );
    sensitive << ( k_0_0_cast_fu_500_p1 );

    SC_METHOD(thread_icmp_ln35_3_fu_558_p2);
    sensitive << ( nA );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln31_fu_554_p1 );

    SC_METHOD(thread_icmp_ln35_4_fu_606_p2);
    sensitive << ( nA );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( zext_ln31_1_fu_602_p1 );

    SC_METHOD(thread_icmp_ln35_5_fu_654_p2);
    sensitive << ( nA );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln31_2_fu_650_p1 );

    SC_METHOD(thread_icmp_ln35_fu_454_p2);
    sensitive << ( mC );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln27_fu_442_p2 );
    sensitive << ( zext_ln27_fu_438_p1 );

    SC_METHOD(thread_icmp_ln42_fu_708_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( i_2_reg_314 );

    SC_METHOD(thread_icmp_ln44_fu_729_p2);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( j_2_reg_337 );

    SC_METHOD(thread_icmp_ln47_1_fu_741_p2);
    sensitive << ( nC );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( icmp_ln44_fu_729_p2 );
    sensitive << ( zext_ln44_fu_725_p1 );

    SC_METHOD(thread_icmp_ln47_fu_720_p2);
    sensitive << ( mC );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln42_fu_708_p2 );
    sensitive << ( zext_ln42_fu_704_p1 );

    SC_METHOD(thread_j_3_fu_399_p2);
    sensitive << ( j_0_reg_257 );

    SC_METHOD(thread_j_4_fu_735_p2);
    sensitive << ( j_2_reg_337 );

    SC_METHOD(thread_j_fu_469_p2);
    sensitive << ( j_1_reg_291 );

    SC_METHOD(thread_k_0_0_cast_fu_500_p1);
    sensitive << ( k_0_0_reg_302 );

    SC_METHOD(thread_or_ln31_1_fu_596_p2);
    sensitive << ( k_0_0_reg_302 );

    SC_METHOD(thread_or_ln31_2_fu_644_p2);
    sensitive << ( k_0_0_reg_302 );

    SC_METHOD(thread_or_ln31_fu_548_p2);
    sensitive << ( k_0_0_reg_302 );

    SC_METHOD(thread_zext_ln11_fu_368_p1);
    sensitive << ( i_0_reg_234 );

    SC_METHOD(thread_zext_ln13_fu_389_p1);
    sensitive << ( j_0_reg_257 );

    SC_METHOD(thread_zext_ln18_1_fu_425_p1);
    sensitive << ( add_ln18_fu_419_p2 );

    SC_METHOD(thread_zext_ln18_fu_415_p1);
    sensitive << ( j_0_reg_257 );

    SC_METHOD(thread_zext_ln27_fu_438_p1);
    sensitive << ( i_1_reg_268 );

    SC_METHOD(thread_zext_ln29_fu_459_p1);
    sensitive << ( j_1_reg_291 );

    SC_METHOD(thread_zext_ln31_1_fu_602_p1);
    sensitive << ( or_ln31_1_fu_596_p2 );

    SC_METHOD(thread_zext_ln31_2_fu_650_p1);
    sensitive << ( or_ln31_2_fu_644_p2 );

    SC_METHOD(thread_zext_ln31_fu_554_p1);
    sensitive << ( or_ln31_fu_548_p2 );

    SC_METHOD(thread_zext_ln36_11_fu_620_p1);
    sensitive << ( or_ln31_1_fu_596_p2 );

    SC_METHOD(thread_zext_ln36_12_fu_630_p1);
    sensitive << ( add_ln36_9_fu_624_p2 );

    SC_METHOD(thread_zext_ln36_13_fu_635_p1);
    sensitive << ( grp_fu_782_p3 );

    SC_METHOD(thread_zext_ln36_15_fu_668_p1);
    sensitive << ( or_ln31_2_fu_644_p2 );

    SC_METHOD(thread_zext_ln36_16_fu_678_p1);
    sensitive << ( add_ln36_11_fu_672_p2 );

    SC_METHOD(thread_zext_ln36_17_fu_683_p1);
    sensitive << ( grp_fu_790_p3 );

    SC_METHOD(thread_zext_ln36_1_fu_495_p1);
    sensitive << ( add_ln36_4_fu_489_p2 );

    SC_METHOD(thread_zext_ln36_3_fu_524_p1);
    sensitive << ( k_0_0_reg_302 );

    SC_METHOD(thread_zext_ln36_4_fu_534_p1);
    sensitive << ( add_ln36_5_fu_528_p2 );

    SC_METHOD(thread_zext_ln36_5_fu_539_p1);
    sensitive << ( grp_fu_766_p3 );

    SC_METHOD(thread_zext_ln36_7_fu_572_p1);
    sensitive << ( or_ln31_fu_548_p2 );

    SC_METHOD(thread_zext_ln36_8_fu_582_p1);
    sensitive << ( add_ln36_7_fu_576_p2 );

    SC_METHOD(thread_zext_ln36_9_fu_587_p1);
    sensitive << ( grp_fu_774_p3 );

    SC_METHOD(thread_zext_ln36_fu_485_p1);
    sensitive << ( j_1_reg_291 );

    SC_METHOD(thread_zext_ln42_fu_704_p1);
    sensitive << ( i_2_reg_314 );

    SC_METHOD(thread_zext_ln44_fu_725_p1);
    sensitive << ( j_2_reg_337 );

    SC_METHOD(thread_zext_ln48_1_fu_761_p1);
    sensitive << ( add_ln48_fu_755_p2 );

    SC_METHOD(thread_zext_ln48_fu_751_p1);
    sensitive << ( j_2_reg_337 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( C_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_393_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( and_ln47_reg_1026 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln11_fu_372_p2 );
    sensitive << ( ap_predicate_op70_read_state3 );
    sensitive << ( ap_predicate_op72_read_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln27_fu_442_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln29_fu_463_p2 );
    sensitive << ( and_ln35_1_fu_515_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln31_fu_504_p2 );
    sensitive << ( and_ln35_2_fu_563_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( and_ln35_3_fu_611_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( and_ln35_4_fu_659_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln42_fu_708_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( icmp_ln44_fu_729_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "multiply_partB_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_dout, "(port)A_dout");
    sc_trace(mVcdFile, A_empty_n, "(port)A_empty_n");
    sc_trace(mVcdFile, A_read, "(port)A_read");
    sc_trace(mVcdFile, B_dout, "(port)B_dout");
    sc_trace(mVcdFile, B_empty_n, "(port)B_empty_n");
    sc_trace(mVcdFile, B_read, "(port)B_read");
    sc_trace(mVcdFile, C_din, "(port)C_din");
    sc_trace(mVcdFile, C_full_n, "(port)C_full_n");
    sc_trace(mVcdFile, C_write, "(port)C_write");
    sc_trace(mVcdFile, mA, "(port)mA");
    sc_trace(mVcdFile, nA, "(port)nA");
    sc_trace(mVcdFile, mB, "(port)mB");
    sc_trace(mVcdFile, nB, "(port)nB");
    sc_trace(mVcdFile, mC, "(port)mC");
    sc_trace(mVcdFile, nC, "(port)nC");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, A_blk_n, "A_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln13_fu_393_p2, "icmp_ln13_fu_393_p2");
    sc_trace(mVcdFile, and_ln17_fu_410_p2, "and_ln17_fu_410_p2");
    sc_trace(mVcdFile, B_blk_n, "B_blk_n");
    sc_trace(mVcdFile, C_blk_n, "C_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, and_ln47_reg_1026, "and_ln47_reg_1026");
    sc_trace(mVcdFile, arrayA_q0, "arrayA_q0");
    sc_trace(mVcdFile, reg_348, "reg_348");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, arrayB_q0, "arrayB_q0");
    sc_trace(mVcdFile, reg_352, "reg_352");
    sc_trace(mVcdFile, add_ln11_fu_362_p2, "add_ln11_fu_362_p2");
    sc_trace(mVcdFile, add_ln11_reg_820, "add_ln11_reg_820");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_378_p2, "i_fu_378_p2");
    sc_trace(mVcdFile, i_reg_828, "i_reg_828");
    sc_trace(mVcdFile, icmp_ln17_fu_384_p2, "icmp_ln17_fu_384_p2");
    sc_trace(mVcdFile, icmp_ln17_reg_833, "icmp_ln17_reg_833");
    sc_trace(mVcdFile, icmp_ln11_fu_372_p2, "icmp_ln11_fu_372_p2");
    sc_trace(mVcdFile, j_3_fu_399_p2, "j_3_fu_399_p2");
    sc_trace(mVcdFile, ap_predicate_op70_read_state3, "ap_predicate_op70_read_state3");
    sc_trace(mVcdFile, ap_predicate_op72_read_state3, "ap_predicate_op72_read_state3");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, add_ln27_fu_432_p2, "add_ln27_fu_432_p2");
    sc_trace(mVcdFile, add_ln27_reg_849, "add_ln27_reg_849");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_3_fu_448_p2, "i_3_fu_448_p2");
    sc_trace(mVcdFile, i_3_reg_857, "i_3_reg_857");
    sc_trace(mVcdFile, icmp_ln35_fu_454_p2, "icmp_ln35_fu_454_p2");
    sc_trace(mVcdFile, icmp_ln35_reg_862, "icmp_ln35_reg_862");
    sc_trace(mVcdFile, icmp_ln27_fu_442_p2, "icmp_ln27_fu_442_p2");
    sc_trace(mVcdFile, j_fu_469_p2, "j_fu_469_p2");
    sc_trace(mVcdFile, j_reg_870, "j_reg_870");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, and_ln35_fu_480_p2, "and_ln35_fu_480_p2");
    sc_trace(mVcdFile, and_ln35_reg_875, "and_ln35_reg_875");
    sc_trace(mVcdFile, icmp_ln29_fu_463_p2, "icmp_ln29_fu_463_p2");
    sc_trace(mVcdFile, zext_ln36_fu_485_p1, "zext_ln36_fu_485_p1");
    sc_trace(mVcdFile, zext_ln36_reg_883, "zext_ln36_reg_883");
    sc_trace(mVcdFile, arrayC_addr_1_reg_891, "arrayC_addr_1_reg_891");
    sc_trace(mVcdFile, and_ln35_1_fu_515_p2, "and_ln35_1_fu_515_p2");
    sc_trace(mVcdFile, and_ln35_1_reg_899, "and_ln35_1_reg_899");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln31_fu_504_p2, "icmp_ln31_fu_504_p2");
    sc_trace(mVcdFile, grp_fu_356_p2, "grp_fu_356_p2");
    sc_trace(mVcdFile, mul_ln36_reg_913, "mul_ln36_reg_913");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, arrayC_q0, "arrayC_q0");
    sc_trace(mVcdFile, arrayC_load_1_reg_918, "arrayC_load_1_reg_918");
    sc_trace(mVcdFile, and_ln35_2_fu_563_p2, "and_ln35_2_fu_563_p2");
    sc_trace(mVcdFile, and_ln35_2_reg_923, "and_ln35_2_reg_923");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, mul_ln36_1_reg_937, "mul_ln36_1_reg_937");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, arrayC_load_2_reg_942, "arrayC_load_2_reg_942");
    sc_trace(mVcdFile, and_ln35_3_fu_611_p2, "and_ln35_3_fu_611_p2");
    sc_trace(mVcdFile, and_ln35_3_reg_947, "and_ln35_3_reg_947");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, mul_ln36_2_reg_961, "mul_ln36_2_reg_961");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, arrayC_load_3_reg_966, "arrayC_load_3_reg_966");
    sc_trace(mVcdFile, and_ln35_4_fu_659_p2, "and_ln35_4_fu_659_p2");
    sc_trace(mVcdFile, and_ln35_4_reg_971, "and_ln35_4_reg_971");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, mul_ln36_3_reg_985, "mul_ln36_3_reg_985");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, arrayC_load_4_reg_990, "arrayC_load_4_reg_990");
    sc_trace(mVcdFile, add_ln31_fu_692_p2, "add_ln31_fu_692_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, add_ln42_fu_698_p2, "add_ln42_fu_698_p2");
    sc_trace(mVcdFile, add_ln42_reg_1000, "add_ln42_reg_1000");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, i_4_fu_714_p2, "i_4_fu_714_p2");
    sc_trace(mVcdFile, i_4_reg_1008, "i_4_reg_1008");
    sc_trace(mVcdFile, icmp_ln47_fu_720_p2, "icmp_ln47_fu_720_p2");
    sc_trace(mVcdFile, icmp_ln47_reg_1013, "icmp_ln47_reg_1013");
    sc_trace(mVcdFile, icmp_ln42_fu_708_p2, "icmp_ln42_fu_708_p2");
    sc_trace(mVcdFile, j_4_fu_735_p2, "j_4_fu_735_p2");
    sc_trace(mVcdFile, j_4_reg_1021, "j_4_reg_1021");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, and_ln47_fu_746_p2, "and_ln47_fu_746_p2");
    sc_trace(mVcdFile, icmp_ln44_fu_729_p2, "icmp_ln44_fu_729_p2");
    sc_trace(mVcdFile, arrayA_address0, "arrayA_address0");
    sc_trace(mVcdFile, arrayA_ce0, "arrayA_ce0");
    sc_trace(mVcdFile, arrayA_we0, "arrayA_we0");
    sc_trace(mVcdFile, arrayB_address0, "arrayB_address0");
    sc_trace(mVcdFile, arrayB_ce0, "arrayB_ce0");
    sc_trace(mVcdFile, arrayB_we0, "arrayB_we0");
    sc_trace(mVcdFile, arrayC_address0, "arrayC_address0");
    sc_trace(mVcdFile, arrayC_ce0, "arrayC_ce0");
    sc_trace(mVcdFile, arrayC_we0, "arrayC_we0");
    sc_trace(mVcdFile, arrayC_d0, "arrayC_d0");
    sc_trace(mVcdFile, i_0_reg_234, "i_0_reg_234");
    sc_trace(mVcdFile, phi_mul_reg_245, "phi_mul_reg_245");
    sc_trace(mVcdFile, j_0_reg_257, "j_0_reg_257");
    sc_trace(mVcdFile, i_1_reg_268, "i_1_reg_268");
    sc_trace(mVcdFile, phi_mul1_reg_279, "phi_mul1_reg_279");
    sc_trace(mVcdFile, j_1_reg_291, "j_1_reg_291");
    sc_trace(mVcdFile, k_0_0_reg_302, "k_0_0_reg_302");
    sc_trace(mVcdFile, i_2_reg_314, "i_2_reg_314");
    sc_trace(mVcdFile, phi_mul3_reg_325, "phi_mul3_reg_325");
    sc_trace(mVcdFile, j_2_reg_337, "j_2_reg_337");
    sc_trace(mVcdFile, ap_block_state21, "ap_block_state21");
    sc_trace(mVcdFile, zext_ln18_1_fu_425_p1, "zext_ln18_1_fu_425_p1");
    sc_trace(mVcdFile, zext_ln36_1_fu_495_p1, "zext_ln36_1_fu_495_p1");
    sc_trace(mVcdFile, zext_ln36_4_fu_534_p1, "zext_ln36_4_fu_534_p1");
    sc_trace(mVcdFile, zext_ln36_5_fu_539_p1, "zext_ln36_5_fu_539_p1");
    sc_trace(mVcdFile, zext_ln36_8_fu_582_p1, "zext_ln36_8_fu_582_p1");
    sc_trace(mVcdFile, zext_ln36_9_fu_587_p1, "zext_ln36_9_fu_587_p1");
    sc_trace(mVcdFile, zext_ln36_12_fu_630_p1, "zext_ln36_12_fu_630_p1");
    sc_trace(mVcdFile, zext_ln36_13_fu_635_p1, "zext_ln36_13_fu_635_p1");
    sc_trace(mVcdFile, zext_ln36_16_fu_678_p1, "zext_ln36_16_fu_678_p1");
    sc_trace(mVcdFile, zext_ln36_17_fu_683_p1, "zext_ln36_17_fu_683_p1");
    sc_trace(mVcdFile, zext_ln48_1_fu_761_p1, "zext_ln48_1_fu_761_p1");
    sc_trace(mVcdFile, add_ln36_fu_543_p2, "add_ln36_fu_543_p2");
    sc_trace(mVcdFile, add_ln36_1_fu_591_p2, "add_ln36_1_fu_591_p2");
    sc_trace(mVcdFile, add_ln36_2_fu_639_p2, "add_ln36_2_fu_639_p2");
    sc_trace(mVcdFile, add_ln36_3_fu_687_p2, "add_ln36_3_fu_687_p2");
    sc_trace(mVcdFile, zext_ln11_fu_368_p1, "zext_ln11_fu_368_p1");
    sc_trace(mVcdFile, zext_ln13_fu_389_p1, "zext_ln13_fu_389_p1");
    sc_trace(mVcdFile, icmp_ln17_1_fu_405_p2, "icmp_ln17_1_fu_405_p2");
    sc_trace(mVcdFile, zext_ln18_fu_415_p1, "zext_ln18_fu_415_p1");
    sc_trace(mVcdFile, add_ln18_fu_419_p2, "add_ln18_fu_419_p2");
    sc_trace(mVcdFile, zext_ln27_fu_438_p1, "zext_ln27_fu_438_p1");
    sc_trace(mVcdFile, zext_ln29_fu_459_p1, "zext_ln29_fu_459_p1");
    sc_trace(mVcdFile, icmp_ln35_1_fu_475_p2, "icmp_ln35_1_fu_475_p2");
    sc_trace(mVcdFile, add_ln36_4_fu_489_p2, "add_ln36_4_fu_489_p2");
    sc_trace(mVcdFile, k_0_0_cast_fu_500_p1, "k_0_0_cast_fu_500_p1");
    sc_trace(mVcdFile, icmp_ln35_2_fu_510_p2, "icmp_ln35_2_fu_510_p2");
    sc_trace(mVcdFile, zext_ln36_3_fu_524_p1, "zext_ln36_3_fu_524_p1");
    sc_trace(mVcdFile, add_ln36_5_fu_528_p2, "add_ln36_5_fu_528_p2");
    sc_trace(mVcdFile, grp_fu_766_p3, "grp_fu_766_p3");
    sc_trace(mVcdFile, or_ln31_fu_548_p2, "or_ln31_fu_548_p2");
    sc_trace(mVcdFile, zext_ln31_fu_554_p1, "zext_ln31_fu_554_p1");
    sc_trace(mVcdFile, icmp_ln35_3_fu_558_p2, "icmp_ln35_3_fu_558_p2");
    sc_trace(mVcdFile, zext_ln36_7_fu_572_p1, "zext_ln36_7_fu_572_p1");
    sc_trace(mVcdFile, add_ln36_7_fu_576_p2, "add_ln36_7_fu_576_p2");
    sc_trace(mVcdFile, grp_fu_774_p3, "grp_fu_774_p3");
    sc_trace(mVcdFile, or_ln31_1_fu_596_p2, "or_ln31_1_fu_596_p2");
    sc_trace(mVcdFile, zext_ln31_1_fu_602_p1, "zext_ln31_1_fu_602_p1");
    sc_trace(mVcdFile, icmp_ln35_4_fu_606_p2, "icmp_ln35_4_fu_606_p2");
    sc_trace(mVcdFile, zext_ln36_11_fu_620_p1, "zext_ln36_11_fu_620_p1");
    sc_trace(mVcdFile, add_ln36_9_fu_624_p2, "add_ln36_9_fu_624_p2");
    sc_trace(mVcdFile, grp_fu_782_p3, "grp_fu_782_p3");
    sc_trace(mVcdFile, or_ln31_2_fu_644_p2, "or_ln31_2_fu_644_p2");
    sc_trace(mVcdFile, zext_ln31_2_fu_650_p1, "zext_ln31_2_fu_650_p1");
    sc_trace(mVcdFile, icmp_ln35_5_fu_654_p2, "icmp_ln35_5_fu_654_p2");
    sc_trace(mVcdFile, zext_ln36_15_fu_668_p1, "zext_ln36_15_fu_668_p1");
    sc_trace(mVcdFile, add_ln36_11_fu_672_p2, "add_ln36_11_fu_672_p2");
    sc_trace(mVcdFile, grp_fu_790_p3, "grp_fu_790_p3");
    sc_trace(mVcdFile, zext_ln42_fu_704_p1, "zext_ln42_fu_704_p1");
    sc_trace(mVcdFile, zext_ln44_fu_725_p1, "zext_ln44_fu_725_p1");
    sc_trace(mVcdFile, icmp_ln47_1_fu_741_p2, "icmp_ln47_1_fu_741_p2");
    sc_trace(mVcdFile, zext_ln48_fu_751_p1, "zext_ln48_fu_751_p1");
    sc_trace(mVcdFile, add_ln48_fu_755_p2, "add_ln48_fu_755_p2");
    sc_trace(mVcdFile, grp_fu_766_p0, "grp_fu_766_p0");
    sc_trace(mVcdFile, grp_fu_766_p1, "grp_fu_766_p1");
    sc_trace(mVcdFile, grp_fu_766_p2, "grp_fu_766_p2");
    sc_trace(mVcdFile, grp_fu_774_p0, "grp_fu_774_p0");
    sc_trace(mVcdFile, grp_fu_774_p1, "grp_fu_774_p1");
    sc_trace(mVcdFile, grp_fu_774_p2, "grp_fu_774_p2");
    sc_trace(mVcdFile, grp_fu_782_p0, "grp_fu_782_p0");
    sc_trace(mVcdFile, grp_fu_782_p1, "grp_fu_782_p1");
    sc_trace(mVcdFile, grp_fu_782_p2, "grp_fu_782_p2");
    sc_trace(mVcdFile, grp_fu_790_p0, "grp_fu_790_p0");
    sc_trace(mVcdFile, grp_fu_790_p1, "grp_fu_790_p1");
    sc_trace(mVcdFile, grp_fu_790_p2, "grp_fu_790_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_766_p00, "grp_fu_766_p00");
    sc_trace(mVcdFile, grp_fu_774_p00, "grp_fu_774_p00");
    sc_trace(mVcdFile, grp_fu_782_p00, "grp_fu_782_p00");
    sc_trace(mVcdFile, grp_fu_790_p00, "grp_fu_790_p00");
#endif

    }
    mHdltvinHandle.open("multiply_partB_2.hdltvin.dat");
    mHdltvoutHandle.open("multiply_partB_2.hdltvout.dat");
}

multiply_partB_2::~multiply_partB_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete arrayA_U;
    delete arrayB_U;
    delete arrayC_U;
    delete multiply_partB_2_eOg_U1;
    delete multiply_partB_2_eOg_U2;
    delete multiply_partB_2_eOg_U3;
    delete multiply_partB_2_eOg_U4;
}

void multiply_partB_2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read()))) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_393_p2.read(), ap_const_lv1_1))) {
        i_0_reg_234 = i_reg_828.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_234 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln11_fu_372_p2.read()))) {
        i_1_reg_268 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln29_fu_463_p2.read()))) {
        i_1_reg_268 = i_3_reg_857.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_442_p2.read()))) {
        i_2_reg_314 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln44_fu_729_p2.read()))) {
        i_2_reg_314 = i_4_reg_1008.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_393_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read()))))) {
        j_0_reg_257 = j_3_fu_399_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_fu_372_p2.read()))) {
        j_0_reg_257 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_504_p2.read()))) {
        j_1_reg_291 = j_reg_870.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_442_p2.read()))) {
        j_1_reg_291 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, and_ln47_reg_1026.read()) && esl_seteq<1,1,1>(ap_const_logic_0, C_full_n.read())))) {
        j_2_reg_337 = j_4_reg_1021.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln42_fu_708_p2.read()))) {
        j_2_reg_337 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_463_p2.read()))) {
        k_0_0_reg_302 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        k_0_0_reg_302 = add_ln31_fu_692_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln11_fu_372_p2.read()))) {
        phi_mul1_reg_279 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln29_fu_463_p2.read()))) {
        phi_mul1_reg_279 = add_ln27_reg_849.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_442_p2.read()))) {
        phi_mul3_reg_325 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln44_fu_729_p2.read()))) {
        phi_mul3_reg_325 = add_ln42_reg_1000.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read()))) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_393_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_245 = add_ln11_reg_820.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_245 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln11_reg_820 = add_ln11_fu_362_p2.read();
        i_reg_828 = i_fu_378_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln27_reg_849 = add_ln27_fu_432_p2.read();
        i_3_reg_857 = i_3_fu_448_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        add_ln42_reg_1000 = add_ln42_fu_698_p2.read();
        i_4_reg_1008 = i_4_fu_714_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_504_p2.read()))) {
        and_ln35_1_reg_899 = and_ln35_1_fu_515_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        and_ln35_2_reg_923 = and_ln35_2_fu_563_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        and_ln35_3_reg_947 = and_ln35_3_fu_611_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        and_ln35_4_reg_971 = and_ln35_4_fu_659_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_463_p2.read()))) {
        and_ln35_reg_875 = and_ln35_fu_480_p2.read();
        arrayC_addr_1_reg_891 =  (sc_lv<14>) (zext_ln36_1_fu_495_p1.read());
        zext_ln36_reg_883 = zext_ln36_fu_485_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_fu_729_p2.read()))) {
        and_ln47_reg_1026 = and_ln47_fu_746_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arrayC_load_1_reg_918 = arrayC_q0.read();
        mul_ln36_reg_913 = grp_fu_356_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        arrayC_load_2_reg_942 = arrayC_q0.read();
        mul_ln36_1_reg_937 = grp_fu_356_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        arrayC_load_3_reg_966 = arrayC_q0.read();
        mul_ln36_2_reg_961 = grp_fu_356_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        arrayC_load_4_reg_990 = arrayC_q0.read();
        mul_ln36_3_reg_985 = grp_fu_356_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_fu_372_p2.read()))) {
        icmp_ln17_reg_833 = icmp_ln17_fu_384_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_442_p2.read()))) {
        icmp_ln35_reg_862 = icmp_ln35_fu_454_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln42_fu_708_p2.read()))) {
        icmp_ln47_reg_1013 = icmp_ln47_fu_720_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        j_4_reg_1021 = j_4_fu_735_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_reg_870 = j_fu_469_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        reg_348 = arrayA_q0.read();
        reg_352 = arrayB_q0.read();
    }
}

void multiply_partB_2::thread_A_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_393_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(and_ln17_fu_410_p2.read(), ap_const_lv1_1))) {
        A_blk_n = A_empty_n.read();
    } else {
        A_blk_n = ap_const_logic_1;
    }
}

void multiply_partB_2::thread_A_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read()))))) {
        A_read = ap_const_logic_1;
    } else {
        A_read = ap_const_logic_0;
    }
}

void multiply_partB_2::thread_B_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_393_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(and_ln17_fu_410_p2.read(), ap_const_lv1_1))) {
        B_blk_n = B_empty_n.read();
    } else {
        B_blk_n = ap_const_logic_1;
    }
}

void multiply_partB_2::thread_B_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read()))))) {
        B_read = ap_const_logic_1;
    } else {
        B_read = ap_const_logic_0;
    }
}

void multiply_partB_2::thread_C_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, and_ln47_reg_1026.read()))) {
        C_blk_n = C_full_n.read();
    } else {
        C_blk_n = ap_const_logic_1;
    }
}

void multiply_partB_2::thread_C_din() {
    C_din = arrayC_q0.read();
}

void multiply_partB_2::thread_C_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, and_ln47_reg_1026.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, and_ln47_reg_1026.read()) && esl_seteq<1,1,1>(ap_const_logic_0, C_full_n.read())))) {
        C_write = ap_const_logic_1;
    } else {
        C_write = ap_const_logic_0;
    }
}

void multiply_partB_2::thread_add_ln11_fu_362_p2() {
    add_ln11_fu_362_p2 = (!phi_mul_reg_245.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_245.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void multiply_partB_2::thread_add_ln18_fu_419_p2() {
    add_ln18_fu_419_p2 = (!phi_mul_reg_245.read().is_01() || !zext_ln18_fu_415_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_245.read()) + sc_biguint<14>(zext_ln18_fu_415_p1.read()));
}

void multiply_partB_2::thread_add_ln27_fu_432_p2() {
    add_ln27_fu_432_p2 = (!phi_mul1_reg_279.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_279.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void multiply_partB_2::thread_add_ln31_fu_692_p2() {
    add_ln31_fu_692_p2 = (!k_0_0_reg_302.read().is_01() || !ap_const_lv7_4.is_01())? sc_lv<7>(): (sc_biguint<7>(k_0_0_reg_302.read()) + sc_biguint<7>(ap_const_lv7_4));
}

void multiply_partB_2::thread_add_ln36_11_fu_672_p2() {
    add_ln36_11_fu_672_p2 = (!phi_mul1_reg_279.read().is_01() || !zext_ln36_15_fu_668_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_279.read()) + sc_biguint<14>(zext_ln36_15_fu_668_p1.read()));
}

void multiply_partB_2::thread_add_ln36_1_fu_591_p2() {
    add_ln36_1_fu_591_p2 = (!mul_ln36_1_reg_937.read().is_01() || !arrayC_load_2_reg_942.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln36_1_reg_937.read()) + sc_biguint<32>(arrayC_load_2_reg_942.read()));
}

void multiply_partB_2::thread_add_ln36_2_fu_639_p2() {
    add_ln36_2_fu_639_p2 = (!mul_ln36_2_reg_961.read().is_01() || !arrayC_load_3_reg_966.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln36_2_reg_961.read()) + sc_biguint<32>(arrayC_load_3_reg_966.read()));
}

void multiply_partB_2::thread_add_ln36_3_fu_687_p2() {
    add_ln36_3_fu_687_p2 = (!mul_ln36_3_reg_985.read().is_01() || !arrayC_load_4_reg_990.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln36_3_reg_985.read()) + sc_biguint<32>(arrayC_load_4_reg_990.read()));
}

void multiply_partB_2::thread_add_ln36_4_fu_489_p2() {
    add_ln36_4_fu_489_p2 = (!phi_mul1_reg_279.read().is_01() || !zext_ln36_fu_485_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_279.read()) + sc_biguint<14>(zext_ln36_fu_485_p1.read()));
}

void multiply_partB_2::thread_add_ln36_5_fu_528_p2() {
    add_ln36_5_fu_528_p2 = (!phi_mul1_reg_279.read().is_01() || !zext_ln36_3_fu_524_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_279.read()) + sc_biguint<14>(zext_ln36_3_fu_524_p1.read()));
}

void multiply_partB_2::thread_add_ln36_7_fu_576_p2() {
    add_ln36_7_fu_576_p2 = (!phi_mul1_reg_279.read().is_01() || !zext_ln36_7_fu_572_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_279.read()) + sc_biguint<14>(zext_ln36_7_fu_572_p1.read()));
}

void multiply_partB_2::thread_add_ln36_9_fu_624_p2() {
    add_ln36_9_fu_624_p2 = (!phi_mul1_reg_279.read().is_01() || !zext_ln36_11_fu_620_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_279.read()) + sc_biguint<14>(zext_ln36_11_fu_620_p1.read()));
}

void multiply_partB_2::thread_add_ln36_fu_543_p2() {
    add_ln36_fu_543_p2 = (!mul_ln36_reg_913.read().is_01() || !arrayC_load_1_reg_918.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln36_reg_913.read()) + sc_biguint<32>(arrayC_load_1_reg_918.read()));
}

void multiply_partB_2::thread_add_ln42_fu_698_p2() {
    add_ln42_fu_698_p2 = (!phi_mul3_reg_325.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul3_reg_325.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void multiply_partB_2::thread_add_ln48_fu_755_p2() {
    add_ln48_fu_755_p2 = (!phi_mul3_reg_325.read().is_01() || !zext_ln48_fu_751_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul3_reg_325.read()) + sc_biguint<14>(zext_ln48_fu_751_p1.read()));
}

void multiply_partB_2::thread_and_ln17_fu_410_p2() {
    and_ln17_fu_410_p2 = (icmp_ln17_reg_833.read() & icmp_ln17_1_fu_405_p2.read());
}

void multiply_partB_2::thread_and_ln35_1_fu_515_p2() {
    and_ln35_1_fu_515_p2 = (and_ln35_reg_875.read() & icmp_ln35_2_fu_510_p2.read());
}

void multiply_partB_2::thread_and_ln35_2_fu_563_p2() {
    and_ln35_2_fu_563_p2 = (and_ln35_reg_875.read() & icmp_ln35_3_fu_558_p2.read());
}

void multiply_partB_2::thread_and_ln35_3_fu_611_p2() {
    and_ln35_3_fu_611_p2 = (and_ln35_reg_875.read() & icmp_ln35_4_fu_606_p2.read());
}

void multiply_partB_2::thread_and_ln35_4_fu_659_p2() {
    and_ln35_4_fu_659_p2 = (and_ln35_reg_875.read() & icmp_ln35_5_fu_654_p2.read());
}

void multiply_partB_2::thread_and_ln35_fu_480_p2() {
    and_ln35_fu_480_p2 = (icmp_ln35_reg_862.read() & icmp_ln35_1_fu_475_p2.read());
}

void multiply_partB_2::thread_and_ln47_fu_746_p2() {
    and_ln47_fu_746_p2 = (icmp_ln47_reg_1013.read() & icmp_ln47_1_fu_741_p2.read());
}

void multiply_partB_2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void multiply_partB_2::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void multiply_partB_2::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void multiply_partB_2::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void multiply_partB_2::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void multiply_partB_2::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void multiply_partB_2::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void multiply_partB_2::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void multiply_partB_2::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void multiply_partB_2::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void multiply_partB_2::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void multiply_partB_2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void multiply_partB_2::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void multiply_partB_2::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void multiply_partB_2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void multiply_partB_2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void multiply_partB_2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void multiply_partB_2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void multiply_partB_2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void multiply_partB_2::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void multiply_partB_2::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void multiply_partB_2::thread_ap_block_state21() {
    ap_block_state21 = (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln47_reg_1026.read()) && esl_seteq<1,1,1>(ap_const_logic_0, C_full_n.read()));
}

void multiply_partB_2::thread_ap_block_state3() {
    ap_block_state3 = ((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read())));
}

void multiply_partB_2::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln42_fu_708_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void multiply_partB_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void multiply_partB_2::thread_ap_predicate_op70_read_state3() {
    ap_predicate_op70_read_state3 = (esl_seteq<1,1,1>(icmp_ln13_fu_393_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(and_ln17_fu_410_p2.read(), ap_const_lv1_1));
}

void multiply_partB_2::thread_ap_predicate_op72_read_state3() {
    ap_predicate_op72_read_state3 = (esl_seteq<1,1,1>(icmp_ln13_fu_393_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(and_ln17_fu_410_p2.read(), ap_const_lv1_1));
}

void multiply_partB_2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln42_fu_708_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void multiply_partB_2::thread_arrayA_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        arrayA_address0 =  (sc_lv<14>) (zext_ln36_16_fu_678_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        arrayA_address0 =  (sc_lv<14>) (zext_ln36_12_fu_630_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        arrayA_address0 =  (sc_lv<14>) (zext_ln36_8_fu_582_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        arrayA_address0 =  (sc_lv<14>) (zext_ln36_4_fu_534_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        arrayA_address0 =  (sc_lv<14>) (zext_ln18_1_fu_425_p1.read());
    } else {
        arrayA_address0 = "XXXXXXXXXXXXXX";
    }
}

void multiply_partB_2::thread_arrayA_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read())))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        arrayA_ce0 = ap_const_logic_1;
    } else {
        arrayA_ce0 = ap_const_logic_0;
    }
}

void multiply_partB_2::thread_arrayA_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_393_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(and_ln17_fu_410_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read()))))) {
        arrayA_we0 = ap_const_logic_1;
    } else {
        arrayA_we0 = ap_const_logic_0;
    }
}

void multiply_partB_2::thread_arrayB_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        arrayB_address0 =  (sc_lv<14>) (zext_ln36_17_fu_683_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        arrayB_address0 =  (sc_lv<14>) (zext_ln36_13_fu_635_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        arrayB_address0 =  (sc_lv<14>) (zext_ln36_9_fu_587_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        arrayB_address0 =  (sc_lv<14>) (zext_ln36_5_fu_539_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        arrayB_address0 =  (sc_lv<14>) (zext_ln18_1_fu_425_p1.read());
    } else {
        arrayB_address0 = "XXXXXXXXXXXXXX";
    }
}

void multiply_partB_2::thread_arrayB_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read())))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        arrayB_ce0 = ap_const_logic_1;
    } else {
        arrayB_ce0 = ap_const_logic_0;
    }
}

void multiply_partB_2::thread_arrayB_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_393_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(and_ln17_fu_410_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read()))))) {
        arrayB_we0 = ap_const_logic_1;
    } else {
        arrayB_we0 = ap_const_logic_0;
    }
}

void multiply_partB_2::thread_arrayC_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        arrayC_address0 =  (sc_lv<14>) (zext_ln48_1_fu_761_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        arrayC_address0 = arrayC_addr_1_reg_891.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        arrayC_address0 =  (sc_lv<14>) (zext_ln18_1_fu_425_p1.read());
    } else {
        arrayC_address0 = "XXXXXXXXXXXXXX";
    }
}

void multiply_partB_2::thread_arrayC_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read())))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        arrayC_ce0 = ap_const_logic_1;
    } else {
        arrayC_ce0 = ap_const_logic_0;
    }
}

void multiply_partB_2::thread_arrayC_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        arrayC_d0 = add_ln36_3_fu_687_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        arrayC_d0 = add_ln36_2_fu_639_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        arrayC_d0 = add_ln36_1_fu_591_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        arrayC_d0 = add_ln36_fu_543_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        arrayC_d0 = ap_const_lv32_0;
    } else {
        arrayC_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void multiply_partB_2::thread_arrayC_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(icmp_ln13_fu_393_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(and_ln17_fu_410_p2.read(), ap_const_lv1_1) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln35_1_reg_899.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln35_2_reg_923.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln35_3_reg_947.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln35_4_reg_971.read())))) {
        arrayC_we0 = ap_const_logic_1;
    } else {
        arrayC_we0 = ap_const_logic_0;
    }
}

void multiply_partB_2::thread_grp_fu_356_p2() {
    grp_fu_356_p2 = (!reg_352.read().is_01() || !reg_348.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_352.read()) * sc_bigint<32>(reg_348.read());
}

void multiply_partB_2::thread_grp_fu_766_p0() {
    grp_fu_766_p0 =  (sc_lv<7>) (grp_fu_766_p00.read());
}

void multiply_partB_2::thread_grp_fu_766_p00() {
    grp_fu_766_p00 = esl_zext<14,7>(k_0_0_reg_302.read());
}

void multiply_partB_2::thread_grp_fu_766_p1() {
    grp_fu_766_p1 =  (sc_lv<8>) (ap_const_lv14_64);
}

void multiply_partB_2::thread_grp_fu_766_p2() {
    grp_fu_766_p2 =  (sc_lv<7>) (zext_ln36_reg_883.read());
}

void multiply_partB_2::thread_grp_fu_774_p0() {
    grp_fu_774_p0 =  (sc_lv<7>) (grp_fu_774_p00.read());
}

void multiply_partB_2::thread_grp_fu_774_p00() {
    grp_fu_774_p00 = esl_zext<14,7>(or_ln31_fu_548_p2.read());
}

void multiply_partB_2::thread_grp_fu_774_p1() {
    grp_fu_774_p1 =  (sc_lv<8>) (ap_const_lv14_64);
}

void multiply_partB_2::thread_grp_fu_774_p2() {
    grp_fu_774_p2 =  (sc_lv<7>) (zext_ln36_reg_883.read());
}

void multiply_partB_2::thread_grp_fu_782_p0() {
    grp_fu_782_p0 =  (sc_lv<7>) (grp_fu_782_p00.read());
}

void multiply_partB_2::thread_grp_fu_782_p00() {
    grp_fu_782_p00 = esl_zext<14,7>(or_ln31_1_fu_596_p2.read());
}

void multiply_partB_2::thread_grp_fu_782_p1() {
    grp_fu_782_p1 =  (sc_lv<8>) (ap_const_lv14_64);
}

void multiply_partB_2::thread_grp_fu_782_p2() {
    grp_fu_782_p2 =  (sc_lv<7>) (zext_ln36_reg_883.read());
}

void multiply_partB_2::thread_grp_fu_790_p0() {
    grp_fu_790_p0 =  (sc_lv<7>) (grp_fu_790_p00.read());
}

void multiply_partB_2::thread_grp_fu_790_p00() {
    grp_fu_790_p00 = esl_zext<14,7>(or_ln31_2_fu_644_p2.read());
}

void multiply_partB_2::thread_grp_fu_790_p1() {
    grp_fu_790_p1 =  (sc_lv<8>) (ap_const_lv14_64);
}

void multiply_partB_2::thread_grp_fu_790_p2() {
    grp_fu_790_p2 =  (sc_lv<7>) (zext_ln36_reg_883.read());
}

void multiply_partB_2::thread_i_3_fu_448_p2() {
    i_3_fu_448_p2 = (!i_1_reg_268.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_1_reg_268.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void multiply_partB_2::thread_i_4_fu_714_p2() {
    i_4_fu_714_p2 = (!i_2_reg_314.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_2_reg_314.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void multiply_partB_2::thread_i_fu_378_p2() {
    i_fu_378_p2 = (!i_0_reg_234.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_234.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void multiply_partB_2::thread_icmp_ln11_fu_372_p2() {
    icmp_ln11_fu_372_p2 = (!i_0_reg_234.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_234.read() == ap_const_lv7_64);
}

void multiply_partB_2::thread_icmp_ln13_fu_393_p2() {
    icmp_ln13_fu_393_p2 = (!j_0_reg_257.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_257.read() == ap_const_lv7_64);
}

void multiply_partB_2::thread_icmp_ln17_1_fu_405_p2() {
    icmp_ln17_1_fu_405_p2 = (!zext_ln13_fu_389_p1.read().is_01() || !nC.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln13_fu_389_p1.read()) < sc_bigint<32>(nC.read()));
}

void multiply_partB_2::thread_icmp_ln17_fu_384_p2() {
    icmp_ln17_fu_384_p2 = (!zext_ln11_fu_368_p1.read().is_01() || !mC.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln11_fu_368_p1.read()) < sc_bigint<32>(mC.read()));
}

void multiply_partB_2::thread_icmp_ln27_fu_442_p2() {
    icmp_ln27_fu_442_p2 = (!i_1_reg_268.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_268.read() == ap_const_lv7_64);
}

void multiply_partB_2::thread_icmp_ln29_fu_463_p2() {
    icmp_ln29_fu_463_p2 = (!j_1_reg_291.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_291.read() == ap_const_lv7_64);
}

void multiply_partB_2::thread_icmp_ln31_fu_504_p2() {
    icmp_ln31_fu_504_p2 = (!k_0_0_reg_302.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(k_0_0_reg_302.read() == ap_const_lv7_64);
}

void multiply_partB_2::thread_icmp_ln35_1_fu_475_p2() {
    icmp_ln35_1_fu_475_p2 = (!zext_ln29_fu_459_p1.read().is_01() || !nC.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln29_fu_459_p1.read()) < sc_bigint<32>(nC.read()));
}

void multiply_partB_2::thread_icmp_ln35_2_fu_510_p2() {
    icmp_ln35_2_fu_510_p2 = (!k_0_0_cast_fu_500_p1.read().is_01() || !nA.read().is_01())? sc_lv<1>(): (sc_bigint<32>(k_0_0_cast_fu_500_p1.read()) < sc_bigint<32>(nA.read()));
}

void multiply_partB_2::thread_icmp_ln35_3_fu_558_p2() {
    icmp_ln35_3_fu_558_p2 = (!zext_ln31_fu_554_p1.read().is_01() || !nA.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln31_fu_554_p1.read()) < sc_bigint<32>(nA.read()));
}

void multiply_partB_2::thread_icmp_ln35_4_fu_606_p2() {
    icmp_ln35_4_fu_606_p2 = (!zext_ln31_1_fu_602_p1.read().is_01() || !nA.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln31_1_fu_602_p1.read()) < sc_bigint<32>(nA.read()));
}

void multiply_partB_2::thread_icmp_ln35_5_fu_654_p2() {
    icmp_ln35_5_fu_654_p2 = (!zext_ln31_2_fu_650_p1.read().is_01() || !nA.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln31_2_fu_650_p1.read()) < sc_bigint<32>(nA.read()));
}

void multiply_partB_2::thread_icmp_ln35_fu_454_p2() {
    icmp_ln35_fu_454_p2 = (!zext_ln27_fu_438_p1.read().is_01() || !mC.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln27_fu_438_p1.read()) < sc_bigint<32>(mC.read()));
}

void multiply_partB_2::thread_icmp_ln42_fu_708_p2() {
    icmp_ln42_fu_708_p2 = (!i_2_reg_314.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_314.read() == ap_const_lv7_64);
}

void multiply_partB_2::thread_icmp_ln44_fu_729_p2() {
    icmp_ln44_fu_729_p2 = (!j_2_reg_337.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(j_2_reg_337.read() == ap_const_lv7_64);
}

void multiply_partB_2::thread_icmp_ln47_1_fu_741_p2() {
    icmp_ln47_1_fu_741_p2 = (!zext_ln44_fu_725_p1.read().is_01() || !nC.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln44_fu_725_p1.read()) < sc_bigint<32>(nC.read()));
}

void multiply_partB_2::thread_icmp_ln47_fu_720_p2() {
    icmp_ln47_fu_720_p2 = (!zext_ln42_fu_704_p1.read().is_01() || !mC.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln42_fu_704_p1.read()) < sc_bigint<32>(mC.read()));
}

void multiply_partB_2::thread_j_3_fu_399_p2() {
    j_3_fu_399_p2 = (!j_0_reg_257.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_257.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void multiply_partB_2::thread_j_4_fu_735_p2() {
    j_4_fu_735_p2 = (!j_2_reg_337.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_2_reg_337.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void multiply_partB_2::thread_j_fu_469_p2() {
    j_fu_469_p2 = (!j_1_reg_291.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_1_reg_291.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void multiply_partB_2::thread_k_0_0_cast_fu_500_p1() {
    k_0_0_cast_fu_500_p1 = esl_zext<32,7>(k_0_0_reg_302.read());
}

void multiply_partB_2::thread_or_ln31_1_fu_596_p2() {
    or_ln31_1_fu_596_p2 = (k_0_0_reg_302.read() | ap_const_lv7_2);
}

void multiply_partB_2::thread_or_ln31_2_fu_644_p2() {
    or_ln31_2_fu_644_p2 = (k_0_0_reg_302.read() | ap_const_lv7_3);
}

void multiply_partB_2::thread_or_ln31_fu_548_p2() {
    or_ln31_fu_548_p2 = (k_0_0_reg_302.read() | ap_const_lv7_1);
}

void multiply_partB_2::thread_zext_ln11_fu_368_p1() {
    zext_ln11_fu_368_p1 = esl_zext<32,7>(i_0_reg_234.read());
}

void multiply_partB_2::thread_zext_ln13_fu_389_p1() {
    zext_ln13_fu_389_p1 = esl_zext<32,7>(j_0_reg_257.read());
}

void multiply_partB_2::thread_zext_ln18_1_fu_425_p1() {
    zext_ln18_1_fu_425_p1 = esl_zext<64,14>(add_ln18_fu_419_p2.read());
}

void multiply_partB_2::thread_zext_ln18_fu_415_p1() {
    zext_ln18_fu_415_p1 = esl_zext<14,7>(j_0_reg_257.read());
}

void multiply_partB_2::thread_zext_ln27_fu_438_p1() {
    zext_ln27_fu_438_p1 = esl_zext<32,7>(i_1_reg_268.read());
}

void multiply_partB_2::thread_zext_ln29_fu_459_p1() {
    zext_ln29_fu_459_p1 = esl_zext<32,7>(j_1_reg_291.read());
}

void multiply_partB_2::thread_zext_ln31_1_fu_602_p1() {
    zext_ln31_1_fu_602_p1 = esl_zext<32,7>(or_ln31_1_fu_596_p2.read());
}

void multiply_partB_2::thread_zext_ln31_2_fu_650_p1() {
    zext_ln31_2_fu_650_p1 = esl_zext<32,7>(or_ln31_2_fu_644_p2.read());
}

void multiply_partB_2::thread_zext_ln31_fu_554_p1() {
    zext_ln31_fu_554_p1 = esl_zext<32,7>(or_ln31_fu_548_p2.read());
}

void multiply_partB_2::thread_zext_ln36_11_fu_620_p1() {
    zext_ln36_11_fu_620_p1 = esl_zext<14,7>(or_ln31_1_fu_596_p2.read());
}

void multiply_partB_2::thread_zext_ln36_12_fu_630_p1() {
    zext_ln36_12_fu_630_p1 = esl_zext<64,14>(add_ln36_9_fu_624_p2.read());
}

void multiply_partB_2::thread_zext_ln36_13_fu_635_p1() {
    zext_ln36_13_fu_635_p1 = esl_zext<64,14>(grp_fu_782_p3.read());
}

void multiply_partB_2::thread_zext_ln36_15_fu_668_p1() {
    zext_ln36_15_fu_668_p1 = esl_zext<14,7>(or_ln31_2_fu_644_p2.read());
}

void multiply_partB_2::thread_zext_ln36_16_fu_678_p1() {
    zext_ln36_16_fu_678_p1 = esl_zext<64,14>(add_ln36_11_fu_672_p2.read());
}

void multiply_partB_2::thread_zext_ln36_17_fu_683_p1() {
    zext_ln36_17_fu_683_p1 = esl_zext<64,14>(grp_fu_790_p3.read());
}

void multiply_partB_2::thread_zext_ln36_1_fu_495_p1() {
    zext_ln36_1_fu_495_p1 = esl_zext<64,14>(add_ln36_4_fu_489_p2.read());
}

void multiply_partB_2::thread_zext_ln36_3_fu_524_p1() {
    zext_ln36_3_fu_524_p1 = esl_zext<14,7>(k_0_0_reg_302.read());
}

void multiply_partB_2::thread_zext_ln36_4_fu_534_p1() {
    zext_ln36_4_fu_534_p1 = esl_zext<64,14>(add_ln36_5_fu_528_p2.read());
}

void multiply_partB_2::thread_zext_ln36_5_fu_539_p1() {
    zext_ln36_5_fu_539_p1 = esl_zext<64,14>(grp_fu_766_p3.read());
}

void multiply_partB_2::thread_zext_ln36_7_fu_572_p1() {
    zext_ln36_7_fu_572_p1 = esl_zext<14,7>(or_ln31_fu_548_p2.read());
}

void multiply_partB_2::thread_zext_ln36_8_fu_582_p1() {
    zext_ln36_8_fu_582_p1 = esl_zext<64,14>(add_ln36_7_fu_576_p2.read());
}

void multiply_partB_2::thread_zext_ln36_9_fu_587_p1() {
    zext_ln36_9_fu_587_p1 = esl_zext<64,14>(grp_fu_774_p3.read());
}

void multiply_partB_2::thread_zext_ln36_fu_485_p1() {
    zext_ln36_fu_485_p1 = esl_zext<14,7>(j_1_reg_291.read());
}

void multiply_partB_2::thread_zext_ln42_fu_704_p1() {
    zext_ln42_fu_704_p1 = esl_zext<32,7>(i_2_reg_314.read());
}

void multiply_partB_2::thread_zext_ln44_fu_725_p1() {
    zext_ln44_fu_725_p1 = esl_zext<32,7>(j_2_reg_337.read());
}

void multiply_partB_2::thread_zext_ln48_1_fu_761_p1() {
    zext_ln48_1_fu_761_p1 = esl_zext<64,14>(add_ln48_fu_755_p2.read());
}

void multiply_partB_2::thread_zext_ln48_fu_751_p1() {
    zext_ln48_fu_751_p1 = esl_zext<14,7>(j_2_reg_337.read());
}

void multiply_partB_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln11_fu_372_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read()))) && esl_seteq<1,1,1>(icmp_ln13_fu_393_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_393_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(ap_const_logic_0, A_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_read_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, B_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state3.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_442_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln29_fu_463_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_504_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_504_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln35_1_fu_515_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln35_2_fu_563_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln35_3_fu_611_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln35_4_fu_659_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln42_fu_708_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln44_fu_729_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, and_ln47_reg_1026.read()) && esl_seteq<1,1,1>(ap_const_logic_0, C_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<21>) ("XXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void multiply_partB_2::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_dout\" :  \"" << A_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_empty_n\" :  \"" << A_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_read\" :  \"" << A_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_dout\" :  \"" << B_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_empty_n\" :  \"" << B_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_read\" :  \"" << B_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_din\" :  \"" << C_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_full_n\" :  \"" << C_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_write\" :  \"" << C_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mA\" :  \"" << mA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nA\" :  \"" << nA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mB\" :  \"" << mB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nB\" :  \"" << nB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mC\" :  \"" << mC.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nC\" :  \"" << nC.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

